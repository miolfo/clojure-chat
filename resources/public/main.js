if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0; i < tuples.length; i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.reflect");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.define("goog.userAgent.ASSUME_IPOD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode != null && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
  return undefined;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {
    return goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0;
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.HtmlElement");
goog.dom.HtmlElement = function() {
};
goog.provide("goog.dom.TagName");
goog.require("goog.dom.HtmlElement");
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.provide("goog.dom.asserts");
goog.require("goog.asserts");
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.Location || !(o instanceof win.Element)), "Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLAnchorElement != "undefined" && typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLAnchorElement || !(o instanceof win.Location || o instanceof win.Element)), "Argument is not a HTMLAnchorElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLLinkElement != "undefined" && typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLLinkElement || !(o instanceof win.Location || o instanceof win.Element)), "Argument is not a HTMLLinkElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLImageElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLImageElement || !(o instanceof win.Element)), "Argument is not a HTMLImageElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLEmbedElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLEmbedElement || !(o instanceof win.Element)), "Argument is not a HTMLEmbedElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLFrameElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLFrameElement || !(o instanceof win.Element)), "Argument is not a HTMLFrameElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLIFrameElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLIFrameElement || !(o instanceof win.Element)), "Argument is not a HTMLIFrameElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLObjectElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLObjectElement || !(o instanceof win.Element)), "Argument is not a HTMLObjectElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLScriptElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLScriptElement || !(o instanceof win.Element)), "Argument is not a HTMLScriptElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
  } else {
    return value === undefined ? "undefined" : value === null ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  var doc = o && o.ownerDocument;
  var win = doc && (doc.defaultView || doc.parentWindow);
  return win || goog.global;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return goog.global.URL;
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return goog.global.webkitURL;
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return goog.global;
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿" + "‎Ⰰ-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-߿‏יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var result = goog.html.TrustedResourceUrl.format_(format, args);
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.format_ = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw new Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  return formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw new Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found ' + "in args: " + JSON.stringify(args));
    }
    var arg = args[id];
    if (arg instanceof goog.string.Const) {
      return goog.string.Const.unwrap(arg);
    } else {
      return encodeURIComponent(String(arg));
    }
  });
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = /^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank(#|$)/i;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, params) {
  var url = goog.html.TrustedResourceUrl.format_(format, args);
  var separator = /\?/.test(url) ? "\x26" : "?";
  for (var key in params) {
    if (params[key] == null) {
      continue;
    }
    url += separator + encodeURIComponent(key) + "\x3d" + encodeURIComponent(String(params[key]));
    separator = "\x26";
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp("^(?:audio/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|" + "image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|" + "text/csv|" + "video/(?:mpeg|mp4|ogg|webm))$", "i");
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url))) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyValue;
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (goog.isArray(value)) {
      value = goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ");
    } else {
      value = goog.html.SafeStyle.sanitizePropertyValue_(value);
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  goog.asserts.assert(!/[{;}]/.test(result), "Value does not allow [{;}].");
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeUrl.FUNCTIONS_RE_, "$1").replace(goog.html.SafeUrl.URL_RE_, "url");
  if (!goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)) {
    goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value);
    return goog.html.SafeStyle.INNOCUOUS_STRING;
  } else {
    if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
      goog.asserts.fail("String value requires balanced quotes, got: " + value);
      return goog.html.SafeStyle.INNOCUOUS_STRING;
    }
  }
  return goog.html.SafeStyle.sanitizeUrl_(value);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeUrl.URL_RE_ = new RegExp("\\b(url\\([ \t\n]*)(" + "'[ -\x26(-\\[\\]-~]*'" + '|"[ !#-\\[\\]-~]*"' + "|[!#-\x26*-\\[\\]-~]*" + ")([ \t\n]*\\))", "g");
goog.html.SafeUrl.FUNCTIONS_RE_ = new RegExp("\\b(hsl|hsla|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?)" + "\\([-0-9a-z.%, ]+\\)", "g");
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeUrl.URL_RE_, function(match, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeStyle");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.contains(selector, "\x3c")) {
    throw Error("Selector does not allow '\x3c', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and " + "strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw Error("() and [] in selector must be balanced, got: " + selector);
  }
  if (!(style instanceof goog.html.SafeStyle)) {
    style = goog.html.SafeStyle.create(style);
  }
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style) + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  var brackets = {"(":")", "[":"]"};
  var expectedBrackets = [];
  for (var i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch)) {
        if (expectedBrackets.pop() != ch) {
          return false;
        }
      }
    }
  }
  return expectedBrackets.length == 0;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error("The browser does not support sandboxed iframes.");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if (attrLower == "language" || attrLower == "src" || attrLower == "text" || attrLower == "type") {
      throw Error('Cannot set "' + attrLower + '" attribute');
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.dom.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {"MATH":true, "SCRIPT":true, "STYLE":true, "SVG":true, "TEMPLATE":true};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrap(content);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.prototype.equals = function(other) {
  return other instanceof goog.math.Coordinate && goog.math.Coordinate.equals(this, other);
};
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += Number(tx);
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || document;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    retVal = goog.dom.getElementByTagNameAndClass_(document, "*", className, opt_el);
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el; el = els[i]; i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el; el = els[i]; i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.getElementByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tag = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {
    return parent.querySelector(tag + (opt_class ? "." + opt_class : ""));
  }
  var elements = goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);
  return elements[0] || null;
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (val && val.implementsGoogStringTypedString) {
      val = val.getTypedStringValue();
    }
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "nonce":"nonce", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeightForWindow = function(win) {
  return goog.dom.getDocumentHeight_(win);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = String(args[0]);
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex; i < args.length; i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return goog.dom.createElement_(document, name);
};
goog.dom.createElement_ = function(doc, name) {
  return doc.createElement(String(name));
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);
  var tbody = table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));
  for (var i = 0; i < rows; i++) {
    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);
    for (var j = 0; j < columns; j++) {
      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.constHtmlToNode = function(var_args) {
  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);
  var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a " + "Node later, so it will be automatically balanced."), stringArray.join(""));
  return goog.dom.safeHtmlToNode(safeHtml);
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case String(goog.dom.TagName.APPLET):
    case String(goog.dom.TagName.AREA):
    case String(goog.dom.TagName.BASE):
    case String(goog.dom.TagName.BR):
    case String(goog.dom.TagName.COL):
    case String(goog.dom.TagName.COMMAND):
    case String(goog.dom.TagName.EMBED):
    case String(goog.dom.TagName.FRAME):
    case String(goog.dom.TagName.HR):
    case String(goog.dom.TagName.IMG):
    case String(goog.dom.TagName.INPUT):
    case String(goog.dom.TagName.IFRAME):
    case String(goog.dom.TagName.ISINDEX):
    case String(goog.dom.TagName.KEYGEN):
    case String(goog.dom.TagName.LINK):
    case String(goog.dom.TagName.NOFRAMES):
    case String(goog.dom.TagName.NOSCRIPT):
    case String(goog.dom.TagName.META):
    case String(goog.dom.TagName.OBJECT):
    case String(goog.dom.TagName.PARAM):
    case String(goog.dom.TagName.SCRIPT):
    case String(goog.dom.TagName.SOURCE):
    case String(goog.dom.TagName.STYLE):
    case String(goog.dom.TagName.TRACK):
    case String(goog.dom.TagName.WBR):
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return element.removeNode(false);
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return goog.dom.removeNode(element);
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return node.firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return node.lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return node.nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return node.previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return node;
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (!parent || !descendant) {
    return false;
  }
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0; i < count; i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0; i < minLength; i++) {
    var first = paths[0][i];
    for (var j = 1; j < count; j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;
};
goog.dom.getFrameContentDocument = function(frame) {
  return frame.contentDocument || frame.contentWindow.document;
};
goog.dom.getFrameContentWindow = function(frame) {
  try {
    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);
  } catch (e) {
  }
  return null;
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = String(text);
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = String(text);
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  goog.asserts.assert(element !== null, "goog.dom.getOuterHtml expects a non-null value for element");
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9")) {
    var attrNode = element.getAttributeNode("tabindex");
    return goog.isDefAndNotNull(attrNode) && attrNode.specified;
  } else {
    return element.hasAttribute("tabindex");
  }
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect;
  if (!goog.isFunction(element["getBoundingClientRect"]) || goog.userAgent.IE && element.parentElement == null) {
    rect = {"height":element.offsetHeight, "width":element.offsetWidth};
  } else {
    rect = element.getBoundingClientRect();
  }
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1; i >= 0; i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps);
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (element && !opt_includeNode) {
    element = element.parentNode;
  }
  var steps = 0;
  while (element && (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var dpiPerDppx = 96;
  var query = "(min-resolution: " + pixelRatio + "dppx)," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio * dpiPerDppx + "dpi)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.getCanvasContext2D = function(canvas) {
  return canvas.getContext("2d");
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || this.document_;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return goog.dom.createElement_(this.document_, name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;
goog.provide("goog.userAgent.product");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.userAgent");
goog.define("goog.userAgent.product.ASSUME_FIREFOX", false);
goog.define("goog.userAgent.product.ASSUME_IPHONE", false);
goog.define("goog.userAgent.product.ASSUME_IPAD", false);
goog.define("goog.userAgent.product.ASSUME_ANDROID", false);
goog.define("goog.userAgent.product.ASSUME_CHROME", false);
goog.define("goog.userAgent.product.ASSUME_SAFARI", false);
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.define("goog.json.TRY_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.errorLogger_ = goog.nullFunction;
goog.json.setErrorLogger = function(errorLogger) {
  goog.json.errorLogger_ = errorLogger;
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(s) {
  var error;
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global["JSON"]["parse"](s);
    } catch (ex) {
      error = ex;
    }
  }
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      var result = eval("(" + o + ")");
      if (error) {
        goog.json.errorLogger_("Invalid JSON: " + o, error);
      }
      return result;
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(s) {
  var error;
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global["JSON"]["parse"](s);
    } catch (ex) {
      error = ex;
    }
  }
  var result = eval("(" + s + ")");
  if (error) {
    goog.json.errorLogger_("Invalid JSON: " + s, error);
  }
  return result;
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (object == null) {
    sb.push("null");
    return;
  }
  if (typeof object == "object") {
    if (goog.isArray(object)) {
      this.serializeArray(object, sb);
      return;
    } else {
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_(object, sb);
        return;
      }
    }
  }
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(String(object));
      break;
    case "function":
      sb.push("null");
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("￿") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    var rv = goog.json.Serializer.charToJsonCharCache_[c];
    if (!rv) {
      rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1);
      goog.json.Serializer.charToJsonCharCache_[c] = rv;
    }
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0; i < l; i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.238";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  var and__3911__auto__ = typeof setTimeout !== "undefined";
  if (and__3911__auto__) {
    var and__3911__auto____$1 = setTimeout(f, 0);
    if (cljs.core.truth_(and__3911__auto____$1)) {
      return true;
    } else {
      return and__3911__auto____$1;
    }
  } else {
    return and__3911__auto__;
  }
};
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3911__auto__ = ty;
    if (cljs.core.truth_(and__3911__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3911__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__1727 = arguments.length;
  switch(G__1727) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1729 = arguments.length;
      var i__4500__auto___1730 = 0;
      while (true) {
        if (i__4500__auto___1730 < len__4499__auto___1729) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1730]);
          var G__1731 = i__4500__auto___1730 + 1;
          i__4500__auto___1730 = G__1731;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4376__auto___1732 = dimarray.length;
  var i_1733 = 0;
  while (true) {
    if (i_1733 < n__4376__auto___1732) {
      dimarray[i_1733] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__1734 = i_1733 + 1;
      i_1733 = G__1734;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq1724) {
  var G__1725 = cljs.core.first(seq1724);
  var seq1724__$1 = cljs.core.next(seq1724);
  var G__1726 = cljs.core.first(seq1724__$1);
  var seq1724__$2 = cljs.core.next(seq1724__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1725, G__1726, seq1724__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4376__auto___1735 = len;
  var i_1736 = 0;
  while (true) {
    if (i_1736 < n__4376__auto___1735) {
      new_arr[i_1736] = arr[i_1736];
      var G__1737 = i_1736 + 1;
      i_1736 = G__1737;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__1738 = i + 1;
      i = G__1738;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__1743 = arguments.length;
  switch(G__1743) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1746 = arguments.length;
      var i__4500__auto___1747 = 0;
      while (true) {
        if (i__4500__auto___1747 < len__4499__auto___1746) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1747]);
          var G__1748 = i__4500__auto___1747 + 1;
          i__4500__auto___1747 = G__1748;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__3922__auto__ = cljs.core.array_QMARK_(array);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e1744) {
    var e_1749 = e1744;
    cljs.core.maybe_warn(e_1749);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq1740) {
  var G__1741 = cljs.core.first(seq1740);
  var seq1740__$1 = cljs.core.next(seq1740);
  var G__1742 = cljs.core.first(seq1740__$1);
  var seq1740__$2 = cljs.core.next(seq1740__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1741, G__1742, seq1740__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__1755 = arguments.length;
  switch(G__1755) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1758 = arguments.length;
      var i__4500__auto___1759 = 0;
      while (true) {
        if (i__4500__auto___1759 < len__4499__auto___1758) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1759]);
          var G__1760 = i__4500__auto___1759 + 1;
          i__4500__auto___1759 = G__1760;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__3922__auto__ = cljs.core.array_QMARK_(array);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e1756) {
    var e_1761 = e1756;
    cljs.core.maybe_warn(e_1761);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq1751) {
  var G__1752 = cljs.core.first(seq1751);
  var seq1751__$1 = cljs.core.next(seq1751);
  var G__1753 = cljs.core.first(seq1751__$1);
  var seq1751__$2 = cljs.core.next(seq1751__$1);
  var G__1754 = cljs.core.first(seq1751__$2);
  var seq1751__$3 = cljs.core.next(seq1751__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1752, G__1753, G__1754, seq1751__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__1766 = arguments.length;
  switch(G__1766) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1768 = arguments.length;
      var i__4500__auto___1769 = 0;
      while (true) {
        if (i__4500__auto___1769 < len__4499__auto___1768) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1769]);
          var G__1770 = i__4500__auto___1769 + 1;
          i__4500__auto___1769 = G__1770;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__3922__auto__ = cljs.core.array_QMARK_(array);
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq1763) {
  var G__1764 = cljs.core.first(seq1763);
  var seq1763__$1 = cljs.core.next(seq1763);
  var G__1765 = cljs.core.first(seq1763__$1);
  var seq1763__$2 = cljs.core.next(seq1763__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1764, G__1765, seq1763__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__1776 = arguments.length;
  switch(G__1776) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1778 = arguments.length;
      var i__4500__auto___1779 = 0;
      while (true) {
        if (i__4500__auto___1779 < len__4499__auto___1778) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1779]);
          var G__1780 = i__4500__auto___1779 + 1;
          i__4500__auto___1779 = G__1780;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__3922__auto__ = cljs.core.array_QMARK_(array);
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq1772) {
  var G__1773 = cljs.core.first(seq1772);
  var seq1772__$1 = cljs.core.next(seq1772);
  var G__1774 = cljs.core.first(seq1772__$1);
  var seq1772__$2 = cljs.core.next(seq1772__$1);
  var G__1775 = cljs.core.first(seq1772__$2);
  var seq1772__$3 = cljs.core.next(seq1772__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1773, G__1774, G__1775, seq1772__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__1785 = arguments.length;
  switch(G__1785) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1787 = arguments.length;
      var i__4500__auto___1788 = 0;
      while (true) {
        if (i__4500__auto___1788 < len__4499__auto___1787) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1788]);
          var G__1789 = i__4500__auto___1788 + 1;
          i__4500__auto___1788 = G__1789;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq1782) {
  var G__1783 = cljs.core.first(seq1782);
  var seq1782__$1 = cljs.core.next(seq1782);
  var G__1784 = cljs.core.first(seq1782__$1);
  var seq1782__$2 = cljs.core.next(seq1782__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1783, G__1784, seq1782__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__1795 = arguments.length;
  switch(G__1795) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1797 = arguments.length;
      var i__4500__auto___1798 = 0;
      while (true) {
        if (i__4500__auto___1798 < len__4499__auto___1797) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1798]);
          var G__1799 = i__4500__auto___1798 + 1;
          i__4500__auto___1798 = G__1799;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq1791) {
  var G__1792 = cljs.core.first(seq1791);
  var seq1791__$1 = cljs.core.next(seq1791);
  var G__1793 = cljs.core.first(seq1791__$1);
  var seq1791__$2 = cljs.core.next(seq1791__$1);
  var G__1794 = cljs.core.first(seq1791__$2);
  var seq1791__$3 = cljs.core.next(seq1791__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1792, G__1793, G__1794, seq1791__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__1801 = arguments.length;
  switch(G__1801) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1806 = arguments.length;
  var i__4500__auto___1807 = 0;
  while (true) {
    if (i__4500__auto___1807 < len__4499__auto___1806) {
      args__4502__auto__.push(arguments[i__4500__auto___1807]);
      var G__1808 = i__4500__auto___1807 + 1;
      i__4500__auto___1807 = G__1808;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq1803) {
  var G__1804 = cljs.core.first(seq1803);
  var seq1803__$1 = cljs.core.next(seq1803);
  var G__1805 = cljs.core.first(seq1803__$1);
  var seq1803__$2 = cljs.core.next(seq1803__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1804, G__1805, seq1803__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__1810 = arguments.length;
  switch(G__1810) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4212__auto__.call(null, this$, a);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4212__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4212__auto__.call(null, this$, a, b);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4212__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4212__auto__.call(null, this$, a, b, c);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4212__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4212__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4212__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4212__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4212__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4212__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._invoke[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4212__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4212__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4212__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4211__auto__ = value == null ? null : value;
    var m__4212__auto__ = cljs.core._clone[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4212__auto__.call(null, value);
    } else {
      var m__4212__auto____$1 = cljs.core._clone["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4212__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._count[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._count["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._empty[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._empty["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._conj[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4212__auto__.call(null, coll, o);
    } else {
      var m__4212__auto____$1 = cljs.core._conj["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4212__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__1813 = arguments.length;
  switch(G__1813) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._nth[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4212__auto__.call(null, coll, n);
    } else {
      var m__4212__auto____$1 = cljs.core._nth["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4212__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._nth[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4212__auto__.call(null, coll, n, not_found);
    } else {
      var m__4212__auto____$1 = cljs.core._nth["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4212__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._first[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._first["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._rest[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._rest["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._next[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._next["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__1816 = arguments.length;
  switch(G__1816) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._lookup[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4212__auto__.call(null, o, k);
    } else {
      var m__4212__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4212__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._lookup[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4212__auto__.call(null, o, k, not_found);
    } else {
      var m__4212__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4212__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto__.call(null, coll, k);
    } else {
      var m__4212__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._assoc[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4212__auto__.call(null, coll, k, v);
    } else {
      var m__4212__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4212__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._find[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto__.call(null, coll, k);
    } else {
      var m__4212__auto____$1 = cljs.core._find["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._dissoc[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto__.call(null, coll, k);
    } else {
      var m__4212__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4212__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._key[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._key["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._val[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._val["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._disjoin[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4212__auto__.call(null, coll, v);
    } else {
      var m__4212__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4212__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._peek[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._peek["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._pop[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._pop["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._assoc_n[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4212__auto__.call(null, coll, n, val);
    } else {
      var m__4212__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4212__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._deref[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto__.call(null, o);
    } else {
      var m__4212__auto____$1 = cljs.core._deref["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4212__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4212__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4212__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._meta[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto__.call(null, o);
    } else {
      var m__4212__auto____$1 = cljs.core._meta["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._with_meta[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4212__auto__.call(null, o, meta);
    } else {
      var m__4212__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4212__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__1819 = arguments.length;
  switch(G__1819) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._reduce[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4212__auto__.call(null, coll, f);
    } else {
      var m__4212__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4212__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._reduce[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4212__auto__.call(null, coll, f, start);
    } else {
      var m__4212__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4212__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4212__auto__.call(null, coll, f, init);
    } else {
      var m__4212__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4212__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._equiv[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4212__auto__.call(null, o, other);
    } else {
      var m__4212__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4212__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._hash[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto__.call(null, o);
    } else {
      var m__4212__auto____$1 = cljs.core._hash["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._seq[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto__.call(null, o);
    } else {
      var m__4212__auto____$1 = cljs.core._seq["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4212__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._rseq[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4212__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4212__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4212__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4212__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4212__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4212__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._entry_key[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4212__auto__.call(null, coll, entry);
    } else {
      var m__4212__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4212__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._comparator[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4211__auto__ = writer == null ? null : writer;
    var m__4212__auto__ = cljs.core._write[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4212__auto__.call(null, writer, s);
    } else {
      var m__4212__auto____$1 = cljs.core._write["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4212__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4211__auto__ = writer == null ? null : writer;
    var m__4212__auto__ = cljs.core._flush[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4212__auto__.call(null, writer);
    } else {
      var m__4212__auto____$1 = cljs.core._flush["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4212__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._pr_writer[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4212__auto__.call(null, o, writer, opts);
    } else {
      var m__4212__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4212__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto__.call(null, x);
    } else {
      var m__4212__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._notify_watches[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4212__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4212__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4212__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._add_watch[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4212__auto__.call(null, this$, key, f);
    } else {
      var m__4212__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4212__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core._remove_watch[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4212__auto__.call(null, this$, key);
    } else {
      var m__4212__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4212__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._as_transient[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4212__auto__.call(null, tcoll, val);
    } else {
      var m__4212__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4212__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4212__auto__.call(null, tcoll);
    } else {
      var m__4212__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4212__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4212__auto__.call(null, tcoll, key, val);
    } else {
      var m__4212__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4212__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4212__auto__.call(null, tcoll, key);
    } else {
      var m__4212__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4212__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4212__auto__.call(null, tcoll, n, val);
    } else {
      var m__4212__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4212__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4212__auto__.call(null, tcoll);
    } else {
      var m__4212__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4212__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4211__auto__ = tcoll == null ? null : tcoll;
    var m__4212__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4212__auto__.call(null, tcoll, v);
    } else {
      var m__4212__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4212__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._compare[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4212__auto__.call(null, x, y);
    } else {
      var m__4212__auto____$1 = cljs.core._compare["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4212__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._drop_first[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._chunked_first[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._chunked_next[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._name[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto__.call(null, x);
    } else {
      var m__4212__auto____$1 = cljs.core._name["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._namespace[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto__.call(null, x);
    } else {
      var m__4212__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4212__auto__.call(null, o, new_value);
    } else {
      var m__4212__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4212__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__1822 = arguments.length;
  switch(G__1822) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4212__auto__.call(null, o, f);
    } else {
      var m__4212__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4212__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4212__auto__.call(null, o, f, a);
    } else {
      var m__4212__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4212__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4212__auto__.call(null, o, f, a, b);
    } else {
      var m__4212__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4212__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4212__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4212__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4212__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4211__auto__ = o == null ? null : o;
    var m__4212__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4212__auto__.call(null, o, new_value);
    } else {
      var m__4212__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4212__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4211__auto__ = coll == null ? null : coll;
    var m__4212__auto__ = cljs.core._iterator[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto__.call(null, coll);
    } else {
      var m__4212__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4212__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__1824 = i + 2;
        var G__1825 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__1824;
        h1 = G__1825;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__1828 = i + 1;
          var G__1829 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__1828;
          hash = G__1829;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__1833 = o;
        switch(G__1833) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = cljs.core.not(a.ns);
      if (and__3911__auto__) {
        return b.ns;
      } else {
        return and__3911__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__1835 = a.ns;
            var G__1836 = b.ns;
            return goog.array.defaultCompare(G__1835, G__1836);
          }();
          if (0 === nsc) {
            var G__1837 = a.name;
            var G__1838 = b.name;
            return goog.array.defaultCompare(G__1837, G__1838);
          } else {
            return nsc;
          }
        }
      } else {
        var G__1839 = a.name;
        var G__1840 = b.name;
        return goog.array.defaultCompare(G__1839, G__1840);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__1842 = null;
  var G__1842__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__1842__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__1842 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__1842__2.call(this, self__, coll);
      case 3:
        return G__1842__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1842.cljs$core$IFn$_invoke$arity$2 = G__1842__2;
  G__1842.cljs$core$IFn$_invoke$arity$3 = G__1842__3;
  return G__1842;
}();
cljs.core.Symbol.prototype.apply = function(self__, args1841) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args1841)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4030__auto__ = self__._hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__1844 = arguments.length;
  switch(G__1844) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__1889 = null;
  var G__1889__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1847 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1847.cljs$core$IFn$_invoke$arity$0 ? fexpr__1847.cljs$core$IFn$_invoke$arity$0() : fexpr__1847.call(null);
  };
  var G__1889__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1848 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1848.cljs$core$IFn$_invoke$arity$1 ? fexpr__1848.cljs$core$IFn$_invoke$arity$1(a) : fexpr__1848.call(null, a);
  };
  var G__1889__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1849 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1849.cljs$core$IFn$_invoke$arity$2 ? fexpr__1849.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__1849.call(null, a, b);
  };
  var G__1889__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1850 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1850.cljs$core$IFn$_invoke$arity$3 ? fexpr__1850.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__1850.call(null, a, b, c);
  };
  var G__1889__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1851 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1851.cljs$core$IFn$_invoke$arity$4 ? fexpr__1851.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__1851.call(null, a, b, c, d);
  };
  var G__1889__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1852 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1852.cljs$core$IFn$_invoke$arity$5 ? fexpr__1852.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__1852.call(null, a, b, c, d, e);
  };
  var G__1889__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1853 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1853.cljs$core$IFn$_invoke$arity$6 ? fexpr__1853.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__1853.call(null, a, b, c, d, e, f);
  };
  var G__1889__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1854 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1854.cljs$core$IFn$_invoke$arity$7 ? fexpr__1854.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__1854.call(null, a, b, c, d, e, f, g);
  };
  var G__1889__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1855 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1855.cljs$core$IFn$_invoke$arity$8 ? fexpr__1855.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__1855.call(null, a, b, c, d, e, f, g, h);
  };
  var G__1889__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1856 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1856.cljs$core$IFn$_invoke$arity$9 ? fexpr__1856.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__1856.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__1889__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1857 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1857.cljs$core$IFn$_invoke$arity$10 ? fexpr__1857.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__1857.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__1889__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1858 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1858.cljs$core$IFn$_invoke$arity$11 ? fexpr__1858.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__1858.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__1889__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1859 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1859.cljs$core$IFn$_invoke$arity$12 ? fexpr__1859.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__1859.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__1889__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1860 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1860.cljs$core$IFn$_invoke$arity$13 ? fexpr__1860.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__1860.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__1889__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1861 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1861.cljs$core$IFn$_invoke$arity$14 ? fexpr__1861.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__1861.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__1889__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1862 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1862.cljs$core$IFn$_invoke$arity$15 ? fexpr__1862.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__1862.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__1889__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1863 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1863.cljs$core$IFn$_invoke$arity$16 ? fexpr__1863.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__1863.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__1889__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1864 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1864.cljs$core$IFn$_invoke$arity$17 ? fexpr__1864.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__1864.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__1889__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1865 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1865.cljs$core$IFn$_invoke$arity$18 ? fexpr__1865.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__1865.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__1889__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1866 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1866.cljs$core$IFn$_invoke$arity$19 ? fexpr__1866.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__1866.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__1889__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__1867 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__1867.cljs$core$IFn$_invoke$arity$20 ? fexpr__1867.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__1867.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__1889__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__1889 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__1889__1.call(this, self__);
      case 2:
        return G__1889__2.call(this, self__, a);
      case 3:
        return G__1889__3.call(this, self__, a, b);
      case 4:
        return G__1889__4.call(this, self__, a, b, c);
      case 5:
        return G__1889__5.call(this, self__, a, b, c, d);
      case 6:
        return G__1889__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__1889__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__1889__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__1889__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__1889__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__1889__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__1889__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__1889__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__1889__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__1889__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__1889__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__1889__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__1889__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__1889__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__1889__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__1889__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__1889__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1889.cljs$core$IFn$_invoke$arity$1 = G__1889__1;
  G__1889.cljs$core$IFn$_invoke$arity$2 = G__1889__2;
  G__1889.cljs$core$IFn$_invoke$arity$3 = G__1889__3;
  G__1889.cljs$core$IFn$_invoke$arity$4 = G__1889__4;
  G__1889.cljs$core$IFn$_invoke$arity$5 = G__1889__5;
  G__1889.cljs$core$IFn$_invoke$arity$6 = G__1889__6;
  G__1889.cljs$core$IFn$_invoke$arity$7 = G__1889__7;
  G__1889.cljs$core$IFn$_invoke$arity$8 = G__1889__8;
  G__1889.cljs$core$IFn$_invoke$arity$9 = G__1889__9;
  G__1889.cljs$core$IFn$_invoke$arity$10 = G__1889__10;
  G__1889.cljs$core$IFn$_invoke$arity$11 = G__1889__11;
  G__1889.cljs$core$IFn$_invoke$arity$12 = G__1889__12;
  G__1889.cljs$core$IFn$_invoke$arity$13 = G__1889__13;
  G__1889.cljs$core$IFn$_invoke$arity$14 = G__1889__14;
  G__1889.cljs$core$IFn$_invoke$arity$15 = G__1889__15;
  G__1889.cljs$core$IFn$_invoke$arity$16 = G__1889__16;
  G__1889.cljs$core$IFn$_invoke$arity$17 = G__1889__17;
  G__1889.cljs$core$IFn$_invoke$arity$18 = G__1889__18;
  G__1889.cljs$core$IFn$_invoke$arity$19 = G__1889__19;
  G__1889.cljs$core$IFn$_invoke$arity$20 = G__1889__20;
  G__1889.cljs$core$IFn$_invoke$arity$21 = G__1889__21;
  G__1889.cljs$core$IFn$_invoke$arity$22 = G__1889__22;
  return G__1889;
}();
cljs.core.Var.prototype.apply = function(self__, args1846) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args1846)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__1868 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1868.cljs$core$IFn$_invoke$arity$0 ? fexpr__1868.cljs$core$IFn$_invoke$arity$0() : fexpr__1868.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__1869 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1869.cljs$core$IFn$_invoke$arity$1 ? fexpr__1869.cljs$core$IFn$_invoke$arity$1(a) : fexpr__1869.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__1870 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1870.cljs$core$IFn$_invoke$arity$2 ? fexpr__1870.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__1870.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__1871 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1871.cljs$core$IFn$_invoke$arity$3 ? fexpr__1871.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__1871.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__1872 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1872.cljs$core$IFn$_invoke$arity$4 ? fexpr__1872.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__1872.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__1873 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1873.cljs$core$IFn$_invoke$arity$5 ? fexpr__1873.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__1873.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__1874 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1874.cljs$core$IFn$_invoke$arity$6 ? fexpr__1874.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__1874.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__1875 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1875.cljs$core$IFn$_invoke$arity$7 ? fexpr__1875.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__1875.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__1876 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1876.cljs$core$IFn$_invoke$arity$8 ? fexpr__1876.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__1876.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__1877 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1877.cljs$core$IFn$_invoke$arity$9 ? fexpr__1877.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__1877.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__1878 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1878.cljs$core$IFn$_invoke$arity$10 ? fexpr__1878.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__1878.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__1879 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1879.cljs$core$IFn$_invoke$arity$11 ? fexpr__1879.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__1879.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__1880 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1880.cljs$core$IFn$_invoke$arity$12 ? fexpr__1880.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__1880.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__1881 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1881.cljs$core$IFn$_invoke$arity$13 ? fexpr__1881.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__1881.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__1882 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1882.cljs$core$IFn$_invoke$arity$14 ? fexpr__1882.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__1882.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__1883 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1883.cljs$core$IFn$_invoke$arity$15 ? fexpr__1883.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__1883.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__1884 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1884.cljs$core$IFn$_invoke$arity$16 ? fexpr__1884.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__1884.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__1885 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1885.cljs$core$IFn$_invoke$arity$17 ? fexpr__1885.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__1885.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__1886 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1886.cljs$core$IFn$_invoke$arity$18 ? fexpr__1886.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__1886.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__1887 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1887.cljs$core$IFn$_invoke$arity$19 ? fexpr__1887.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__1887.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__1888 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__1888.cljs$core$IFn$_invoke$arity$20 ? fexpr__1888.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__1888.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__1900 = arguments.length;
  switch(G__1900) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___1902 = arguments.length;
      var i__4500__auto___1903 = 0;
      while (true) {
        if (i__4500__auto___1903 < len__4499__auto___1902) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___1903]);
          var G__1904 = i__4500__auto___1903 + 1;
          i__4500__auto___1903 = G__1904;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__1905 = y;
        var G__1906 = cljs.core.first(more);
        var G__1907 = cljs.core.next(more);
        x = G__1905;
        y = G__1906;
        more = G__1907;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq1897) {
  var G__1898 = cljs.core.first(seq1897);
  var seq1897__$1 = cljs.core.next(seq1897);
  var G__1899 = cljs.core.first(seq1897__$1);
  var seq1897__$2 = cljs.core.next(seq1897__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1898, G__1899, seq1897__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__1908 = n + 1;
      var G__1909 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__1910 = cljs.core.next(coll__$1);
      n = G__1908;
      hash_code = G__1909;
      coll__$1 = G__1910;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__1911 = n + 1;
      var G__1912 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__1913 = cljs.core.next(coll__$1);
      n = G__1911;
      hash_code = G__1912;
      coll__$1 = G__1913;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
var G__1914_1917 = cljs.core._count;
var G__1915_1918 = "null";
var G__1916_1919 = function(G__1914_1917, G__1915_1918) {
  return function(_) {
    return 0;
  };
}(G__1914_1917, G__1915_1918);
goog.object.set(G__1914_1917, G__1915_1918, G__1916_1919);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__1920 = this$__$1.valueOf();
    var G__1921 = other.valueOf();
    return goog.array.defaultCompare(G__1920, G__1921);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__4211__auto__ = inst == null ? null : inst;
    var m__4212__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4212__auto__.call(null, inst);
    } else {
      var m__4212__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__4212__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
var G__1923_1926 = cljs.core._equiv;
var G__1924_1927 = "number";
var G__1925_1928 = function(G__1923_1926, G__1924_1927) {
  return function(x, o) {
    return x === o;
  };
}(G__1923_1926, G__1924_1927);
goog.object.set(G__1923_1926, G__1924_1927, G__1925_1928);
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
var G__1929_1932 = cljs.core._meta;
var G__1930_1933 = "function";
var G__1931_1934 = function(G__1929_1932, G__1930_1933) {
  return function(_) {
    return null;
  };
}(G__1929_1932, G__1930_1933);
goog.object.set(G__1929_1932, G__1930_1933, G__1931_1934);
goog.object.set(cljs.core.IHash, "_", true);
var G__1935_1938 = cljs.core._hash;
var G__1936_1939 = "_";
var G__1937_1940 = function(G__1935_1938, G__1936_1939) {
  return function(o) {
    return goog.getUid(o);
  };
}(G__1935_1938, G__1936_1939);
goog.object.set(G__1935_1938, G__1936_1939, G__1937_1940);
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__1942 = arguments.length;
  switch(G__1942) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__1943 = val;
          var G__1944 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1943, G__1944) : f.call(null, G__1943, G__1944);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__1950 = nval;
          var G__1951 = n + 1;
          val = G__1950;
          n = G__1951;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__1945 = val__$1;
        var G__1946 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1945, G__1946) : f.call(null, G__1945, G__1946);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__1952 = nval;
        var G__1953 = n + 1;
        val__$1 = G__1952;
        n = G__1953;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__1947 = val__$1;
        var G__1948 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1947, G__1948) : f.call(null, G__1947, G__1948);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__1954 = nval;
        var G__1955 = n + 1;
        val__$1 = G__1954;
        n = G__1955;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__1957 = arguments.length;
  switch(G__1957) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__1958 = val;
          var G__1959 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1958, G__1959) : f.call(null, G__1958, G__1959);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__1965 = nval;
          var G__1966 = n + 1;
          val = G__1965;
          n = G__1966;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__1960 = val__$1;
        var G__1961 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1960, G__1961) : f.call(null, G__1960, G__1961);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__1967 = nval;
        var G__1968 = n + 1;
        val__$1 = G__1967;
        n = G__1968;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__1962 = val__$1;
        var G__1963 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1962, G__1963) : f.call(null, G__1962, G__1963);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__1969 = nval;
        var G__1970 = n + 1;
        val__$1 = G__1969;
        n = G__1970;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__1974 = arguments.length;
  switch(G__1974) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4006__auto__ = 0;
      var y__4007__auto__ = start + len;
      return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__1976 = idx + 1;
          idx = G__1976;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__1978 = arguments.length;
  switch(G__1978) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4009__auto__ = len - 1;
      var y__4010__auto__ = start;
      return x__4009__auto__ < y__4010__auto__ ? x__4009__auto__ : y__4010__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__1980 = idx - 1;
          idx = G__1980;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__1981 = null;
  var G__1981__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__1981__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__1981 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__1981__1.call(this, x);
      case 2:
        return G__1981__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1981.cljs$core$IFn$_invoke$arity$1 = G__1981__1;
  G__1981.cljs$core$IFn$_invoke$arity$2 = G__1981__2;
  return G__1981;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__1982 = null;
  var G__1982__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__1982__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__1982 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__1982__1.call(this, x);
      case 2:
        return G__1982__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1982.cljs$core$IFn$_invoke$arity$1 = G__1982__1;
  G__1982.cljs$core$IFn$_invoke$arity$2 = G__1982__2;
  return G__1982;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4006__auto__ = 0;
  var y__4007__auto__ = self__.arr.length - self__.i;
  return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
var G__1983_1986 = cljs.core.IndexedSeq.prototype;
var G__1984_1987 = cljs.core.ITER_SYMBOL;
var G__1985_1988 = function(G__1983_1986, G__1984_1987) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__1983_1986, G__1984_1987);
goog.object.set(G__1983_1986, G__1984_1987, G__1985_1988);
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__1990 = arguments.length;
  switch(G__1990) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__1993 = arguments.length;
  switch(G__1993) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__1995 = null;
  var G__1995__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__1995__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__1995 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__1995__1.call(this, x);
      case 2:
        return G__1995__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1995.cljs$core$IFn$_invoke$arity$1 = G__1995__1;
  G__1995.cljs$core$IFn$_invoke$arity$2 = G__1995__2;
  return G__1995;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__1996 = null;
  var G__1996__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__1996__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__1996 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__1996__1.call(this, x);
      case 2:
        return G__1996__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__1996.cljs$core$IFn$_invoke$arity$1 = G__1996__1;
  G__1996.cljs$core$IFn$_invoke$arity$2 = G__1996__2;
  return G__1996;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
var G__1997_2000 = cljs.core.RSeq.prototype;
var G__1998_2001 = cljs.core.ITER_SYMBOL;
var G__1999_2002 = function(G__1997_2000, G__1998_2001) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__1997_2000, G__1998_2001);
goog.object.set(G__1997_2000, G__1998_2001, G__1999_2002);
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__2003 = sn;
      s = G__2003;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
var G__2004_2007 = cljs.core._equiv;
var G__2005_2008 = "_";
var G__2006_2009 = function(G__2004_2007, G__2005_2008) {
  return function(x, o) {
    return x === o;
  };
}(G__2004_2007, G__2005_2008);
goog.object.set(G__2004_2007, G__2005_2008, G__2006_2009);
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__2014 = arguments.length;
  switch(G__2014) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2016 = arguments.length;
      var i__4500__auto___2017 = 0;
      while (true) {
        if (i__4500__auto___2017 < len__4499__auto___2016) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2017]);
          var G__2018 = i__4500__auto___2017 + 1;
          i__4500__auto___2017 = G__2018;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__2019 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__2020 = cljs.core.first(xs);
      var G__2021 = cljs.core.next(xs);
      coll = G__2019;
      x = G__2020;
      xs = G__2021;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq2011) {
  var G__2012 = cljs.core.first(seq2011);
  var seq2011__$1 = cljs.core.next(seq2011);
  var G__2013 = cljs.core.first(seq2011__$1);
  var seq2011__$2 = cljs.core.next(seq2011__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2012, G__2013, seq2011__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__2022 = cljs.core.next(s);
      var G__2023 = acc + 1;
      s = G__2022;
      acc = G__2023;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__2027 = arguments.length;
  switch(G__2027) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2029 = cljs.core.next(coll);
            var G__2030 = n - 1;
            coll = G__2029;
            n = G__2030;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2031 = cljs.core.next(coll);
            var G__2032 = n - 1;
            var G__2033 = not_found;
            coll = G__2031;
            n = G__2032;
            not_found = G__2033;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__2035 = arguments.length;
  switch(G__2035) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__3922__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__3922__auto__) {
                return or__3922__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__3922__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__3922__auto__) {
                return or__3922__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__4655__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__4655__auto__) {
      var xs__$1 = temp__4655__auto__;
      var G__2045 = n__$1 - 1;
      var G__2046 = cljs.core.rest(xs__$1);
      n__$1 = G__2045;
      xs = G__2046;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__2048 = arguments.length;
  switch(G__2048) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k >= 0 && k < o.length) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k >= 0 && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__2057 = arguments.length;
  switch(G__2057) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2059 = arguments.length;
      var i__4500__auto___2060 = 0;
      while (true) {
        if (i__4500__auto___2060 < len__4499__auto___2059) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2060]);
          var G__2061 = i__4500__auto___2060 + 1;
          i__4500__auto___2060 = G__2061;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__2062 = ret;
      var G__2063 = cljs.core.first(kvs);
      var G__2064 = cljs.core.second(kvs);
      var G__2065 = cljs.core.nnext(kvs);
      coll = G__2062;
      k = G__2063;
      v = G__2064;
      kvs = G__2065;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq2053) {
  var G__2054 = cljs.core.first(seq2053);
  var seq2053__$1 = cljs.core.next(seq2053);
  var G__2055 = cljs.core.first(seq2053__$1);
  var seq2053__$2 = cljs.core.next(seq2053__$1);
  var G__2056 = cljs.core.first(seq2053__$2);
  var seq2053__$3 = cljs.core.next(seq2053__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2054, G__2055, G__2056, seq2053__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__2070 = arguments.length;
  switch(G__2070) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2072 = arguments.length;
      var i__4500__auto___2073 = 0;
      while (true) {
        if (i__4500__auto___2073 < len__4499__auto___2072) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2073]);
          var G__2074 = i__4500__auto___2073 + 1;
          i__4500__auto___2073 = G__2074;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2075 = ret;
        var G__2076 = cljs.core.first(ks);
        var G__2077 = cljs.core.next(ks);
        coll = G__2075;
        k = G__2076;
        ks = G__2077;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq2067) {
  var G__2068 = cljs.core.first(seq2067);
  var seq2067__$1 = cljs.core.next(seq2067);
  var G__2069 = cljs.core.first(seq2067__$1);
  var seq2067__$2 = cljs.core.next(seq2067__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2068, G__2069, seq2067__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__3922__auto__ = goog.isFunction(f);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__2081 = null;
  var G__2081__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__2081__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__2081__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__2081__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__2081__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__2081__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__2081__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__2081__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__2081__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2081__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2081__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2081__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2081__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2081__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2081__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2081__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2081__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2081__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2081__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2081__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2081__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2081__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2081 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2081__1.call(this, self__);
      case 2:
        return G__2081__2.call(this, self__, a);
      case 3:
        return G__2081__3.call(this, self__, a, b);
      case 4:
        return G__2081__4.call(this, self__, a, b, c);
      case 5:
        return G__2081__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2081__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2081__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2081__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2081__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2081__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2081__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2081__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2081__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2081__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2081__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2081__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2081__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2081__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2081__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2081__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2081__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2081__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2081.cljs$core$IFn$_invoke$arity$1 = G__2081__1;
  G__2081.cljs$core$IFn$_invoke$arity$2 = G__2081__2;
  G__2081.cljs$core$IFn$_invoke$arity$3 = G__2081__3;
  G__2081.cljs$core$IFn$_invoke$arity$4 = G__2081__4;
  G__2081.cljs$core$IFn$_invoke$arity$5 = G__2081__5;
  G__2081.cljs$core$IFn$_invoke$arity$6 = G__2081__6;
  G__2081.cljs$core$IFn$_invoke$arity$7 = G__2081__7;
  G__2081.cljs$core$IFn$_invoke$arity$8 = G__2081__8;
  G__2081.cljs$core$IFn$_invoke$arity$9 = G__2081__9;
  G__2081.cljs$core$IFn$_invoke$arity$10 = G__2081__10;
  G__2081.cljs$core$IFn$_invoke$arity$11 = G__2081__11;
  G__2081.cljs$core$IFn$_invoke$arity$12 = G__2081__12;
  G__2081.cljs$core$IFn$_invoke$arity$13 = G__2081__13;
  G__2081.cljs$core$IFn$_invoke$arity$14 = G__2081__14;
  G__2081.cljs$core$IFn$_invoke$arity$15 = G__2081__15;
  G__2081.cljs$core$IFn$_invoke$arity$16 = G__2081__16;
  G__2081.cljs$core$IFn$_invoke$arity$17 = G__2081__17;
  G__2081.cljs$core$IFn$_invoke$arity$18 = G__2081__18;
  G__2081.cljs$core$IFn$_invoke$arity$19 = G__2081__19;
  G__2081.cljs$core$IFn$_invoke$arity$20 = G__2081__20;
  G__2081.cljs$core$IFn$_invoke$arity$21 = G__2081__21;
  G__2081.cljs$core$IFn$_invoke$arity$22 = G__2081__22;
  return G__2081;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args2080) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2080)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__3911__auto__ = !(o == null);
    if (and__3911__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__3911__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__2088 = arguments.length;
  switch(G__2088) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2090 = arguments.length;
      var i__4500__auto___2091 = 0;
      while (true) {
        if (i__4500__auto___2091 < len__4499__auto___2090) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2091]);
          var G__2092 = i__4500__auto___2091 + 1;
          i__4500__auto___2091 = G__2092;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2093 = ret;
        var G__2094 = cljs.core.first(ks);
        var G__2095 = cljs.core.next(ks);
        coll = G__2093;
        k = G__2094;
        ks = G__2095;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq2085) {
  var G__2086 = cljs.core.first(seq2085);
  var seq2085__$1 = cljs.core.next(seq2085);
  var G__2087 = cljs.core.first(seq2085__$1);
  var seq2085__$2 = cljs.core.next(seq2085__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2086, G__2087, seq2085__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__2109 = arguments.length;
  switch(G__2109) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2113 = arguments.length;
      var i__4500__auto___2114 = 0;
      while (true) {
        if (i__4500__auto___2114 < len__4499__auto___2113) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2114]);
          var G__2115 = i__4500__auto___2114 + 1;
          i__4500__auto___2114 = G__2115;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4515__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq2108) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2108));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2116 = i__$1 + 1;
      var G__2117 = j__$1 + 1;
      var G__2118 = len__$1 - 1;
      i__$1 = G__2116;
      j__$1 = G__2117;
      len__$1 = G__2118;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2119 = i__$1 - 1;
      var G__2120 = j__$1 - 1;
      var G__2121 = len__$1 - 1;
      i__$1 = G__2119;
      j__$1 = G__2120;
      len__$1 = G__2121;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__3922__auto__ = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    return cljs.core.array_QMARK_(s) || typeof s === "string";
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__3922__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__2133 = arguments.length;
  switch(G__2133) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2135 = arguments.length;
      var i__4500__auto___2136 = 0;
      while (true) {
        if (i__4500__auto___2136 < len__4499__auto___2135) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2136]);
          var G__2137 = i__4500__auto___2136 + 1;
          i__4500__auto___2136 = G__2137;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__2138 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__2139 = etc;
          s = G__2138;
          xs = G__2139;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq2130) {
  var G__2131 = cljs.core.first(seq2130);
  var seq2130__$1 = cljs.core.next(seq2130);
  var G__2132 = cljs.core.first(seq2130__$1);
  var seq2130__$2 = cljs.core.next(seq2130__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2131, G__2132, seq2130__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__2142 = arguments.length;
  switch(G__2142) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__2144 = xs;
      var G__2145 = ys;
      var G__2146 = len;
      var G__2147 = n + 1;
      xs = G__2144;
      ys = G__2145;
      len = G__2146;
      n = G__2147;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__2149 = arguments.length;
  switch(G__2149) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    var G__2150_2153 = a;
    var G__2151_2154 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__2150_2153, G__2151_2154);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__2156 = arguments.length;
  switch(G__2156) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__2158 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__2159 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__2157 = cljs.core.fn__GT_comparator(comp);
    return fexpr__2157.cljs$core$IFn$_invoke$arity$2 ? fexpr__2157.cljs$core$IFn$_invoke$arity$2(G__2158, G__2159) : fexpr__2157.call(null, G__2158, G__2159);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__2162 = arguments.length;
  switch(G__2162) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__2163 = val__$1;
        var G__2164 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2163, G__2164) : f.call(null, G__2163, G__2164);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2166 = nval;
        var G__2167 = cljs.core.next(coll__$1);
        val__$1 = G__2166;
        coll__$1 = G__2167;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__2169 = arguments.length;
  switch(G__2169) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__2170 = acc;
          var G__2171 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2170, G__2171) : f.call(null, G__2170, G__2171);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__2175 = nacc;
          acc = G__2175;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__2172 = acc;
        var G__2173 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2172, G__2173) : f.call(null, G__2172, G__2173);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__2176 = nacc;
        acc = G__2176;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__2178 = arguments.length;
  switch(G__2178) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__2183 = arguments.length;
  switch(G__2183) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__2185 = null;
    var G__2185__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__2185__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__2185__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__2185 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__2185__0.call(this);
        case 1:
          return G__2185__1.call(this, x);
        case 2:
          return G__2185__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2185.cljs$core$IFn$_invoke$arity$0 = G__2185__0;
    G__2185.cljs$core$IFn$_invoke$arity$1 = G__2185__1;
    G__2185.cljs$core$IFn$_invoke$arity$2 = G__2185__2;
    return G__2185;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__2187 = arguments.length;
  switch(G__2187) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__2193 = arguments.length;
  switch(G__2193) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2195 = arguments.length;
      var i__4500__auto___2196 = 0;
      while (true) {
        if (i__4500__auto___2196 < len__4499__auto___2195) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2196]);
          var G__2197 = i__4500__auto___2196 + 1;
          i__4500__auto___2196 = G__2197;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq2190) {
  var G__2191 = cljs.core.first(seq2190);
  var seq2190__$1 = cljs.core.next(seq2190);
  var G__2192 = cljs.core.first(seq2190__$1);
  var seq2190__$2 = cljs.core.next(seq2190__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2191, G__2192, seq2190__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__2202 = arguments.length;
  switch(G__2202) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2204 = arguments.length;
      var i__4500__auto___2205 = 0;
      while (true) {
        if (i__4500__auto___2205 < len__4499__auto___2204) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2205]);
          var G__2206 = i__4500__auto___2205 + 1;
          i__4500__auto___2205 = G__2206;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq2199) {
  var G__2200 = cljs.core.first(seq2199);
  var seq2199__$1 = cljs.core.next(seq2199);
  var G__2201 = cljs.core.first(seq2199__$1);
  var seq2199__$2 = cljs.core.next(seq2199__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2200, G__2201, seq2199__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__2211 = arguments.length;
  switch(G__2211) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2213 = arguments.length;
      var i__4500__auto___2214 = 0;
      while (true) {
        if (i__4500__auto___2214 < len__4499__auto___2213) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2214]);
          var G__2215 = i__4500__auto___2214 + 1;
          i__4500__auto___2214 = G__2215;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq2208) {
  var G__2209 = cljs.core.first(seq2208);
  var seq2208__$1 = cljs.core.next(seq2208);
  var G__2210 = cljs.core.first(seq2208__$1);
  var seq2208__$2 = cljs.core.next(seq2208__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2209, G__2210, seq2208__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__2220 = arguments.length;
  switch(G__2220) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2222 = arguments.length;
      var i__4500__auto___2223 = 0;
      while (true) {
        if (i__4500__auto___2223 < len__4499__auto___2222) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2223]);
          var G__2224 = i__4500__auto___2223 + 1;
          i__4500__auto___2223 = G__2224;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq2217) {
  var G__2218 = cljs.core.first(seq2217);
  var seq2217__$1 = cljs.core.next(seq2217);
  var G__2219 = cljs.core.first(seq2217__$1);
  var seq2217__$2 = cljs.core.next(seq2217__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2218, G__2219, seq2217__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__2229 = arguments.length;
  switch(G__2229) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2231 = arguments.length;
      var i__4500__auto___2232 = 0;
      while (true) {
        if (i__4500__auto___2232 < len__4499__auto___2231) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2232]);
          var G__2233 = i__4500__auto___2232 + 1;
          i__4500__auto___2232 = G__2233;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__2234 = y;
        var G__2235 = cljs.core.first(more);
        var G__2236 = cljs.core.next(more);
        x = G__2234;
        y = G__2235;
        more = G__2236;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq2226) {
  var G__2227 = cljs.core.first(seq2226);
  var seq2226__$1 = cljs.core.next(seq2226);
  var G__2228 = cljs.core.first(seq2226__$1);
  var seq2226__$2 = cljs.core.next(seq2226__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2227, G__2228, seq2226__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__2241 = arguments.length;
  switch(G__2241) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2243 = arguments.length;
      var i__4500__auto___2244 = 0;
      while (true) {
        if (i__4500__auto___2244 < len__4499__auto___2243) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2244]);
          var G__2245 = i__4500__auto___2244 + 1;
          i__4500__auto___2244 = G__2245;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__2246 = y;
        var G__2247 = cljs.core.first(more);
        var G__2248 = cljs.core.next(more);
        x = G__2246;
        y = G__2247;
        more = G__2248;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq2238) {
  var G__2239 = cljs.core.first(seq2238);
  var seq2238__$1 = cljs.core.next(seq2238);
  var G__2240 = cljs.core.first(seq2238__$1);
  var seq2238__$2 = cljs.core.next(seq2238__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2239, G__2240, seq2238__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__2253 = arguments.length;
  switch(G__2253) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2255 = arguments.length;
      var i__4500__auto___2256 = 0;
      while (true) {
        if (i__4500__auto___2256 < len__4499__auto___2255) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2256]);
          var G__2257 = i__4500__auto___2256 + 1;
          i__4500__auto___2256 = G__2257;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__2258 = y;
        var G__2259 = cljs.core.first(more);
        var G__2260 = cljs.core.next(more);
        x = G__2258;
        y = G__2259;
        more = G__2260;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq2250) {
  var G__2251 = cljs.core.first(seq2250);
  var seq2250__$1 = cljs.core.next(seq2250);
  var G__2252 = cljs.core.first(seq2250__$1);
  var seq2250__$2 = cljs.core.next(seq2250__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2251, G__2252, seq2250__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__2265 = arguments.length;
  switch(G__2265) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2267 = arguments.length;
      var i__4500__auto___2268 = 0;
      while (true) {
        if (i__4500__auto___2268 < len__4499__auto___2267) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2268]);
          var G__2269 = i__4500__auto___2268 + 1;
          i__4500__auto___2268 = G__2269;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__2270 = y;
        var G__2271 = cljs.core.first(more);
        var G__2272 = cljs.core.next(more);
        x = G__2270;
        y = G__2271;
        more = G__2272;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq2262) {
  var G__2263 = cljs.core.first(seq2262);
  var seq2262__$1 = cljs.core.next(seq2262);
  var G__2264 = cljs.core.first(seq2262__$1);
  var seq2262__$2 = cljs.core.next(seq2262__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2263, G__2264, seq2262__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__2277 = arguments.length;
  switch(G__2277) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2279 = arguments.length;
      var i__4500__auto___2280 = 0;
      while (true) {
        if (i__4500__auto___2280 < len__4499__auto___2279) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2280]);
          var G__2281 = i__4500__auto___2280 + 1;
          i__4500__auto___2280 = G__2281;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4006__auto__ = x;
  var y__4007__auto__ = y;
  return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4006__auto__ = x;
    var y__4007__auto__ = y;
    return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq2274) {
  var G__2275 = cljs.core.first(seq2274);
  var seq2274__$1 = cljs.core.next(seq2274);
  var G__2276 = cljs.core.first(seq2274__$1);
  var seq2274__$2 = cljs.core.next(seq2274__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2275, G__2276, seq2274__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__2286 = arguments.length;
  switch(G__2286) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2288 = arguments.length;
      var i__4500__auto___2289 = 0;
      while (true) {
        if (i__4500__auto___2289 < len__4499__auto___2288) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2289]);
          var G__2290 = i__4500__auto___2289 + 1;
          i__4500__auto___2289 = G__2290;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4009__auto__ = x;
  var y__4010__auto__ = y;
  return x__4009__auto__ < y__4010__auto__ ? x__4009__auto__ : y__4010__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4009__auto__ = x;
    var y__4010__auto__ = y;
    return x__4009__auto__ < y__4010__auto__ ? x__4009__auto__ : y__4010__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq2283) {
  var G__2284 = cljs.core.first(seq2283);
  var seq2283__$1 = cljs.core.next(seq2283);
  var G__2285 = cljs.core.first(seq2283__$1);
  var seq2283__$2 = cljs.core.next(seq2283__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2284, G__2285, seq2283__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__2295 = arguments.length;
  switch(G__2295) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2297 = arguments.length;
      var i__4500__auto___2298 = 0;
      while (true) {
        if (i__4500__auto___2298 < len__4499__auto___2297) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2298]);
          var G__2299 = i__4500__auto___2298 + 1;
          i__4500__auto___2298 = G__2299;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq2292) {
  var G__2293 = cljs.core.first(seq2292);
  var seq2292__$1 = cljs.core.next(seq2292);
  var G__2294 = cljs.core.first(seq2292__$1);
  var seq2292__$2 = cljs.core.next(seq2292__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2293, G__2294, seq2292__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__2304 = arguments.length;
  switch(G__2304) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2306 = arguments.length;
      var i__4500__auto___2307 = 0;
      while (true) {
        if (i__4500__auto___2307 < len__4499__auto___2306) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2307]);
          var G__2308 = i__4500__auto___2307 + 1;
          i__4500__auto___2307 = G__2308;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq2301) {
  var G__2302 = cljs.core.first(seq2301);
  var seq2301__$1 = cljs.core.next(seq2301);
  var G__2303 = cljs.core.first(seq2301__$1);
  var seq2301__$2 = cljs.core.next(seq2301__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2302, G__2303, seq2301__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__2313 = arguments.length;
  switch(G__2313) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2315 = arguments.length;
      var i__4500__auto___2316 = 0;
      while (true) {
        if (i__4500__auto___2316 < len__4499__auto___2315) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2316]);
          var G__2317 = i__4500__auto___2316 + 1;
          i__4500__auto___2316 = G__2317;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq2310) {
  var G__2311 = cljs.core.first(seq2310);
  var seq2310__$1 = cljs.core.next(seq2310);
  var G__2312 = cljs.core.first(seq2310__$1);
  var seq2310__$2 = cljs.core.next(seq2310__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2311, G__2312, seq2310__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__2322 = arguments.length;
  switch(G__2322) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2324 = arguments.length;
      var i__4500__auto___2325 = 0;
      while (true) {
        if (i__4500__auto___2325 < len__4499__auto___2324) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2325]);
          var G__2326 = i__4500__auto___2325 + 1;
          i__4500__auto___2325 = G__2326;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq2319) {
  var G__2320 = cljs.core.first(seq2319);
  var seq2319__$1 = cljs.core.next(seq2319);
  var G__2321 = cljs.core.first(seq2319__$1);
  var seq2319__$2 = cljs.core.next(seq2319__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2320, G__2321, seq2319__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__2331 = arguments.length;
  switch(G__2331) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2333 = arguments.length;
      var i__4500__auto___2334 = 0;
      while (true) {
        if (i__4500__auto___2334 < len__4499__auto___2333) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2334]);
          var G__2335 = i__4500__auto___2334 + 1;
          i__4500__auto___2334 = G__2335;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq2328) {
  var G__2329 = cljs.core.first(seq2328);
  var seq2328__$1 = cljs.core.next(seq2328);
  var G__2330 = cljs.core.first(seq2328__$1);
  var seq2328__$2 = cljs.core.next(seq2328__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2329, G__2330, seq2328__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__2340 = arguments.length;
  switch(G__2340) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2342 = arguments.length;
      var i__4500__auto___2343 = 0;
      while (true) {
        if (i__4500__auto___2343 < len__4499__auto___2342) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2343]);
          var G__2344 = i__4500__auto___2343 + 1;
          i__4500__auto___2343 = G__2344;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq2337) {
  var G__2338 = cljs.core.first(seq2337);
  var seq2337__$1 = cljs.core.next(seq2337);
  var G__2339 = cljs.core.first(seq2337__$1);
  var seq2337__$2 = cljs.core.next(seq2337__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2338, G__2339, seq2337__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__2349 = arguments.length;
  switch(G__2349) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2351 = arguments.length;
      var i__4500__auto___2352 = 0;
      while (true) {
        if (i__4500__auto___2352 < len__4499__auto___2351) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2352]);
          var G__2353 = i__4500__auto___2352 + 1;
          i__4500__auto___2352 = G__2353;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq2346) {
  var G__2347 = cljs.core.first(seq2346);
  var seq2346__$1 = cljs.core.next(seq2346);
  var G__2348 = cljs.core.first(seq2346__$1);
  var seq2346__$2 = cljs.core.next(seq2346__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2347, G__2348, seq2346__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__2358 = arguments.length;
  switch(G__2358) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2360 = arguments.length;
      var i__4500__auto___2361 = 0;
      while (true) {
        if (i__4500__auto___2361 < len__4499__auto___2360) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2361]);
          var G__2362 = i__4500__auto___2361 + 1;
          i__4500__auto___2361 = G__2362;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq2355) {
  var G__2356 = cljs.core.first(seq2355);
  var seq2355__$1 = cljs.core.next(seq2355);
  var G__2357 = cljs.core.first(seq2355__$1);
  var seq2355__$2 = cljs.core.next(seq2355__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2356, G__2357, seq2355__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__2367 = arguments.length;
  switch(G__2367) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2369 = arguments.length;
      var i__4500__auto___2370 = 0;
      while (true) {
        if (i__4500__auto___2370 < len__4499__auto___2369) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2370]);
          var G__2371 = i__4500__auto___2370 + 1;
          i__4500__auto___2370 = G__2371;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq2364) {
  var G__2365 = cljs.core.first(seq2364);
  var seq2364__$1 = cljs.core.next(seq2364);
  var G__2366 = cljs.core.first(seq2364__$1);
  var seq2364__$2 = cljs.core.next(seq2364__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2365, G__2366, seq2364__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__2376 = arguments.length;
  switch(G__2376) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2378 = arguments.length;
      var i__4500__auto___2379 = 0;
      while (true) {
        if (i__4500__auto___2379 < len__4499__auto___2378) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2379]);
          var G__2380 = i__4500__auto___2379 + 1;
          i__4500__auto___2379 = G__2380;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq2373) {
  var G__2374 = cljs.core.first(seq2373);
  var seq2373__$1 = cljs.core.next(seq2373);
  var G__2375 = cljs.core.first(seq2373__$1);
  var seq2373__$2 = cljs.core.next(seq2373__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2374, G__2375, seq2373__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__2385 = arguments.length;
  switch(G__2385) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2387 = arguments.length;
      var i__4500__auto___2388 = 0;
      while (true) {
        if (i__4500__auto___2388 < len__4499__auto___2387) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2388]);
          var G__2389 = i__4500__auto___2388 + 1;
          i__4500__auto___2388 = G__2389;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq2382) {
  var G__2383 = cljs.core.first(seq2382);
  var seq2382__$1 = cljs.core.next(seq2382);
  var G__2384 = cljs.core.first(seq2382__$1);
  var seq2382__$2 = cljs.core.next(seq2382__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2383, G__2384, seq2382__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__2394 = arguments.length;
  switch(G__2394) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2396 = arguments.length;
      var i__4500__auto___2397 = 0;
      while (true) {
        if (i__4500__auto___2397 < len__4499__auto___2396) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2397]);
          var G__2398 = i__4500__auto___2397 + 1;
          i__4500__auto___2397 = G__2398;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__2399 = y;
        var G__2400 = cljs.core.first(more);
        var G__2401 = cljs.core.next(more);
        x = G__2399;
        y = G__2400;
        more = G__2401;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq2391) {
  var G__2392 = cljs.core.first(seq2391);
  var seq2391__$1 = cljs.core.next(seq2391);
  var G__2393 = cljs.core.first(seq2391__$1);
  var seq2391__$2 = cljs.core.next(seq2391__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2392, G__2393, seq2391__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__2402 = n__$1 - 1;
      var G__2403 = cljs.core.next(xs);
      n__$1 = G__2402;
      xs = G__2403;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__2407 = arguments.length;
  switch(G__2407) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2409 = arguments.length;
      var i__4500__auto___2410 = 0;
      while (true) {
        if (i__4500__auto___2410 < len__4499__auto___2409) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2410]);
          var G__2411 = i__4500__auto___2410 + 1;
          i__4500__auto___2410 = G__2411;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4515__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__2412 = sb.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more))].join(""));
      var G__2413 = cljs.core.next(more);
      sb = G__2412;
      more = G__2413;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq2405) {
  var G__2406 = cljs.core.first(seq2405);
  var seq2405__$1 = cljs.core.next(seq2405);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2406, seq2405__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__2415 = arguments.length;
  switch(G__2415) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__2417 = cljs.core.next(xs);
            var G__2418 = cljs.core.next(ys);
            xs = G__2417;
            ys = G__2418;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__2419 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__2420 = cljs.core.next(s);
        res = G__2419;
        s = G__2420;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__2421 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__2422 = cljs.core.next(s);
      h = G__2421;
      s = G__2422;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__2423 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__2424 = cljs.core.next(s__$1);
      h = G__2423;
      s__$1 = G__2424;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__2425_2435 = cljs.core.seq(fn_map);
  var chunk__2426_2436 = null;
  var count__2427_2437 = 0;
  var i__2428_2438 = 0;
  while (true) {
    if (i__2428_2438 < count__2427_2437) {
      var vec__2429_2439 = chunk__2426_2436.cljs$core$IIndexed$_nth$arity$2(null, i__2428_2438);
      var key_name_2440 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2429_2439, 0, null);
      var f_2441 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2429_2439, 1, null);
      var str_name_2442 = cljs.core.name(key_name_2440);
      goog.object.set(obj, str_name_2442, f_2441);
      var G__2443 = seq__2425_2435;
      var G__2444 = chunk__2426_2436;
      var G__2445 = count__2427_2437;
      var G__2446 = i__2428_2438 + 1;
      seq__2425_2435 = G__2443;
      chunk__2426_2436 = G__2444;
      count__2427_2437 = G__2445;
      i__2428_2438 = G__2446;
      continue;
    } else {
      var temp__4657__auto___2447 = cljs.core.seq(seq__2425_2435);
      if (temp__4657__auto___2447) {
        var seq__2425_2448__$1 = temp__4657__auto___2447;
        if (cljs.core.chunked_seq_QMARK_(seq__2425_2448__$1)) {
          var c__4319__auto___2449 = cljs.core.chunk_first(seq__2425_2448__$1);
          var G__2450 = cljs.core.chunk_rest(seq__2425_2448__$1);
          var G__2451 = c__4319__auto___2449;
          var G__2452 = cljs.core.count(c__4319__auto___2449);
          var G__2453 = 0;
          seq__2425_2435 = G__2450;
          chunk__2426_2436 = G__2451;
          count__2427_2437 = G__2452;
          i__2428_2438 = G__2453;
          continue;
        } else {
          var vec__2432_2454 = cljs.core.first(seq__2425_2448__$1);
          var key_name_2455 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2432_2454, 0, null);
          var f_2456 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2432_2454, 1, null);
          var str_name_2457 = cljs.core.name(key_name_2455);
          goog.object.set(obj, str_name_2457, f_2456);
          var G__2458 = cljs.core.next(seq__2425_2448__$1);
          var G__2459 = null;
          var G__2460 = 0;
          var G__2461 = 0;
          seq__2425_2435 = G__2458;
          chunk__2426_2436 = G__2459;
          count__2427_2437 = G__2460;
          i__2428_2438 = G__2461;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__2462 = null;
  var G__2462__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2462__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2462 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2462__1.call(this, x);
      case 2:
        return G__2462__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2462.cljs$core$IFn$_invoke$arity$1 = G__2462__1;
  G__2462.cljs$core$IFn$_invoke$arity$2 = G__2462__2;
  return G__2462;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__2463 = null;
  var G__2463__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__2463__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2463 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2463__1.call(this, x);
      case 2:
        return G__2463__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2463.cljs$core$IFn$_invoke$arity$1 = G__2463__1;
  G__2463.cljs$core$IFn$_invoke$arity$2 = G__2463__2;
  return G__2463;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
var G__2465_2468 = cljs.core.List.prototype;
var G__2466_2469 = cljs.core.ITER_SYMBOL;
var G__2467_2470 = function(G__2465_2468, G__2466_2469) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2465_2468, G__2466_2469);
goog.object.set(G__2465_2468, G__2466_2469, G__2467_2470);
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__2471 = null;
  var G__2471__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2471__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2471 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2471__1.call(this, x);
      case 2:
        return G__2471__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2471.cljs$core$IFn$_invoke$arity$1 = G__2471__1;
  G__2471.cljs$core$IFn$_invoke$arity$2 = G__2471__2;
  return G__2471;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__2472 = null;
  var G__2472__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2472__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2472 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2472__1.call(this, x);
      case 2:
        return G__2472__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2472.cljs$core$IFn$_invoke$arity$1 = G__2472__1;
  G__2472.cljs$core$IFn$_invoke$arity$2 = G__2472__2;
  return G__2472;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__2473_2476 = cljs.core.EmptyList.prototype;
var G__2474_2477 = cljs.core.ITER_SYMBOL;
var G__2475_2478 = function(G__2473_2476, G__2474_2477) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2473_2476, G__2474_2477);
goog.object.set(G__2473_2476, G__2474_2477, G__2475_2478);
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__3922__auto__ = cljs.core.rseq(coll);
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2481 = arguments.length;
  var i__4500__auto___2482 = 0;
  while (true) {
    if (i__4500__auto___2482 < len__4499__auto___2481) {
      args__4502__auto__.push(arguments[i__4500__auto___2482]);
      var G__2483 = i__4500__auto___2482 + 1;
      i__4500__auto___2482 = G__2483;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__2484 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__2484;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__2485 = i - 1;
      var G__2486 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__2485;
      r = G__2486;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq2480) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2480));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__2487 = null;
  var G__2487__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2487__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2487 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2487__1.call(this, x);
      case 2:
        return G__2487__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2487.cljs$core$IFn$_invoke$arity$1 = G__2487__1;
  G__2487.cljs$core$IFn$_invoke$arity$2 = G__2487__2;
  return G__2487;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__2488 = null;
  var G__2488__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2488__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2488 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2488__1.call(this, x);
      case 2:
        return G__2488__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2488.cljs$core$IFn$_invoke$arity$1 = G__2488__1;
  G__2488.cljs$core$IFn$_invoke$arity$2 = G__2488__2;
  return G__2488;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
var G__2489_2492 = cljs.core.Cons.prototype;
var G__2490_2493 = cljs.core.ITER_SYMBOL;
var G__2491_2494 = function(G__2489_2492, G__2490_2493) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2489_2492, G__2490_2493);
goog.object.set(G__2489_2492, G__2490_2493, G__2491_2494);
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__3922__auto__ = coll == null;
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = cljs.core.not(a.ns);
      if (and__3911__auto__) {
        return b.ns;
      } else {
        return and__3911__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2497 = a.ns;
            var G__2498 = b.ns;
            return goog.array.defaultCompare(G__2497, G__2498);
          }();
          if (0 === nsc) {
            var G__2499 = a.name;
            var G__2500 = b.name;
            return goog.array.defaultCompare(G__2499, G__2500);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2501 = a.name;
        var G__2502 = b.name;
        return goog.array.defaultCompare(G__2501, G__2502);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__2504 = null;
  var G__2504__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__2504__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__2504 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2504__2.call(this, self__, coll);
      case 3:
        return G__2504__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2504.cljs$core$IFn$_invoke$arity$2 = G__2504__2;
  G__2504.cljs$core$IFn$_invoke$arity$3 = G__2504__3;
  return G__2504;
}();
cljs.core.Keyword.prototype.apply = function(self__, args2503) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2503)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4030__auto__ = self__._hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__3911__auto__ = cljs.core.ident_QMARK_(x);
    if (and__3911__auto__) {
      var and__3911__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__3911__auto____$1)) {
        return true;
      } else {
        return and__3911__auto____$1;
      }
    } else {
      return and__3911__auto__;
    }
  }());
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__3911__auto__ = x instanceof cljs.core.Symbol;
    if (and__3911__auto__) {
      var and__3911__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__3911__auto____$1)) {
        return true;
      } else {
        return and__3911__auto____$1;
      }
    } else {
      return and__3911__auto__;
    }
  }());
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__3911__auto__ = x instanceof cljs.core.Keyword;
    if (and__3911__auto__) {
      var and__3911__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__3911__auto____$1)) {
        return true;
      } else {
        return and__3911__auto____$1;
      }
    } else {
      return and__3911__auto__;
    }
  }());
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__2507 = arguments.length;
  switch(G__2507) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__2509 = null;
  var G__2509__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2509__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2509 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2509__1.call(this, x);
      case 2:
        return G__2509__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2509.cljs$core$IFn$_invoke$arity$1 = G__2509__1;
  G__2509.cljs$core$IFn$_invoke$arity$2 = G__2509__2;
  return G__2509;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__2510 = null;
  var G__2510__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2510__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2510 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2510__1.call(this, x);
      case 2:
        return G__2510__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2510.cljs$core$IFn$_invoke$arity$1 = G__2510__1;
  G__2510.cljs$core$IFn$_invoke$arity$2 = G__2510__2;
  return G__2510;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__2511 = ls.sval();
        ls = G__2511;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, function(coll__$1) {
    return function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    };
  }(coll__$1), null, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
var G__2512_2515 = cljs.core.LazySeq.prototype;
var G__2513_2516 = cljs.core.ITER_SYMBOL;
var G__2514_2517 = function(G__2512_2515, G__2513_2516) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2512_2515, G__2513_2516);
goog.object.set(G__2512_2515, G__2513_2516, G__2514_2517);
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__2519 = arguments.length;
  switch(G__2519) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__2521 = null;
  var G__2521__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2521__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2521 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2521__1.call(this, x);
      case 2:
        return G__2521__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2521.cljs$core$IFn$_invoke$arity$1 = G__2521__1;
  G__2521.cljs$core$IFn$_invoke$arity$2 = G__2521__2;
  return G__2521;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__2522 = null;
  var G__2522__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2522__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2522 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2522__1.call(this, x);
      case 2:
        return G__2522__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2522.cljs$core$IFn$_invoke$arity$1 = G__2522__1;
  G__2522.cljs$core$IFn$_invoke$arity$2 = G__2522__2;
  return G__2522;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
var G__2523_2526 = cljs.core.ChunkedCons.prototype;
var G__2524_2527 = cljs.core.ITER_SYMBOL;
var G__2525_2528 = function(G__2523_2526, G__2524_2527) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2523_2526, G__2524_2527);
goog.object.set(G__2523_2526, G__2524_2527, G__2525_2528);
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (!(s__$1 == null)) {
      ary.push(cljs.core.first(s__$1));
      var G__2530 = cljs.core.next(s__$1);
      s__$1 = G__2530;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_2531 = 0;
  var xs_2532 = cljs.core.seq(coll);
  while (true) {
    if (xs_2532 == null) {
    } else {
      ret[i_2531] = cljs.core.to_array(cljs.core.first(xs_2532));
      var G__2533 = i_2531 + 1;
      var G__2534 = cljs.core.next(xs_2532);
      i_2531 = G__2533;
      xs_2532 = G__2534;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__2536 = arguments.length;
  switch(G__2536) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2538 = i + 1;
        var G__2539 = cljs.core.next(s__$1);
        i = G__2538;
        s__$1 = G__2539;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4376__auto___2540 = size;
    var i_2541 = 0;
    while (true) {
      if (i_2541 < n__4376__auto___2540) {
        a[i_2541] = init_val_or_seq;
        var G__2542 = i_2541 + 1;
        i_2541 = G__2542;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__2544 = arguments.length;
  switch(G__2544) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2546 = i + 1;
        var G__2547 = cljs.core.next(s__$1);
        i = G__2546;
        s__$1 = G__2547;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4376__auto___2548 = size;
    var i_2549 = 0;
    while (true) {
      if (i_2549 < n__4376__auto___2548) {
        a[i_2549] = init_val_or_seq;
        var G__2550 = i_2549 + 1;
        i_2549 = G__2550;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__2552 = arguments.length;
  switch(G__2552) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2554 = i + 1;
        var G__2555 = cljs.core.next(s__$1);
        i = G__2554;
        s__$1 = G__2555;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4376__auto___2556 = size;
    var i_2557 = 0;
    while (true) {
      if (i_2557 < n__4376__auto___2556) {
        a[i_2557] = init_val_or_seq;
        var G__2558 = i_2557 + 1;
        i_2557 = G__2558;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__2560 = arguments.length;
  switch(G__2560) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2562 = i + 1;
        var G__2563 = cljs.core.next(s__$1);
        i = G__2562;
        s__$1 = G__2563;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4376__auto___2564 = size;
    var i_2565 = 0;
    while (true) {
      if (i_2565 < n__4376__auto___2564) {
        a[i_2565] = init_val_or_seq;
        var G__2566 = i_2565 + 1;
        i_2565 = G__2566;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__2567 = i + 1;
        var G__2568 = cljs.core.next(s);
        i = G__2567;
        s = G__2568;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__2573 = arguments.length;
  switch(G__2573) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2575 = arguments.length;
      var i__4500__auto___2576 = 0;
      while (true) {
        if (i__4500__auto___2576 < len__4499__auto___2575) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2576]);
          var G__2577 = i__4500__auto___2576 + 1;
          i__4500__auto___2576 = G__2577;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq2570) {
  var G__2571 = cljs.core.first(seq2570);
  var seq2570__$1 = cljs.core.next(seq2570);
  var G__2572 = cljs.core.first(seq2570__$1);
  var seq2570__$2 = cljs.core.next(seq2570__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2571, G__2572, seq2570__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__2584 = arguments.length;
  switch(G__2584) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2586 = arguments.length;
      var i__4500__auto___2587 = 0;
      while (true) {
        if (i__4500__auto___2587 < len__4499__auto___2586) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2587]);
          var G__2588 = i__4500__auto___2587 + 1;
          i__4500__auto___2587 = G__2588;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq2579) {
  var G__2580 = cljs.core.first(seq2579);
  var seq2579__$1 = cljs.core.next(seq2579);
  var G__2581 = cljs.core.first(seq2579__$1);
  var seq2579__$2 = cljs.core.next(seq2579__$1);
  var G__2582 = cljs.core.first(seq2579__$2);
  var seq2579__$3 = cljs.core.next(seq2579__$2);
  var G__2583 = cljs.core.first(seq2579__$3);
  var seq2579__$4 = cljs.core.next(seq2579__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2580, G__2581, G__2582, G__2583, seq2579__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__2593 = arguments.length;
  switch(G__2593) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2595 = arguments.length;
      var i__4500__auto___2596 = 0;
      while (true) {
        if (i__4500__auto___2596 < len__4499__auto___2595) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2596]);
          var G__2597 = i__4500__auto___2596 + 1;
          i__4500__auto___2596 = G__2597;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2598 = ntcoll;
      var G__2599 = cljs.core.first(vals);
      var G__2600 = cljs.core.next(vals);
      tcoll = G__2598;
      val = G__2599;
      vals = G__2600;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq2590) {
  var G__2591 = cljs.core.first(seq2590);
  var seq2590__$1 = cljs.core.next(seq2590);
  var G__2592 = cljs.core.first(seq2590__$1);
  var seq2590__$2 = cljs.core.next(seq2590__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2591, G__2592, seq2590__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__2606 = arguments.length;
  switch(G__2606) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2608 = arguments.length;
      var i__4500__auto___2609 = 0;
      while (true) {
        if (i__4500__auto___2609 < len__4499__auto___2608) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2609]);
          var G__2610 = i__4500__auto___2609 + 1;
          i__4500__auto___2609 = G__2610;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__2611 = ntcoll;
      var G__2612 = cljs.core.first(kvs);
      var G__2613 = cljs.core.second(kvs);
      var G__2614 = cljs.core.nnext(kvs);
      tcoll = G__2611;
      key = G__2612;
      val = G__2613;
      kvs = G__2614;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq2602) {
  var G__2603 = cljs.core.first(seq2602);
  var seq2602__$1 = cljs.core.next(seq2602);
  var G__2604 = cljs.core.first(seq2602__$1);
  var seq2602__$2 = cljs.core.next(seq2602__$1);
  var G__2605 = cljs.core.first(seq2602__$2);
  var seq2602__$3 = cljs.core.next(seq2602__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2603, G__2604, G__2605, seq2602__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__2619 = arguments.length;
  switch(G__2619) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2621 = arguments.length;
      var i__4500__auto___2622 = 0;
      while (true) {
        if (i__4500__auto___2622 < len__4499__auto___2621) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2622]);
          var G__2623 = i__4500__auto___2622 + 1;
          i__4500__auto___2622 = G__2623;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__2624 = ntcoll;
      var G__2625 = cljs.core.first(ks);
      var G__2626 = cljs.core.next(ks);
      tcoll = G__2624;
      key = G__2625;
      ks = G__2626;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq2616) {
  var G__2617 = cljs.core.first(seq2616);
  var seq2616__$1 = cljs.core.next(seq2616);
  var G__2618 = cljs.core.first(seq2616__$1);
  var seq2616__$2 = cljs.core.next(seq2616__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2617, G__2618, seq2616__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__2631 = arguments.length;
  switch(G__2631) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2633 = arguments.length;
      var i__4500__auto___2634 = 0;
      while (true) {
        if (i__4500__auto___2634 < len__4499__auto___2633) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2634]);
          var G__2635 = i__4500__auto___2634 + 1;
          i__4500__auto___2634 = G__2635;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2636 = ntcoll;
      var G__2637 = cljs.core.first(vals);
      var G__2638 = cljs.core.next(vals);
      tcoll = G__2636;
      val = G__2637;
      vals = G__2638;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq2628) {
  var G__2629 = cljs.core.first(seq2628);
  var seq2628__$1 = cljs.core.next(seq2628);
  var G__2630 = cljs.core.first(seq2628__$1);
  var seq2628__$2 = cljs.core.next(seq2628__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2629, G__2630, seq2628__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a109 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a109) : f.call(null, a109);
    } else {
      var b110 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a109, b110) : f.call(null, a109, b110);
      } else {
        var c111 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a109, b110, c111) : f.call(null, a109, b110, c111);
        } else {
          var d112 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a109, b110, c111, d112) : f.call(null, a109, b110, c111, d112);
          } else {
            var e113 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a109, b110, c111, d112, e113) : f.call(null, a109, b110, c111, d112, e113);
            } else {
              var f114 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a109, b110, c111, d112, e113, f114) : f.call(null, a109, b110, c111, d112, e113, f114);
              } else {
                var g115 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a109, b110, c111, d112, e113, f114, g115) : f.call(null, a109, b110, c111, d112, e113, f114, g115);
                } else {
                  var h116 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a109, b110, c111, d112, e113, f114, g115, h116) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116);
                  } else {
                    var i117 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a109, b110, c111, d112, e113, f114, g115, h116, i117) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117);
                    } else {
                      var j118 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118);
                      } else {
                        var k119 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119);
                        } else {
                          var l120 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120);
                          } else {
                            var m121 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121);
                            } else {
                              var n122 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122);
                              } else {
                                var o123 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123);
                                } else {
                                  var p124 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124);
                                  } else {
                                    var q125 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125);
                                    } else {
                                      var r126 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126);
                                      } else {
                                        var s127 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126, s127) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126, s127);
                                        } else {
                                          var t128 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126, s127, t128) : f.call(null, a109, b110, c111, d112, e113, f114, g115, h116, i117, j118, k119, l120, m121, n122, o123, p124, q125, r126, s127, t128);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__2640 = arguments.length;
  switch(G__2640) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4424__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4425__auto___2642 = next_19;
                                    while (true) {
                                      if (s__4425__auto___2642) {
                                        arr__4424__auto__.push(cljs.core._first(s__4425__auto___2642));
                                        var G__2643 = cljs.core.next(s__4425__auto___2642);
                                        s__4425__auto___2642 = G__2643;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4424__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__2651 = arguments.length;
  switch(G__2651) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2653 = arguments.length;
      var i__4500__auto___2654 = 0;
      while (true) {
        if (i__4500__auto___2654 < len__4499__auto___2653) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2654]);
          var G__2655 = i__4500__auto___2654 + 1;
          i__4500__auto___2654 = G__2655;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4515__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq2645) {
  var G__2646 = cljs.core.first(seq2645);
  var seq2645__$1 = cljs.core.next(seq2645);
  var G__2647 = cljs.core.first(seq2645__$1);
  var seq2645__$2 = cljs.core.next(seq2645__$1);
  var G__2648 = cljs.core.first(seq2645__$2);
  var seq2645__$3 = cljs.core.next(seq2645__$2);
  var G__2649 = cljs.core.first(seq2645__$3);
  var seq2645__$4 = cljs.core.next(seq2645__$3);
  var G__2650 = cljs.core.first(seq2645__$4);
  var seq2645__$5 = cljs.core.next(seq2645__$4);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2646, G__2647, G__2648, G__2649, G__2650, seq2645__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__2664 = arguments.length;
  switch(G__2664) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2681 = arguments.length;
      var i__4500__auto___2682 = 0;
      while (true) {
        if (i__4500__auto___2682 < len__4499__auto___2681) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2682]);
          var G__2683 = i__4500__auto___2682 + 1;
          i__4500__auto___2682 = G__2683;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4515__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__2665 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2665) : f.call(null, G__2665);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__2666 = cljs.core.meta(obj);
    var G__2667 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2666, G__2667) : f.call(null, G__2666, G__2667);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__2668 = cljs.core.meta(obj);
    var G__2669 = a;
    var G__2670 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2668, G__2669, G__2670) : f.call(null, G__2668, G__2669, G__2670);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__2671 = cljs.core.meta(obj);
    var G__2672 = a;
    var G__2673 = b;
    var G__2674 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2671, G__2672, G__2673, G__2674) : f.call(null, G__2671, G__2672, G__2673, G__2674);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__2675 = cljs.core.meta(obj);
    var G__2676 = a;
    var G__2677 = b;
    var G__2678 = c;
    var G__2679 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2675, G__2676, G__2677, G__2678, G__2679) : f.call(null, G__2675, G__2676, G__2677, G__2678, G__2679);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq2657) {
  var G__2658 = cljs.core.first(seq2657);
  var seq2657__$1 = cljs.core.next(seq2657);
  var G__2659 = cljs.core.first(seq2657__$1);
  var seq2657__$2 = cljs.core.next(seq2657__$1);
  var G__2660 = cljs.core.first(seq2657__$2);
  var seq2657__$3 = cljs.core.next(seq2657__$2);
  var G__2661 = cljs.core.first(seq2657__$3);
  var seq2657__$4 = cljs.core.next(seq2657__$3);
  var G__2662 = cljs.core.first(seq2657__$4);
  var seq2657__$5 = cljs.core.next(seq2657__$4);
  var G__2663 = cljs.core.first(seq2657__$5);
  var seq2657__$6 = cljs.core.next(seq2657__$5);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2658, G__2659, G__2660, G__2661, G__2662, G__2663, seq2657__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__2688 = arguments.length;
  switch(G__2688) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2690 = arguments.length;
      var i__4500__auto___2691 = 0;
      while (true) {
        if (i__4500__auto___2691 < len__4499__auto___2690) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2691]);
          var G__2692 = i__4500__auto___2691 + 1;
          i__4500__auto___2691 = G__2692;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq2685) {
  var G__2686 = cljs.core.first(seq2685);
  var seq2685__$1 = cljs.core.next(seq2685);
  var G__2687 = cljs.core.first(seq2685__$1);
  var seq2685__$2 = cljs.core.next(seq2685__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2686, G__2687, seq2685__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core2693 !== "undefined") {
  } else {
    cljs.core.t_cljs$core2693 = function(meta2694) {
      this.meta2694 = meta2694;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core2693.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2695, meta2694__$1) {
      var self__ = this;
      var _2695__$1 = this;
      return new cljs.core.t_cljs$core2693(meta2694__$1);
    };
    cljs.core.t_cljs$core2693.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2695) {
      var self__ = this;
      var _2695__$1 = this;
      return self__.meta2694;
    };
    cljs.core.t_cljs$core2693.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core2693.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core2693.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core2693.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2694", "meta2694", -212100339, null)], null);
    };
    cljs.core.t_cljs$core2693.cljs$lang$type = true;
    cljs.core.t_cljs$core2693.cljs$lang$ctorStr = "cljs.core/t_cljs$core2693";
    cljs.core.t_cljs$core2693.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write(writer__4162__auto__, "cljs.core/t_cljs$core2693");
    };
    cljs.core.__GT_t_cljs$core2693 = function cljs$core$nil_iter_$___GT_t_cljs$core2693(meta2694) {
      return new cljs.core.t_cljs$core2693(meta2694);
    };
  }
  return new cljs.core.t_cljs$core2693(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error(["Removing object from empty buffer"].join(""));
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error(["Removing object from empty buffer"].join(""));
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__2696 = cljs.core.next(iters__$1);
        iters__$1 = G__2696;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4376__auto___2697 = self__.iters.length;
  var i_2698 = 0;
  while (true) {
    if (i_2698 < n__4376__auto___2697) {
      nexts[i_2698] = self__.iters[i_2698].next();
      var G__2699 = i_2698 + 1;
      i_2698 = G__2699;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__3911__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__3911__auto__)) {
            return n < 32;
          } else {
            return and__3911__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__2700 = n + 1;
          n = G__2700;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__2701 = null;
                var G__2702 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__2701, G__2702) : self__.xf.call(null, G__2701, G__2702);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
var G__2703_2706 = cljs.core.TransformerIterator.prototype;
var G__2704_2707 = cljs.core.ITER_SYMBOL;
var G__2705_2708 = function(G__2703_2706, G__2704_2707) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__2703_2706, G__2704_2707);
goog.object.set(G__2703_2706, G__2704_2707, G__2705_2708);
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__2709 = function(iterator) {
      return function() {
        var G__2710 = null;
        var G__2710__0 = function() {
          return null;
        };
        var G__2710__1 = function(acc) {
          return acc;
        };
        var G__2710__2 = function(acc, o) {
          iterator.buffer = iterator.buffer.add(o);
          return acc;
        };
        G__2710 = function(acc, o) {
          switch(arguments.length) {
            case 0:
              return G__2710__0.call(this);
            case 1:
              return G__2710__1.call(this, acc);
            case 2:
              return G__2710__2.call(this, acc, o);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2710.cljs$core$IFn$_invoke$arity$0 = G__2710__0;
        G__2710.cljs$core$IFn$_invoke$arity$1 = G__2710__1;
        G__2710.cljs$core$IFn$_invoke$arity$2 = G__2710__2;
        return G__2710;
      }();
    }(iterator);
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2709) : xform.call(null, G__2709);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__2715 = arguments.length;
  switch(G__2715) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2717 = arguments.length;
      var i__4500__auto___2718 = 0;
      while (true) {
        if (i__4500__auto___2718 < len__4499__auto___2717) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2718]);
          var G__2719 = i__4500__auto___2718 + 1;
          i__4500__auto___2718 = G__2719;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__3922__auto__ = cljs.core.seq(coll);
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__3922__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__3922__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq2712) {
  var G__2713 = cljs.core.first(seq2712);
  var seq2712__$1 = cljs.core.next(seq2712);
  var G__2714 = cljs.core.first(seq2712__$1);
  var seq2712__$2 = cljs.core.next(seq2712__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2713, G__2714, seq2712__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__2720 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2720) : pred.call(null, G__2720);
      }())) {
        var G__2721 = pred;
        var G__2722 = cljs.core.next(coll);
        pred = G__2721;
        coll = G__2722;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3922__auto__ = function() {
        var G__2724 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2724) : pred.call(null, G__2724);
      }();
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var G__2725 = pred;
        var G__2726 = cljs.core.next(coll);
        pred = G__2725;
        coll = G__2726;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__2727 = null;
    var G__2727__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__2727__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__2727__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__2727__3 = function() {
      var G__2728__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__2728 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__2729__i = 0, G__2729__a = new Array(arguments.length - 2);
          while (G__2729__i < G__2729__a.length) {
            G__2729__a[G__2729__i] = arguments[G__2729__i + 2];
            ++G__2729__i;
          }
          zs = new cljs.core.IndexedSeq(G__2729__a, 0, null);
        }
        return G__2728__delegate.call(this, x, y, zs);
      };
      G__2728.cljs$lang$maxFixedArity = 2;
      G__2728.cljs$lang$applyTo = function(arglist__2730) {
        var x = cljs.core.first(arglist__2730);
        arglist__2730 = cljs.core.next(arglist__2730);
        var y = cljs.core.first(arglist__2730);
        var zs = cljs.core.rest(arglist__2730);
        return G__2728__delegate(x, y, zs);
      };
      G__2728.cljs$core$IFn$_invoke$arity$variadic = G__2728__delegate;
      return G__2728;
    }();
    G__2727 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__2727__0.call(this);
        case 1:
          return G__2727__1.call(this, x);
        case 2:
          return G__2727__2.call(this, x, y);
        default:
          var G__2731 = null;
          if (arguments.length > 2) {
            var G__2732__i = 0, G__2732__a = new Array(arguments.length - 2);
            while (G__2732__i < G__2732__a.length) {
              G__2732__a[G__2732__i] = arguments[G__2732__i + 2];
              ++G__2732__i;
            }
            G__2731 = new cljs.core.IndexedSeq(G__2732__a, 0, null);
          }
          return G__2727__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__2731);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2727.cljs$lang$maxFixedArity = 2;
    G__2727.cljs$lang$applyTo = G__2727__3.cljs$lang$applyTo;
    G__2727.cljs$core$IFn$_invoke$arity$0 = G__2727__0;
    G__2727.cljs$core$IFn$_invoke$arity$1 = G__2727__1;
    G__2727.cljs$core$IFn$_invoke$arity$2 = G__2727__2;
    G__2727.cljs$core$IFn$_invoke$arity$variadic = G__2727__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__2727;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__2733__delegate = function(args) {
      return x;
    };
    var G__2733 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__2734__i = 0, G__2734__a = new Array(arguments.length - 0);
        while (G__2734__i < G__2734__a.length) {
          G__2734__a[G__2734__i] = arguments[G__2734__i + 0];
          ++G__2734__i;
        }
        args = new cljs.core.IndexedSeq(G__2734__a, 0, null);
      }
      return G__2733__delegate.call(this, args);
    };
    G__2733.cljs$lang$maxFixedArity = 0;
    G__2733.cljs$lang$applyTo = function(arglist__2735) {
      var args = cljs.core.seq(arglist__2735);
      return G__2733__delegate(args);
    };
    G__2733.cljs$core$IFn$_invoke$arity$variadic = G__2733__delegate;
    return G__2733;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__2741 = arguments.length;
  switch(G__2741) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2759 = arguments.length;
      var i__4500__auto___2760 = 0;
      while (true) {
        if (i__4500__auto___2760 < len__4499__auto___2759) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2760]);
          var G__2761 = i__4500__auto___2760 + 1;
          i__4500__auto___2760 = G__2761;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__2762 = null;
    var G__2762__0 = function() {
      var G__2742 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2742) : f.call(null, G__2742);
    };
    var G__2762__1 = function(x) {
      var G__2743 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2743) : f.call(null, G__2743);
    };
    var G__2762__2 = function(x, y) {
      var G__2744 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2744) : f.call(null, G__2744);
    };
    var G__2762__3 = function(x, y, z) {
      var G__2745 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2745) : f.call(null, G__2745);
    };
    var G__2762__4 = function() {
      var G__2763__delegate = function(x, y, z, args) {
        var G__2746 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2746) : f.call(null, G__2746);
      };
      var G__2763 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2764__i = 0, G__2764__a = new Array(arguments.length - 3);
          while (G__2764__i < G__2764__a.length) {
            G__2764__a[G__2764__i] = arguments[G__2764__i + 3];
            ++G__2764__i;
          }
          args = new cljs.core.IndexedSeq(G__2764__a, 0, null);
        }
        return G__2763__delegate.call(this, x, y, z, args);
      };
      G__2763.cljs$lang$maxFixedArity = 3;
      G__2763.cljs$lang$applyTo = function(arglist__2765) {
        var x = cljs.core.first(arglist__2765);
        arglist__2765 = cljs.core.next(arglist__2765);
        var y = cljs.core.first(arglist__2765);
        arglist__2765 = cljs.core.next(arglist__2765);
        var z = cljs.core.first(arglist__2765);
        var args = cljs.core.rest(arglist__2765);
        return G__2763__delegate(x, y, z, args);
      };
      G__2763.cljs$core$IFn$_invoke$arity$variadic = G__2763__delegate;
      return G__2763;
    }();
    G__2762 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2762__0.call(this);
        case 1:
          return G__2762__1.call(this, x);
        case 2:
          return G__2762__2.call(this, x, y);
        case 3:
          return G__2762__3.call(this, x, y, z);
        default:
          var G__2766 = null;
          if (arguments.length > 3) {
            var G__2767__i = 0, G__2767__a = new Array(arguments.length - 3);
            while (G__2767__i < G__2767__a.length) {
              G__2767__a[G__2767__i] = arguments[G__2767__i + 3];
              ++G__2767__i;
            }
            G__2766 = new cljs.core.IndexedSeq(G__2767__a, 0, null);
          }
          return G__2762__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2766);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2762.cljs$lang$maxFixedArity = 3;
    G__2762.cljs$lang$applyTo = G__2762__4.cljs$lang$applyTo;
    G__2762.cljs$core$IFn$_invoke$arity$0 = G__2762__0;
    G__2762.cljs$core$IFn$_invoke$arity$1 = G__2762__1;
    G__2762.cljs$core$IFn$_invoke$arity$2 = G__2762__2;
    G__2762.cljs$core$IFn$_invoke$arity$3 = G__2762__3;
    G__2762.cljs$core$IFn$_invoke$arity$variadic = G__2762__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2762;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__2768 = null;
    var G__2768__0 = function() {
      var G__2747 = function() {
        var G__2748 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2748) : g.call(null, G__2748);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2747) : f.call(null, G__2747);
    };
    var G__2768__1 = function(x) {
      var G__2749 = function() {
        var G__2750 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2750) : g.call(null, G__2750);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2749) : f.call(null, G__2749);
    };
    var G__2768__2 = function(x, y) {
      var G__2751 = function() {
        var G__2752 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2752) : g.call(null, G__2752);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2751) : f.call(null, G__2751);
    };
    var G__2768__3 = function(x, y, z) {
      var G__2753 = function() {
        var G__2754 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2754) : g.call(null, G__2754);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2753) : f.call(null, G__2753);
    };
    var G__2768__4 = function() {
      var G__2769__delegate = function(x, y, z, args) {
        var G__2755 = function() {
          var G__2756 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2756) : g.call(null, G__2756);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2755) : f.call(null, G__2755);
      };
      var G__2769 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2770__i = 0, G__2770__a = new Array(arguments.length - 3);
          while (G__2770__i < G__2770__a.length) {
            G__2770__a[G__2770__i] = arguments[G__2770__i + 3];
            ++G__2770__i;
          }
          args = new cljs.core.IndexedSeq(G__2770__a, 0, null);
        }
        return G__2769__delegate.call(this, x, y, z, args);
      };
      G__2769.cljs$lang$maxFixedArity = 3;
      G__2769.cljs$lang$applyTo = function(arglist__2771) {
        var x = cljs.core.first(arglist__2771);
        arglist__2771 = cljs.core.next(arglist__2771);
        var y = cljs.core.first(arglist__2771);
        arglist__2771 = cljs.core.next(arglist__2771);
        var z = cljs.core.first(arglist__2771);
        var args = cljs.core.rest(arglist__2771);
        return G__2769__delegate(x, y, z, args);
      };
      G__2769.cljs$core$IFn$_invoke$arity$variadic = G__2769__delegate;
      return G__2769;
    }();
    G__2768 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2768__0.call(this);
        case 1:
          return G__2768__1.call(this, x);
        case 2:
          return G__2768__2.call(this, x, y);
        case 3:
          return G__2768__3.call(this, x, y, z);
        default:
          var G__2772 = null;
          if (arguments.length > 3) {
            var G__2773__i = 0, G__2773__a = new Array(arguments.length - 3);
            while (G__2773__i < G__2773__a.length) {
              G__2773__a[G__2773__i] = arguments[G__2773__i + 3];
              ++G__2773__i;
            }
            G__2772 = new cljs.core.IndexedSeq(G__2773__a, 0, null);
          }
          return G__2768__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2772);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2768.cljs$lang$maxFixedArity = 3;
    G__2768.cljs$lang$applyTo = G__2768__4.cljs$lang$applyTo;
    G__2768.cljs$core$IFn$_invoke$arity$0 = G__2768__0;
    G__2768.cljs$core$IFn$_invoke$arity$1 = G__2768__1;
    G__2768.cljs$core$IFn$_invoke$arity$2 = G__2768__2;
    G__2768.cljs$core$IFn$_invoke$arity$3 = G__2768__3;
    G__2768.cljs$core$IFn$_invoke$arity$variadic = G__2768__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2768;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__2774__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__2775 = function() {
              var fexpr__2757 = cljs.core.first(fs__$2);
              return fexpr__2757.cljs$core$IFn$_invoke$arity$1 ? fexpr__2757.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__2757.call(null, ret);
            }();
            var G__2776 = cljs.core.next(fs__$2);
            ret = G__2775;
            fs__$2 = G__2776;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__2774 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__2777__i = 0, G__2777__a = new Array(arguments.length - 0);
          while (G__2777__i < G__2777__a.length) {
            G__2777__a[G__2777__i] = arguments[G__2777__i + 0];
            ++G__2777__i;
          }
          args = new cljs.core.IndexedSeq(G__2777__a, 0, null);
        }
        return G__2774__delegate.call(this, args);
      };
      G__2774.cljs$lang$maxFixedArity = 0;
      G__2774.cljs$lang$applyTo = function(arglist__2778) {
        var args = cljs.core.seq(arglist__2778);
        return G__2774__delegate(args);
      };
      G__2774.cljs$core$IFn$_invoke$arity$variadic = G__2774__delegate;
      return G__2774;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq2737) {
  var G__2738 = cljs.core.first(seq2737);
  var seq2737__$1 = cljs.core.next(seq2737);
  var G__2739 = cljs.core.first(seq2737__$1);
  var seq2737__$2 = cljs.core.next(seq2737__$1);
  var G__2740 = cljs.core.first(seq2737__$2);
  var seq2737__$3 = cljs.core.next(seq2737__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2738, G__2739, G__2740, seq2737__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__2785 = arguments.length;
  switch(G__2785) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2787 = arguments.length;
      var i__4500__auto___2788 = 0;
      while (true) {
        if (i__4500__auto___2788 < len__4499__auto___2787) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2788]);
          var G__2789 = i__4500__auto___2788 + 1;
          i__4500__auto___2788 = G__2789;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__2790 = null;
    var G__2790__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__2790__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__2790__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__2790__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__2790__4 = function() {
      var G__2791__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__2791 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2792__i = 0, G__2792__a = new Array(arguments.length - 3);
          while (G__2792__i < G__2792__a.length) {
            G__2792__a[G__2792__i] = arguments[G__2792__i + 3];
            ++G__2792__i;
          }
          args = new cljs.core.IndexedSeq(G__2792__a, 0, null);
        }
        return G__2791__delegate.call(this, x, y, z, args);
      };
      G__2791.cljs$lang$maxFixedArity = 3;
      G__2791.cljs$lang$applyTo = function(arglist__2793) {
        var x = cljs.core.first(arglist__2793);
        arglist__2793 = cljs.core.next(arglist__2793);
        var y = cljs.core.first(arglist__2793);
        arglist__2793 = cljs.core.next(arglist__2793);
        var z = cljs.core.first(arglist__2793);
        var args = cljs.core.rest(arglist__2793);
        return G__2791__delegate(x, y, z, args);
      };
      G__2791.cljs$core$IFn$_invoke$arity$variadic = G__2791__delegate;
      return G__2791;
    }();
    G__2790 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2790__0.call(this);
        case 1:
          return G__2790__1.call(this, x);
        case 2:
          return G__2790__2.call(this, x, y);
        case 3:
          return G__2790__3.call(this, x, y, z);
        default:
          var G__2794 = null;
          if (arguments.length > 3) {
            var G__2795__i = 0, G__2795__a = new Array(arguments.length - 3);
            while (G__2795__i < G__2795__a.length) {
              G__2795__a[G__2795__i] = arguments[G__2795__i + 3];
              ++G__2795__i;
            }
            G__2794 = new cljs.core.IndexedSeq(G__2795__a, 0, null);
          }
          return G__2790__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2794);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2790.cljs$lang$maxFixedArity = 3;
    G__2790.cljs$lang$applyTo = G__2790__4.cljs$lang$applyTo;
    G__2790.cljs$core$IFn$_invoke$arity$0 = G__2790__0;
    G__2790.cljs$core$IFn$_invoke$arity$1 = G__2790__1;
    G__2790.cljs$core$IFn$_invoke$arity$2 = G__2790__2;
    G__2790.cljs$core$IFn$_invoke$arity$3 = G__2790__3;
    G__2790.cljs$core$IFn$_invoke$arity$variadic = G__2790__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2790;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__2796 = null;
    var G__2796__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__2796__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__2796__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__2796__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__2796__4 = function() {
      var G__2797__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__2797 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2798__i = 0, G__2798__a = new Array(arguments.length - 3);
          while (G__2798__i < G__2798__a.length) {
            G__2798__a[G__2798__i] = arguments[G__2798__i + 3];
            ++G__2798__i;
          }
          args = new cljs.core.IndexedSeq(G__2798__a, 0, null);
        }
        return G__2797__delegate.call(this, x, y, z, args);
      };
      G__2797.cljs$lang$maxFixedArity = 3;
      G__2797.cljs$lang$applyTo = function(arglist__2799) {
        var x = cljs.core.first(arglist__2799);
        arglist__2799 = cljs.core.next(arglist__2799);
        var y = cljs.core.first(arglist__2799);
        arglist__2799 = cljs.core.next(arglist__2799);
        var z = cljs.core.first(arglist__2799);
        var args = cljs.core.rest(arglist__2799);
        return G__2797__delegate(x, y, z, args);
      };
      G__2797.cljs$core$IFn$_invoke$arity$variadic = G__2797__delegate;
      return G__2797;
    }();
    G__2796 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2796__0.call(this);
        case 1:
          return G__2796__1.call(this, x);
        case 2:
          return G__2796__2.call(this, x, y);
        case 3:
          return G__2796__3.call(this, x, y, z);
        default:
          var G__2800 = null;
          if (arguments.length > 3) {
            var G__2801__i = 0, G__2801__a = new Array(arguments.length - 3);
            while (G__2801__i < G__2801__a.length) {
              G__2801__a[G__2801__i] = arguments[G__2801__i + 3];
              ++G__2801__i;
            }
            G__2800 = new cljs.core.IndexedSeq(G__2801__a, 0, null);
          }
          return G__2796__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2800);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2796.cljs$lang$maxFixedArity = 3;
    G__2796.cljs$lang$applyTo = G__2796__4.cljs$lang$applyTo;
    G__2796.cljs$core$IFn$_invoke$arity$0 = G__2796__0;
    G__2796.cljs$core$IFn$_invoke$arity$1 = G__2796__1;
    G__2796.cljs$core$IFn$_invoke$arity$2 = G__2796__2;
    G__2796.cljs$core$IFn$_invoke$arity$3 = G__2796__3;
    G__2796.cljs$core$IFn$_invoke$arity$variadic = G__2796__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2796;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__2802 = null;
    var G__2802__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__2802__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__2802__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__2802__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__2802__4 = function() {
      var G__2803__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__2803 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2804__i = 0, G__2804__a = new Array(arguments.length - 3);
          while (G__2804__i < G__2804__a.length) {
            G__2804__a[G__2804__i] = arguments[G__2804__i + 3];
            ++G__2804__i;
          }
          args = new cljs.core.IndexedSeq(G__2804__a, 0, null);
        }
        return G__2803__delegate.call(this, x, y, z, args);
      };
      G__2803.cljs$lang$maxFixedArity = 3;
      G__2803.cljs$lang$applyTo = function(arglist__2805) {
        var x = cljs.core.first(arglist__2805);
        arglist__2805 = cljs.core.next(arglist__2805);
        var y = cljs.core.first(arglist__2805);
        arglist__2805 = cljs.core.next(arglist__2805);
        var z = cljs.core.first(arglist__2805);
        var args = cljs.core.rest(arglist__2805);
        return G__2803__delegate(x, y, z, args);
      };
      G__2803.cljs$core$IFn$_invoke$arity$variadic = G__2803__delegate;
      return G__2803;
    }();
    G__2802 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__2802__0.call(this);
        case 1:
          return G__2802__1.call(this, x);
        case 2:
          return G__2802__2.call(this, x, y);
        case 3:
          return G__2802__3.call(this, x, y, z);
        default:
          var G__2806 = null;
          if (arguments.length > 3) {
            var G__2807__i = 0, G__2807__a = new Array(arguments.length - 3);
            while (G__2807__i < G__2807__a.length) {
              G__2807__a[G__2807__i] = arguments[G__2807__i + 3];
              ++G__2807__i;
            }
            G__2806 = new cljs.core.IndexedSeq(G__2807__a, 0, null);
          }
          return G__2802__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2806);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2802.cljs$lang$maxFixedArity = 3;
    G__2802.cljs$lang$applyTo = G__2802__4.cljs$lang$applyTo;
    G__2802.cljs$core$IFn$_invoke$arity$0 = G__2802__0;
    G__2802.cljs$core$IFn$_invoke$arity$1 = G__2802__1;
    G__2802.cljs$core$IFn$_invoke$arity$2 = G__2802__2;
    G__2802.cljs$core$IFn$_invoke$arity$3 = G__2802__3;
    G__2802.cljs$core$IFn$_invoke$arity$variadic = G__2802__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2802;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__2808__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__2808 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__2809__i = 0, G__2809__a = new Array(arguments.length - 0);
        while (G__2809__i < G__2809__a.length) {
          G__2809__a[G__2809__i] = arguments[G__2809__i + 0];
          ++G__2809__i;
        }
        args = new cljs.core.IndexedSeq(G__2809__a, 0, null);
      }
      return G__2808__delegate.call(this, args);
    };
    G__2808.cljs$lang$maxFixedArity = 0;
    G__2808.cljs$lang$applyTo = function(arglist__2810) {
      var args = cljs.core.seq(arglist__2810);
      return G__2808__delegate(args);
    };
    G__2808.cljs$core$IFn$_invoke$arity$variadic = G__2808__delegate;
    return G__2808;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq2780) {
  var G__2781 = cljs.core.first(seq2780);
  var seq2780__$1 = cljs.core.next(seq2780);
  var G__2782 = cljs.core.first(seq2780__$1);
  var seq2780__$2 = cljs.core.next(seq2780__$1);
  var G__2783 = cljs.core.first(seq2780__$2);
  var seq2780__$3 = cljs.core.next(seq2780__$2);
  var G__2784 = cljs.core.first(seq2780__$3);
  var seq2780__$4 = cljs.core.next(seq2780__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2781, G__2782, G__2783, G__2784, seq2780__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__2812 = arguments.length;
  switch(G__2812) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__2830 = null;
    var G__2830__1 = function(a) {
      var G__2813 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2813) : f.call(null, G__2813);
    };
    var G__2830__2 = function(a, b) {
      var G__2814 = a == null ? x : a;
      var G__2815 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2814, G__2815) : f.call(null, G__2814, G__2815);
    };
    var G__2830__3 = function(a, b, c) {
      var G__2816 = a == null ? x : a;
      var G__2817 = b;
      var G__2818 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2816, G__2817, G__2818) : f.call(null, G__2816, G__2817, G__2818);
    };
    var G__2830__4 = function() {
      var G__2831__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__2831 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__2832__i = 0, G__2832__a = new Array(arguments.length - 3);
          while (G__2832__i < G__2832__a.length) {
            G__2832__a[G__2832__i] = arguments[G__2832__i + 3];
            ++G__2832__i;
          }
          ds = new cljs.core.IndexedSeq(G__2832__a, 0, null);
        }
        return G__2831__delegate.call(this, a, b, c, ds);
      };
      G__2831.cljs$lang$maxFixedArity = 3;
      G__2831.cljs$lang$applyTo = function(arglist__2833) {
        var a = cljs.core.first(arglist__2833);
        arglist__2833 = cljs.core.next(arglist__2833);
        var b = cljs.core.first(arglist__2833);
        arglist__2833 = cljs.core.next(arglist__2833);
        var c = cljs.core.first(arglist__2833);
        var ds = cljs.core.rest(arglist__2833);
        return G__2831__delegate(a, b, c, ds);
      };
      G__2831.cljs$core$IFn$_invoke$arity$variadic = G__2831__delegate;
      return G__2831;
    }();
    G__2830 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__2830__1.call(this, a);
        case 2:
          return G__2830__2.call(this, a, b);
        case 3:
          return G__2830__3.call(this, a, b, c);
        default:
          var G__2834 = null;
          if (arguments.length > 3) {
            var G__2835__i = 0, G__2835__a = new Array(arguments.length - 3);
            while (G__2835__i < G__2835__a.length) {
              G__2835__a[G__2835__i] = arguments[G__2835__i + 3];
              ++G__2835__i;
            }
            G__2834 = new cljs.core.IndexedSeq(G__2835__a, 0, null);
          }
          return G__2830__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__2834);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2830.cljs$lang$maxFixedArity = 3;
    G__2830.cljs$lang$applyTo = G__2830__4.cljs$lang$applyTo;
    G__2830.cljs$core$IFn$_invoke$arity$1 = G__2830__1;
    G__2830.cljs$core$IFn$_invoke$arity$2 = G__2830__2;
    G__2830.cljs$core$IFn$_invoke$arity$3 = G__2830__3;
    G__2830.cljs$core$IFn$_invoke$arity$variadic = G__2830__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2830;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__2836 = null;
    var G__2836__2 = function(a, b) {
      var G__2819 = a == null ? x : a;
      var G__2820 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2819, G__2820) : f.call(null, G__2819, G__2820);
    };
    var G__2836__3 = function(a, b, c) {
      var G__2821 = a == null ? x : a;
      var G__2822 = b == null ? y : b;
      var G__2823 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2821, G__2822, G__2823) : f.call(null, G__2821, G__2822, G__2823);
    };
    var G__2836__4 = function() {
      var G__2837__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__2837 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__2838__i = 0, G__2838__a = new Array(arguments.length - 3);
          while (G__2838__i < G__2838__a.length) {
            G__2838__a[G__2838__i] = arguments[G__2838__i + 3];
            ++G__2838__i;
          }
          ds = new cljs.core.IndexedSeq(G__2838__a, 0, null);
        }
        return G__2837__delegate.call(this, a, b, c, ds);
      };
      G__2837.cljs$lang$maxFixedArity = 3;
      G__2837.cljs$lang$applyTo = function(arglist__2839) {
        var a = cljs.core.first(arglist__2839);
        arglist__2839 = cljs.core.next(arglist__2839);
        var b = cljs.core.first(arglist__2839);
        arglist__2839 = cljs.core.next(arglist__2839);
        var c = cljs.core.first(arglist__2839);
        var ds = cljs.core.rest(arglist__2839);
        return G__2837__delegate(a, b, c, ds);
      };
      G__2837.cljs$core$IFn$_invoke$arity$variadic = G__2837__delegate;
      return G__2837;
    }();
    G__2836 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__2836__2.call(this, a, b);
        case 3:
          return G__2836__3.call(this, a, b, c);
        default:
          var G__2840 = null;
          if (arguments.length > 3) {
            var G__2841__i = 0, G__2841__a = new Array(arguments.length - 3);
            while (G__2841__i < G__2841__a.length) {
              G__2841__a[G__2841__i] = arguments[G__2841__i + 3];
              ++G__2841__i;
            }
            G__2840 = new cljs.core.IndexedSeq(G__2841__a, 0, null);
          }
          return G__2836__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__2840);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2836.cljs$lang$maxFixedArity = 3;
    G__2836.cljs$lang$applyTo = G__2836__4.cljs$lang$applyTo;
    G__2836.cljs$core$IFn$_invoke$arity$2 = G__2836__2;
    G__2836.cljs$core$IFn$_invoke$arity$3 = G__2836__3;
    G__2836.cljs$core$IFn$_invoke$arity$variadic = G__2836__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2836;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__2842 = null;
    var G__2842__2 = function(a, b) {
      var G__2824 = a == null ? x : a;
      var G__2825 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2824, G__2825) : f.call(null, G__2824, G__2825);
    };
    var G__2842__3 = function(a, b, c) {
      var G__2826 = a == null ? x : a;
      var G__2827 = b == null ? y : b;
      var G__2828 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2826, G__2827, G__2828) : f.call(null, G__2826, G__2827, G__2828);
    };
    var G__2842__4 = function() {
      var G__2843__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__2843 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__2844__i = 0, G__2844__a = new Array(arguments.length - 3);
          while (G__2844__i < G__2844__a.length) {
            G__2844__a[G__2844__i] = arguments[G__2844__i + 3];
            ++G__2844__i;
          }
          ds = new cljs.core.IndexedSeq(G__2844__a, 0, null);
        }
        return G__2843__delegate.call(this, a, b, c, ds);
      };
      G__2843.cljs$lang$maxFixedArity = 3;
      G__2843.cljs$lang$applyTo = function(arglist__2845) {
        var a = cljs.core.first(arglist__2845);
        arglist__2845 = cljs.core.next(arglist__2845);
        var b = cljs.core.first(arglist__2845);
        arglist__2845 = cljs.core.next(arglist__2845);
        var c = cljs.core.first(arglist__2845);
        var ds = cljs.core.rest(arglist__2845);
        return G__2843__delegate(a, b, c, ds);
      };
      G__2843.cljs$core$IFn$_invoke$arity$variadic = G__2843__delegate;
      return G__2843;
    }();
    G__2842 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__2842__2.call(this, a, b);
        case 3:
          return G__2842__3.call(this, a, b, c);
        default:
          var G__2846 = null;
          if (arguments.length > 3) {
            var G__2847__i = 0, G__2847__a = new Array(arguments.length - 3);
            while (G__2847__i < G__2847__a.length) {
              G__2847__a[G__2847__i] = arguments[G__2847__i + 3];
              ++G__2847__i;
            }
            G__2846 = new cljs.core.IndexedSeq(G__2847__a, 0, null);
          }
          return G__2842__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__2846);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__2842.cljs$lang$maxFixedArity = 3;
    G__2842.cljs$lang$applyTo = G__2842__4.cljs$lang$applyTo;
    G__2842.cljs$core$IFn$_invoke$arity$2 = G__2842__2;
    G__2842.cljs$core$IFn$_invoke$arity$3 = G__2842__3;
    G__2842.cljs$core$IFn$_invoke$arity$variadic = G__2842__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__2842;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__2849 = arguments.length;
  switch(G__2849) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function(i) {
      return function() {
        var G__2863 = null;
        var G__2863__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__2863__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__2863__2 = function(result, input) {
          var G__2850 = result;
          var G__2851 = function() {
            var G__2852 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__2853 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2852, G__2853) : f.call(null, G__2852, G__2853);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2850, G__2851) : rf.call(null, G__2850, G__2851);
        };
        G__2863 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__2863__0.call(this);
            case 1:
              return G__2863__1.call(this, result);
            case 2:
              return G__2863__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2863.cljs$core$IFn$_invoke$arity$0 = G__2863__0;
        G__2863.cljs$core$IFn$_invoke$arity$1 = G__2863__1;
        G__2863.cljs$core$IFn$_invoke$arity$2 = G__2863__2;
        return G__2863;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4376__auto___2864 = size;
          var i_2865 = 0;
          while (true) {
            if (i_2865 < n__4376__auto___2864) {
              cljs.core.chunk_append(b, function() {
                var G__2858 = idx + i_2865;
                var G__2859 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_2865);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2858, G__2859) : f.call(null, G__2858, G__2859);
              }());
              var G__2866 = i_2865 + 1;
              i_2865 = G__2866;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__2860 = idx;
            var G__2861 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2860, G__2861) : f.call(null, G__2860, G__2861);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__2868 = arguments.length;
  switch(G__2868) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__2872 = null;
      var G__2872__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__2872__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__2872__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__2872 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__2872__0.call(this);
          case 1:
            return G__2872__1.call(this, result);
          case 2:
            return G__2872__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__2872.cljs$core$IFn$_invoke$arity$0 = G__2872__0;
      G__2872.cljs$core$IFn$_invoke$arity$1 = G__2872__1;
      G__2872.cljs$core$IFn$_invoke$arity$2 = G__2872__2;
      return G__2872;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4376__auto___2873 = size;
        var i_2874 = 0;
        while (true) {
          if (i_2874 < n__4376__auto___2873) {
            var x_2875 = function() {
              var G__2869 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_2874);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2869) : f.call(null, G__2869);
            }();
            if (x_2875 == null) {
            } else {
              cljs.core.chunk_append(b, x_2875);
            }
            var G__2876 = i_2874 + 1;
            i_2874 = G__2876;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__2870 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2870) : f.call(null, G__2870);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__2877 = cljs.core.seq(self__.watches);
  var chunk__2878 = null;
  var count__2879 = 0;
  var i__2880 = 0;
  while (true) {
    if (i__2880 < count__2879) {
      var vec__2881 = chunk__2878.cljs$core$IIndexed$_nth$arity$2(null, i__2880);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2881, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2881, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__2887 = seq__2877;
      var G__2888 = chunk__2878;
      var G__2889 = count__2879;
      var G__2890 = i__2880 + 1;
      seq__2877 = G__2887;
      chunk__2878 = G__2888;
      count__2879 = G__2889;
      i__2880 = G__2890;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__2877);
      if (temp__4657__auto__) {
        var seq__2877__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__2877__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__2877__$1);
          var G__2891 = cljs.core.chunk_rest(seq__2877__$1);
          var G__2892 = c__4319__auto__;
          var G__2893 = cljs.core.count(c__4319__auto__);
          var G__2894 = 0;
          seq__2877 = G__2891;
          chunk__2878 = G__2892;
          count__2879 = G__2893;
          i__2880 = G__2894;
          continue;
        } else {
          var vec__2884 = cljs.core.first(seq__2877__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2884, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2884, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__2895 = cljs.core.next(seq__2877__$1);
          var G__2896 = null;
          var G__2897 = 0;
          var G__2898 = 0;
          seq__2877 = G__2895;
          chunk__2878 = G__2896;
          count__2879 = G__2897;
          i__2880 = G__2898;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__2902 = arguments.length;
  switch(G__2902) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2907 = arguments.length;
      var i__4500__auto___2908 = 0;
      while (true) {
        if (i__4500__auto___2908 < len__4499__auto___2907) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2908]);
          var G__2909 = i__4500__auto___2908 + 1;
          i__4500__auto___2908 = G__2909;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4515__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__2903) {
  var map__2904 = p__2903;
  var map__2904__$1 = (!(map__2904 == null) ? map__2904.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2904.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__2904) : map__2904;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2904__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2904__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq2900) {
  var G__2901 = cljs.core.first(seq2900);
  var seq2900__$1 = cljs.core.next(seq2900);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2901, seq2900__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__2916 = arguments.length;
  switch(G__2916) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2924 = arguments.length;
      var i__4500__auto___2925 = 0;
      while (true) {
        if (i__4500__auto___2925 < len__4499__auto___2924) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2925]);
          var G__2926 = i__4500__auto___2925 + 1;
          i__4500__auto___2925 = G__2926;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__2917 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2917) : f.call(null, G__2917);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__2918 = a.state;
      var G__2919 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2918, G__2919) : f.call(null, G__2918, G__2919);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__2920 = a.state;
      var G__2921 = x;
      var G__2922 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2920, G__2921, G__2922) : f.call(null, G__2920, G__2921, G__2922);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq2911) {
  var G__2912 = cljs.core.first(seq2911);
  var seq2911__$1 = cljs.core.next(seq2911);
  var G__2913 = cljs.core.first(seq2911__$1);
  var seq2911__$2 = cljs.core.next(seq2911__$1);
  var G__2914 = cljs.core.first(seq2911__$2);
  var seq2911__$3 = cljs.core.next(seq2911__$2);
  var G__2915 = cljs.core.first(seq2911__$3);
  var seq2911__$4 = cljs.core.next(seq2911__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2912, G__2913, G__2914, G__2915, seq2911__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__2933 = arguments.length;
  switch(G__2933) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2941 = arguments.length;
      var i__4500__auto___2942 = 0;
      while (true) {
        if (i__4500__auto___2942 < len__4499__auto___2941) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2942]);
          var G__2943 = i__4500__auto___2942 + 1;
          i__4500__auto___2942 = G__2943;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__2934 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2934) : f.call(null, G__2934);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__2935 = a.state;
    var G__2936 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2935, G__2936) : f.call(null, G__2935, G__2936);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__2937 = a.state;
    var G__2938 = x;
    var G__2939 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2937, G__2938, G__2939) : f.call(null, G__2937, G__2938, G__2939);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq2928) {
  var G__2929 = cljs.core.first(seq2928);
  var seq2928__$1 = cljs.core.next(seq2928);
  var G__2930 = cljs.core.first(seq2928__$1);
  var seq2928__$2 = cljs.core.next(seq2928__$1);
  var G__2931 = cljs.core.first(seq2928__$2);
  var seq2928__$3 = cljs.core.next(seq2928__$2);
  var G__2932 = cljs.core.first(seq2928__$3);
  var seq2928__$4 = cljs.core.next(seq2928__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2929, G__2930, G__2931, G__2932, seq2928__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__2945 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__2945) : val.call(null, G__2945);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__2947 = arguments.length;
  switch(G__2947) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__2957 = null;
        var G__2957__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__2957__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__2957__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__2957 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__2957__0.call(this);
            case 1:
              return G__2957__1.call(this, result);
            case 2:
              return G__2957__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2957.cljs$core$IFn$_invoke$arity$0 = G__2957__0;
        G__2957.cljs$core$IFn$_invoke$arity$1 = G__2957__1;
        G__2957.cljs$core$IFn$_invoke$arity$2 = G__2957__2;
        return G__2957;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4376__auto___2958 = size;
          var i_2959 = 0;
          while (true) {
            if (i_2959 < n__4376__auto___2958) {
              var x_2960 = function() {
                var G__2952 = idx + i_2959;
                var G__2953 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_2959);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2952, G__2953) : f.call(null, G__2952, G__2953);
              }();
              if (x_2960 == null) {
              } else {
                cljs.core.chunk_append(b, x_2960);
              }
              var G__2961 = i_2959 + 1;
              i_2959 = G__2961;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__2954 = idx;
            var G__2955 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2954, G__2955) : f.call(null, G__2954, G__2955);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__2973 = arguments.length;
  switch(G__2973) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___2975 = arguments.length;
      var i__4500__auto___2976 = 0;
      while (true) {
        if (i__4500__auto___2976 < len__4499__auto___2975) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___2976]);
          var G__2977 = i__4500__auto___2976 + 1;
          i__4500__auto___2976 = G__2977;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__2978__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__3911__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__3911__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__3911__auto__;
          }
        }());
      };
      var G__2978 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2979__i = 0, G__2979__a = new Array(arguments.length - 3);
          while (G__2979__i < G__2979__a.length) {
            G__2979__a[G__2979__i] = arguments[G__2979__i + 3];
            ++G__2979__i;
          }
          args = new cljs.core.IndexedSeq(G__2979__a, 0, null);
        }
        return G__2978__delegate.call(this, x, y, z, args);
      };
      G__2978.cljs$lang$maxFixedArity = 3;
      G__2978.cljs$lang$applyTo = function(arglist__2980) {
        var x = cljs.core.first(arglist__2980);
        arglist__2980 = cljs.core.next(arglist__2980);
        var y = cljs.core.first(arglist__2980);
        arglist__2980 = cljs.core.next(arglist__2980);
        var z = cljs.core.first(arglist__2980);
        var args = cljs.core.rest(arglist__2980);
        return G__2978__delegate(x, y, z, args);
      };
      G__2978.cljs$core$IFn$_invoke$arity$variadic = G__2978__delegate;
      return G__2978;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__2981 = null;
          if (arguments.length > 3) {
            var G__2982__i = 0, G__2982__a = new Array(arguments.length - 3);
            while (G__2982__i < G__2982__a.length) {
              G__2982__a[G__2982__i] = arguments[G__2982__i + 3];
              ++G__2982__i;
            }
            G__2981 = new cljs.core.IndexedSeq(G__2982__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2981);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            var and__3911__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__3911__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__3911__auto____$2;
            }
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            var and__3911__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__3911__auto____$2)) {
              var and__3911__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__3911__auto____$3)) {
                var and__3911__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__3911__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__3911__auto____$4;
                }
              } else {
                return and__3911__auto____$3;
              }
            } else {
              return and__3911__auto____$2;
            }
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__2983__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__3911__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__3911__auto__)) {
            return cljs.core.every_QMARK_(function(and__3911__auto__) {
              return function(p1__2962_SHARP_) {
                var and__3911__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__2962_SHARP_) : p1.call(null, p1__2962_SHARP_);
                if (cljs.core.truth_(and__3911__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__2962_SHARP_) : p2.call(null, p1__2962_SHARP_);
                } else {
                  return and__3911__auto____$1;
                }
              };
            }(and__3911__auto__), args);
          } else {
            return and__3911__auto__;
          }
        }());
      };
      var G__2983 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2984__i = 0, G__2984__a = new Array(arguments.length - 3);
          while (G__2984__i < G__2984__a.length) {
            G__2984__a[G__2984__i] = arguments[G__2984__i + 3];
            ++G__2984__i;
          }
          args = new cljs.core.IndexedSeq(G__2984__a, 0, null);
        }
        return G__2983__delegate.call(this, x, y, z, args);
      };
      G__2983.cljs$lang$maxFixedArity = 3;
      G__2983.cljs$lang$applyTo = function(arglist__2985) {
        var x = cljs.core.first(arglist__2985);
        arglist__2985 = cljs.core.next(arglist__2985);
        var y = cljs.core.first(arglist__2985);
        arglist__2985 = cljs.core.next(arglist__2985);
        var z = cljs.core.first(arglist__2985);
        var args = cljs.core.rest(arglist__2985);
        return G__2983__delegate(x, y, z, args);
      };
      G__2983.cljs$core$IFn$_invoke$arity$variadic = G__2983__delegate;
      return G__2983;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__2986 = null;
          if (arguments.length > 3) {
            var G__2987__i = 0, G__2987__a = new Array(arguments.length - 3);
            while (G__2987__i < G__2987__a.length) {
              G__2987__a[G__2987__i] = arguments[G__2987__i + 3];
              ++G__2987__i;
            }
            G__2986 = new cljs.core.IndexedSeq(G__2987__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2986);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            var and__3911__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__3911__auto____$2)) {
              var and__3911__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__3911__auto____$3)) {
                var and__3911__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__3911__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__3911__auto____$4;
                }
              } else {
                return and__3911__auto____$3;
              }
            } else {
              return and__3911__auto____$2;
            }
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__3911__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__3911__auto____$1)) {
            var and__3911__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__3911__auto____$2)) {
              var and__3911__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__3911__auto____$3)) {
                var and__3911__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__3911__auto____$4)) {
                  var and__3911__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__3911__auto____$5)) {
                    var and__3911__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__3911__auto____$6)) {
                      var and__3911__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__3911__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__3911__auto____$7;
                      }
                    } else {
                      return and__3911__auto____$6;
                    }
                  } else {
                    return and__3911__auto____$5;
                  }
                } else {
                  return and__3911__auto____$4;
                }
              } else {
                return and__3911__auto____$3;
              }
            } else {
              return and__3911__auto____$2;
            }
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__2988__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__3911__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__3911__auto__)) {
            return cljs.core.every_QMARK_(function(and__3911__auto__) {
              return function(p1__2963_SHARP_) {
                var and__3911__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__2963_SHARP_) : p1.call(null, p1__2963_SHARP_);
                if (cljs.core.truth_(and__3911__auto____$1)) {
                  var and__3911__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__2963_SHARP_) : p2.call(null, p1__2963_SHARP_);
                  if (cljs.core.truth_(and__3911__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__2963_SHARP_) : p3.call(null, p1__2963_SHARP_);
                  } else {
                    return and__3911__auto____$2;
                  }
                } else {
                  return and__3911__auto____$1;
                }
              };
            }(and__3911__auto__), args);
          } else {
            return and__3911__auto__;
          }
        }());
      };
      var G__2988 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__2989__i = 0, G__2989__a = new Array(arguments.length - 3);
          while (G__2989__i < G__2989__a.length) {
            G__2989__a[G__2989__i] = arguments[G__2989__i + 3];
            ++G__2989__i;
          }
          args = new cljs.core.IndexedSeq(G__2989__a, 0, null);
        }
        return G__2988__delegate.call(this, x, y, z, args);
      };
      G__2988.cljs$lang$maxFixedArity = 3;
      G__2988.cljs$lang$applyTo = function(arglist__2990) {
        var x = cljs.core.first(arglist__2990);
        arglist__2990 = cljs.core.next(arglist__2990);
        var y = cljs.core.first(arglist__2990);
        arglist__2990 = cljs.core.next(arglist__2990);
        var z = cljs.core.first(arglist__2990);
        var args = cljs.core.rest(arglist__2990);
        return G__2988__delegate(x, y, z, args);
      };
      G__2988.cljs$core$IFn$_invoke$arity$variadic = G__2988__delegate;
      return G__2988;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__2991 = null;
          if (arguments.length > 3) {
            var G__2992__i = 0, G__2992__a = new Array(arguments.length - 3);
            while (G__2992__i < G__2992__a.length) {
              G__2992__a[G__2992__i] = arguments[G__2992__i + 3];
              ++G__2992__i;
            }
            G__2991 = new cljs.core.IndexedSeq(G__2992__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2991);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__2964_SHARP_) {
            return p1__2964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2964_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__2964_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__2965_SHARP_) {
            var and__3911__auto__ = p1__2965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2965_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__2965_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3911__auto__)) {
              return p1__2965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2965_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__2965_SHARP_.call(null, y);
            } else {
              return and__3911__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__2966_SHARP_) {
            var and__3911__auto__ = p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__2966_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3911__auto__)) {
              var and__3911__auto____$1 = p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__2966_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3911__auto____$1)) {
                return p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2966_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__2966_SHARP_.call(null, z);
              } else {
                return and__3911__auto____$1;
              }
            } else {
              return and__3911__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__2993__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__3911__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__3911__auto__)) {
              return cljs.core.every_QMARK_(function(and__3911__auto__, ps__$1) {
                return function(p1__2967_SHARP_) {
                  return cljs.core.every_QMARK_(p1__2967_SHARP_, args);
                };
              }(and__3911__auto__, ps__$1), ps__$1);
            } else {
              return and__3911__auto__;
            }
          }());
        };
        var G__2993 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__2994__i = 0, G__2994__a = new Array(arguments.length - 3);
            while (G__2994__i < G__2994__a.length) {
              G__2994__a[G__2994__i] = arguments[G__2994__i + 3];
              ++G__2994__i;
            }
            args = new cljs.core.IndexedSeq(G__2994__a, 0, null);
          }
          return G__2993__delegate.call(this, x, y, z, args);
        };
        G__2993.cljs$lang$maxFixedArity = 3;
        G__2993.cljs$lang$applyTo = function(arglist__2995) {
          var x = cljs.core.first(arglist__2995);
          arglist__2995 = cljs.core.next(arglist__2995);
          var y = cljs.core.first(arglist__2995);
          arglist__2995 = cljs.core.next(arglist__2995);
          var z = cljs.core.first(arglist__2995);
          var args = cljs.core.rest(arglist__2995);
          return G__2993__delegate(x, y, z, args);
        };
        G__2993.cljs$core$IFn$_invoke$arity$variadic = G__2993__delegate;
        return G__2993;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__2996 = null;
            if (arguments.length > 3) {
              var G__2997__i = 0, G__2997__a = new Array(arguments.length - 3);
              while (G__2997__i < G__2997__a.length) {
                G__2997__a[G__2997__i] = arguments[G__2997__i + 3];
                ++G__2997__i;
              }
              G__2996 = new cljs.core.IndexedSeq(G__2997__a, 0, null);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__2996);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq2969) {
  var G__2970 = cljs.core.first(seq2969);
  var seq2969__$1 = cljs.core.next(seq2969);
  var G__2971 = cljs.core.first(seq2969__$1);
  var seq2969__$2 = cljs.core.next(seq2969__$1);
  var G__2972 = cljs.core.first(seq2969__$2);
  var seq2969__$3 = cljs.core.next(seq2969__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2970, G__2971, G__2972, seq2969__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__3009 = arguments.length;
  switch(G__3009) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3011 = arguments.length;
      var i__4500__auto___3012 = 0;
      while (true) {
        if (i__4500__auto___3012 < len__4499__auto___3011) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3012]);
          var G__3013 = i__4500__auto___3012 + 1;
          i__4500__auto___3012 = G__3013;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__3922__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__3922__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__3014__delegate = function(x, y, z, args) {
        var or__3922__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__3014 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3015__i = 0, G__3015__a = new Array(arguments.length - 3);
          while (G__3015__i < G__3015__a.length) {
            G__3015__a[G__3015__i] = arguments[G__3015__i + 3];
            ++G__3015__i;
          }
          args = new cljs.core.IndexedSeq(G__3015__a, 0, null);
        }
        return G__3014__delegate.call(this, x, y, z, args);
      };
      G__3014.cljs$lang$maxFixedArity = 3;
      G__3014.cljs$lang$applyTo = function(arglist__3016) {
        var x = cljs.core.first(arglist__3016);
        arglist__3016 = cljs.core.next(arglist__3016);
        var y = cljs.core.first(arglist__3016);
        arglist__3016 = cljs.core.next(arglist__3016);
        var z = cljs.core.first(arglist__3016);
        var args = cljs.core.rest(arglist__3016);
        return G__3014__delegate(x, y, z, args);
      };
      G__3014.cljs$core$IFn$_invoke$arity$variadic = G__3014__delegate;
      return G__3014;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__3017 = null;
          if (arguments.length > 3) {
            var G__3018__i = 0, G__3018__a = new Array(arguments.length - 3);
            while (G__3018__i < G__3018__a.length) {
              G__3018__a[G__3018__i] = arguments[G__3018__i + 3];
              ++G__3018__i;
            }
            G__3017 = new cljs.core.IndexedSeq(G__3018__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3017);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          var or__3922__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__3922__auto____$2)) {
            return or__3922__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          var or__3922__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__3922__auto____$2)) {
            return or__3922__auto____$2;
          } else {
            var or__3922__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__3922__auto____$3)) {
              return or__3922__auto____$3;
            } else {
              var or__3922__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__3922__auto____$4)) {
                return or__3922__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__3019__delegate = function(x, y, z, args) {
        var or__3922__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.some(function(or__3922__auto__) {
            return function(p1__2998_SHARP_) {
              var or__3922__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__2998_SHARP_) : p1.call(null, p1__2998_SHARP_);
              if (cljs.core.truth_(or__3922__auto____$1)) {
                return or__3922__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__2998_SHARP_) : p2.call(null, p1__2998_SHARP_);
              }
            };
          }(or__3922__auto__), args);
        }
      };
      var G__3019 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3020__i = 0, G__3020__a = new Array(arguments.length - 3);
          while (G__3020__i < G__3020__a.length) {
            G__3020__a[G__3020__i] = arguments[G__3020__i + 3];
            ++G__3020__i;
          }
          args = new cljs.core.IndexedSeq(G__3020__a, 0, null);
        }
        return G__3019__delegate.call(this, x, y, z, args);
      };
      G__3019.cljs$lang$maxFixedArity = 3;
      G__3019.cljs$lang$applyTo = function(arglist__3021) {
        var x = cljs.core.first(arglist__3021);
        arglist__3021 = cljs.core.next(arglist__3021);
        var y = cljs.core.first(arglist__3021);
        arglist__3021 = cljs.core.next(arglist__3021);
        var z = cljs.core.first(arglist__3021);
        var args = cljs.core.rest(arglist__3021);
        return G__3019__delegate(x, y, z, args);
      };
      G__3019.cljs$core$IFn$_invoke$arity$variadic = G__3019__delegate;
      return G__3019;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__3022 = null;
          if (arguments.length > 3) {
            var G__3023__i = 0, G__3023__a = new Array(arguments.length - 3);
            while (G__3023__i < G__3023__a.length) {
              G__3023__a[G__3023__i] = arguments[G__3023__i + 3];
              ++G__3023__i;
            }
            G__3022 = new cljs.core.IndexedSeq(G__3023__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3022);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          var or__3922__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__3922__auto____$2)) {
            return or__3922__auto____$2;
          } else {
            var or__3922__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__3922__auto____$3)) {
              return or__3922__auto____$3;
            } else {
              var or__3922__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__3922__auto____$4)) {
                return or__3922__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__3922__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          var or__3922__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__3922__auto____$2)) {
            return or__3922__auto____$2;
          } else {
            var or__3922__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__3922__auto____$3)) {
              return or__3922__auto____$3;
            } else {
              var or__3922__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__3922__auto____$4)) {
                return or__3922__auto____$4;
              } else {
                var or__3922__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__3922__auto____$5)) {
                  return or__3922__auto____$5;
                } else {
                  var or__3922__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__3922__auto____$6)) {
                    return or__3922__auto____$6;
                  } else {
                    var or__3922__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__3922__auto____$7)) {
                      return or__3922__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__3024__delegate = function(x, y, z, args) {
        var or__3922__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.some(function(or__3922__auto__) {
            return function(p1__2999_SHARP_) {
              var or__3922__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__2999_SHARP_) : p1.call(null, p1__2999_SHARP_);
              if (cljs.core.truth_(or__3922__auto____$1)) {
                return or__3922__auto____$1;
              } else {
                var or__3922__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__2999_SHARP_) : p2.call(null, p1__2999_SHARP_);
                if (cljs.core.truth_(or__3922__auto____$2)) {
                  return or__3922__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__2999_SHARP_) : p3.call(null, p1__2999_SHARP_);
                }
              }
            };
          }(or__3922__auto__), args);
        }
      };
      var G__3024 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3025__i = 0, G__3025__a = new Array(arguments.length - 3);
          while (G__3025__i < G__3025__a.length) {
            G__3025__a[G__3025__i] = arguments[G__3025__i + 3];
            ++G__3025__i;
          }
          args = new cljs.core.IndexedSeq(G__3025__a, 0, null);
        }
        return G__3024__delegate.call(this, x, y, z, args);
      };
      G__3024.cljs$lang$maxFixedArity = 3;
      G__3024.cljs$lang$applyTo = function(arglist__3026) {
        var x = cljs.core.first(arglist__3026);
        arglist__3026 = cljs.core.next(arglist__3026);
        var y = cljs.core.first(arglist__3026);
        arglist__3026 = cljs.core.next(arglist__3026);
        var z = cljs.core.first(arglist__3026);
        var args = cljs.core.rest(arglist__3026);
        return G__3024__delegate(x, y, z, args);
      };
      G__3024.cljs$core$IFn$_invoke$arity$variadic = G__3024__delegate;
      return G__3024;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__3027 = null;
          if (arguments.length > 3) {
            var G__3028__i = 0, G__3028__a = new Array(arguments.length - 3);
            while (G__3028__i < G__3028__a.length) {
              G__3028__a[G__3028__i] = arguments[G__3028__i + 3];
              ++G__3028__i;
            }
            G__3027 = new cljs.core.IndexedSeq(G__3028__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3027);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3000_SHARP_) {
            return p1__3000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3000_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3000_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3001_SHARP_) {
            var or__3922__auto__ = p1__3001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3001_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3001_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return p1__3001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3001_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3001_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3002_SHARP_) {
            var or__3922__auto__ = p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3002_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              var or__3922__auto____$1 = p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3002_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3922__auto____$1)) {
                return or__3922__auto____$1;
              } else {
                return p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3002_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3002_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__3029__delegate = function(x, y, z, args) {
          var or__3922__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return cljs.core.some(function(or__3922__auto__, ps__$1) {
              return function(p1__3003_SHARP_) {
                return cljs.core.some(p1__3003_SHARP_, args);
              };
            }(or__3922__auto__, ps__$1), ps__$1);
          }
        };
        var G__3029 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3030__i = 0, G__3030__a = new Array(arguments.length - 3);
            while (G__3030__i < G__3030__a.length) {
              G__3030__a[G__3030__i] = arguments[G__3030__i + 3];
              ++G__3030__i;
            }
            args = new cljs.core.IndexedSeq(G__3030__a, 0, null);
          }
          return G__3029__delegate.call(this, x, y, z, args);
        };
        G__3029.cljs$lang$maxFixedArity = 3;
        G__3029.cljs$lang$applyTo = function(arglist__3031) {
          var x = cljs.core.first(arglist__3031);
          arglist__3031 = cljs.core.next(arglist__3031);
          var y = cljs.core.first(arglist__3031);
          arglist__3031 = cljs.core.next(arglist__3031);
          var z = cljs.core.first(arglist__3031);
          var args = cljs.core.rest(arglist__3031);
          return G__3029__delegate(x, y, z, args);
        };
        G__3029.cljs$core$IFn$_invoke$arity$variadic = G__3029__delegate;
        return G__3029;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__3032 = null;
            if (arguments.length > 3) {
              var G__3033__i = 0, G__3033__a = new Array(arguments.length - 3);
              while (G__3033__i < G__3033__a.length) {
                G__3033__a[G__3033__i] = arguments[G__3033__i + 3];
                ++G__3033__i;
              }
              G__3032 = new cljs.core.IndexedSeq(G__3033__a, 0, null);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3032);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq3005) {
  var G__3006 = cljs.core.first(seq3005);
  var seq3005__$1 = cljs.core.next(seq3005);
  var G__3007 = cljs.core.first(seq3005__$1);
  var seq3005__$2 = cljs.core.next(seq3005__$1);
  var G__3008 = cljs.core.first(seq3005__$2);
  var seq3005__$3 = cljs.core.next(seq3005__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3006, G__3007, G__3008, seq3005__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__3041 = arguments.length;
  switch(G__3041) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3054 = arguments.length;
      var i__4500__auto___3055 = 0;
      while (true) {
        if (i__4500__auto___3055 < len__4499__auto___3054) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3055]);
          var G__3056 = i__4500__auto___3055 + 1;
          i__4500__auto___3055 = G__3056;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3057 = null;
      var G__3057__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3057__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3057__2 = function(result, input) {
        var G__3042 = result;
        var G__3043 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3042, G__3043) : rf.call(null, G__3042, G__3043);
      };
      var G__3057__3 = function() {
        var G__3058__delegate = function(result, input, inputs) {
          var G__3044 = result;
          var G__3045 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3044, G__3045) : rf.call(null, G__3044, G__3045);
        };
        var G__3058 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__3059__i = 0, G__3059__a = new Array(arguments.length - 2);
            while (G__3059__i < G__3059__a.length) {
              G__3059__a[G__3059__i] = arguments[G__3059__i + 2];
              ++G__3059__i;
            }
            inputs = new cljs.core.IndexedSeq(G__3059__a, 0, null);
          }
          return G__3058__delegate.call(this, result, input, inputs);
        };
        G__3058.cljs$lang$maxFixedArity = 2;
        G__3058.cljs$lang$applyTo = function(arglist__3060) {
          var result = cljs.core.first(arglist__3060);
          arglist__3060 = cljs.core.next(arglist__3060);
          var input = cljs.core.first(arglist__3060);
          var inputs = cljs.core.rest(arglist__3060);
          return G__3058__delegate(result, input, inputs);
        };
        G__3058.cljs$core$IFn$_invoke$arity$variadic = G__3058__delegate;
        return G__3058;
      }();
      G__3057 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__3057__0.call(this);
          case 1:
            return G__3057__1.call(this, result);
          case 2:
            return G__3057__2.call(this, result, input);
          default:
            var G__3061 = null;
            if (arguments.length > 2) {
              var G__3062__i = 0, G__3062__a = new Array(arguments.length - 2);
              while (G__3062__i < G__3062__a.length) {
                G__3062__a[G__3062__i] = arguments[G__3062__i + 2];
                ++G__3062__i;
              }
              G__3061 = new cljs.core.IndexedSeq(G__3062__a, 0, null);
            }
            return G__3057__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__3061);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__3057.cljs$lang$maxFixedArity = 2;
      G__3057.cljs$lang$applyTo = G__3057__3.cljs$lang$applyTo;
      G__3057.cljs$core$IFn$_invoke$arity$0 = G__3057__0;
      G__3057.cljs$core$IFn$_invoke$arity$1 = G__3057__1;
      G__3057.cljs$core$IFn$_invoke$arity$2 = G__3057__2;
      G__3057.cljs$core$IFn$_invoke$arity$variadic = G__3057__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__3057;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4376__auto___3063 = size;
        var i_3064 = 0;
        while (true) {
          if (i_3064 < n__4376__auto___3063) {
            cljs.core.chunk_append(b, function() {
              var G__3046 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3064);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3046) : f.call(null, G__3046);
            }());
            var G__3065 = i_3064 + 1;
            i_3064 = G__3065;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__3047 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3047) : f.call(null, G__3047);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__3048 = cljs.core.first(s1);
        var G__3049 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3048, G__3049) : f.call(null, G__3048, G__3049);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__3050 = cljs.core.first(s1);
        var G__3051 = cljs.core.first(s2);
        var G__3052 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3050, G__3051, G__3052) : f.call(null, G__3050, G__3051, G__3052);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__3034_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__3034_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq3036) {
  var G__3037 = cljs.core.first(seq3036);
  var seq3036__$1 = cljs.core.next(seq3036);
  var G__3038 = cljs.core.first(seq3036__$1);
  var seq3036__$2 = cljs.core.next(seq3036__$1);
  var G__3039 = cljs.core.first(seq3036__$2);
  var seq3036__$3 = cljs.core.next(seq3036__$2);
  var G__3040 = cljs.core.first(seq3036__$3);
  var seq3036__$4 = cljs.core.next(seq3036__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3037, G__3038, G__3039, G__3040, seq3036__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__3067 = arguments.length;
  switch(G__3067) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3069 = null;
        var G__3069__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3069__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3069__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__3069 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3069__0.call(this);
            case 1:
              return G__3069__1.call(this, result);
            case 2:
              return G__3069__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3069.cljs$core$IFn$_invoke$arity$0 = G__3069__0;
        G__3069.cljs$core$IFn$_invoke$arity$1 = G__3069__1;
        G__3069.cljs$core$IFn$_invoke$arity$2 = G__3069__2;
        return G__3069;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__3071 = arguments.length;
  switch(G__3071) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3073 = null;
        var G__3073__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3073__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3073__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3073 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3073__0.call(this);
            case 1:
              return G__3073__1.call(this, result);
            case 2:
              return G__3073__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3073.cljs$core$IFn$_invoke$arity$0 = G__3073__0;
        G__3073.cljs$core$IFn$_invoke$arity$1 = G__3073__1;
        G__3073.cljs$core$IFn$_invoke$arity$2 = G__3073__2;
        return G__3073;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__3074 = n__$1 - 1;
        var G__3075 = cljs.core.rest(s);
        n__$1 = G__3074;
        coll__$1 = G__3075;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__3077 = arguments.length;
  switch(G__3077) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__3079 = cljs.core.next(s);
      var G__3080 = cljs.core.next(lead);
      s = G__3079;
      lead = G__3080;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__3082 = arguments.length;
  switch(G__3082) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__3086 = null;
        var G__3086__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3086__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3086__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__3911__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__3911__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__3911__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3086 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3086__0.call(this);
            case 1:
              return G__3086__1.call(this, result);
            case 2:
              return G__3086__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3086.cljs$core$IFn$_invoke$arity$0 = G__3086__0;
        G__3086.cljs$core$IFn$_invoke$arity$1 = G__3086__1;
        G__3086.cljs$core$IFn$_invoke$arity$2 = G__3086__2;
        return G__3086;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__3911__auto__ = s;
        if (and__3911__auto__) {
          var G__3084 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3084) : pred__$1.call(null, G__3084);
        } else {
          return and__3911__auto__;
        }
      }())) {
        var G__3087 = pred__$1;
        var G__3088 = cljs.core.rest(s);
        pred__$1 = G__3087;
        coll__$1 = G__3088;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__4655__auto___3093 = cljs.core.next(self__.prev);
    if (temp__4655__auto___3093) {
      var c_3094 = temp__4655__auto___3093;
      self__.current = c_3094;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__3922__auto__ = cljs.core.next(s);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__3089 = ret;
      var G__3090 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3089, G__3090) : f.call(null, G__3089, G__3090);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3095 = s__$1;
      var G__3096 = ret__$1;
      s = G__3095;
      ret = G__3096;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__3091 = ret;
      var G__3092 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3091, G__3092) : f.call(null, G__3091, G__3092);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3097 = function() {
        var or__3922__auto__ = cljs.core.next(s);
        if (or__3922__auto__) {
          return or__3922__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__3098 = ret__$1;
      s = G__3097;
      ret = G__3098;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cycle(meta__$1, self__.all, self__.prev, self__.current, self__._next);
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var vals = temp__4655__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__3099 = null;
  var G__3099__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3099__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3099 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3099__1.call(this, x);
      case 2:
        return G__3099__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3099.cljs$core$IFn$_invoke$arity$1 = G__3099__1;
  G__3099.cljs$core$IFn$_invoke$arity$2 = G__3099__2;
  return G__3099;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__3100 = null;
  var G__3100__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__3100__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3100 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3100__1.call(this, x);
      case 2:
        return G__3100__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3100.cljs$core$IFn$_invoke$arity$1 = G__3100__1;
  G__3100.cljs$core$IFn$_invoke$arity$2 = G__3100__2;
  return G__3100;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3101 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3101;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3102 = i + 1;
          var G__3103 = ret__$1;
          i = G__3102;
          ret = G__3103;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3104 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3104;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3105 = i + 1;
          var G__3106 = ret__$1;
          i = G__3105;
          ret = G__3106;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Repeat(meta__$1, self__.count, self__.val, self__.next, null);
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__3108 = arguments.length;
  switch(G__3108) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__3111 = arguments.length;
  switch(G__3111) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3113 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3114 = v__$2;
      ret = G__3113;
      v__$1 = G__3114;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3115 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3116 = v__$2;
      ret = G__3115;
      v__$1 = G__3116;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Iterate(meta__$1, self__.f, self__.prev_seed, self__.seed, self__.next);
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__3121 = arguments.length;
  switch(G__3121) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3123 = arguments.length;
      var i__4500__auto___3124 = 0;
      while (true) {
        if (i__4500__auto___3124 < len__4499__auto___3123) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3124]);
          var G__3125 = i__4500__auto___3124 + 1;
          i__4500__auto___3124 = G__3125;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4515__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq3118) {
  var G__3119 = cljs.core.first(seq3118);
  var seq3118__$1 = cljs.core.next(seq3118);
  var G__3120 = cljs.core.first(seq3118__$1);
  var seq3118__$2 = cljs.core.next(seq3118__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3119, G__3120, seq3118__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__3127 = arguments.length;
  switch(G__3127) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__3129 = null;
        var G__3129__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3129__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3129__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3129 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3129__0.call(this);
            case 1:
              return G__3129__1.call(this, result);
            case 2:
              return G__3129__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3129.cljs$core$IFn$_invoke$arity$0 = G__3129__0;
        G__3129.cljs$core$IFn$_invoke$arity$1 = G__3129__1;
        G__3129.cljs$core$IFn$_invoke$arity$2 = G__3129__2;
        return G__3129;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__3133 = arguments.length;
  switch(G__3133) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3135 = arguments.length;
      var i__4500__auto___3136 = 0;
      while (true) {
        if (i__4500__auto___3136 < len__4499__auto___3135) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3136]);
          var G__3137 = i__4500__auto___3136 + 1;
          i__4500__auto___3136 = G__3137;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4515__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq3131) {
  var G__3132 = cljs.core.first(seq3131);
  var seq3131__$1 = cljs.core.next(seq3131);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3132, seq3131__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__3139 = arguments.length;
  switch(G__3139) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3142 = null;
      var G__3142__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3142__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3142__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__3142 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3142__0.call(this);
          case 1:
            return G__3142__1.call(this, result);
          case 2:
            return G__3142__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__3142.cljs$core$IFn$_invoke$arity$0 = G__3142__0;
      G__3142.cljs$core$IFn$_invoke$arity$1 = G__3142__1;
      G__3142.cljs$core$IFn$_invoke$arity$2 = G__3142__2;
      return G__3142;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4376__auto___3143 = size;
        var i_3144 = 0;
        while (true) {
          if (i_3144 < n__4376__auto___3143) {
            if (cljs.core.truth_(function() {
              var G__3140 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3144);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3140) : pred.call(null, G__3140);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3144));
            } else {
            }
            var G__3145 = i_3144 + 1;
            i_3144 = G__3145;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__3147 = arguments.length;
  switch(G__3147) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__3149_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__3149_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__3151 = arguments.length;
  switch(G__3151) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__3161 = arguments.length;
  switch(G__3161) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3163 = arguments.length;
      var i__4500__auto___3164 = 0;
      while (true) {
        if (i__4500__auto___3164 < len__4499__auto___3163) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3164]);
          var G__3165 = i__4500__auto___3164 + 1;
          i__4500__auto___3164 = G__3165;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4515__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq3156) {
  var G__3157 = cljs.core.first(seq3156);
  var seq3156__$1 = cljs.core.next(seq3156);
  var G__3158 = cljs.core.first(seq3156__$1);
  var seq3156__$2 = cljs.core.next(seq3156__$1);
  var G__3159 = cljs.core.first(seq3156__$2);
  var seq3156__$3 = cljs.core.next(seq3156__$2);
  var G__3160 = cljs.core.first(seq3156__$3);
  var seq3156__$4 = cljs.core.next(seq3156__$3);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3157, G__3158, G__3159, G__3160, seq3156__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__3167 = arguments.length;
  switch(G__3167) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__3170 = arguments.length;
  switch(G__3170) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__3172 = sentinel;
        var G__3173 = m__$2;
        var G__3174 = cljs.core.next(ks__$1);
        sentinel = G__3172;
        m__$1 = G__3173;
        ks__$1 = G__3174;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__3175, v) {
  var vec__3176 = p__3175;
  var seq__3177 = cljs.core.seq(vec__3176);
  var first__3178 = cljs.core.first(seq__3177);
  var seq__3177__$1 = cljs.core.next(seq__3177);
  var k = first__3178;
  var ks = seq__3177__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3179 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3180 = ks;
      var G__3181 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__3179, G__3180, G__3181) : cljs.core.assoc_in.call(null, G__3179, G__3180, G__3181);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__3190 = arguments.length;
  switch(G__3190) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3222 = arguments.length;
      var i__4500__auto___3223 = 0;
      while (true) {
        if (i__4500__auto___3223 < len__4499__auto___3222) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3223]);
          var G__3224 = i__4500__auto___3223 + 1;
          i__4500__auto___3223 = G__3224;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4515__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__3191, f) {
  var vec__3192 = p__3191;
  var seq__3193 = cljs.core.seq(vec__3192);
  var first__3194 = cljs.core.first(seq__3193);
  var seq__3193__$1 = cljs.core.next(seq__3193);
  var k = first__3194;
  var ks = seq__3193__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3195 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3195) : f.call(null, G__3195);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__3196, f, a) {
  var vec__3197 = p__3196;
  var seq__3198 = cljs.core.seq(vec__3197);
  var first__3199 = cljs.core.first(seq__3198);
  var seq__3198__$1 = cljs.core.next(seq__3198);
  var k = first__3199;
  var ks = seq__3198__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3200 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3201 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3200, G__3201) : f.call(null, G__3200, G__3201);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__3202, f, a, b) {
  var vec__3203 = p__3202;
  var seq__3204 = cljs.core.seq(vec__3203);
  var first__3205 = cljs.core.first(seq__3204);
  var seq__3204__$1 = cljs.core.next(seq__3204);
  var k = first__3205;
  var ks = seq__3204__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3206 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3207 = a;
      var G__3208 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3206, G__3207, G__3208) : f.call(null, G__3206, G__3207, G__3208);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__3209, f, a, b, c) {
  var vec__3210 = p__3209;
  var seq__3211 = cljs.core.seq(vec__3210);
  var first__3212 = cljs.core.first(seq__3211);
  var seq__3211__$1 = cljs.core.next(seq__3211);
  var k = first__3212;
  var ks = seq__3211__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3213 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3214 = a;
      var G__3215 = b;
      var G__3216 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3213, G__3214, G__3215, G__3216) : f.call(null, G__3213, G__3214, G__3215, G__3216);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__3217, f, a, b, c, args) {
  var vec__3218 = p__3217;
  var seq__3219 = cljs.core.seq(vec__3218);
  var first__3220 = cljs.core.first(seq__3219);
  var seq__3219__$1 = cljs.core.next(seq__3219);
  var k = first__3220;
  var ks = seq__3219__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq3183) {
  var G__3184 = cljs.core.first(seq3183);
  var seq3183__$1 = cljs.core.next(seq3183);
  var G__3185 = cljs.core.first(seq3183__$1);
  var seq3183__$2 = cljs.core.next(seq3183__$1);
  var G__3186 = cljs.core.first(seq3183__$2);
  var seq3183__$3 = cljs.core.next(seq3183__$2);
  var G__3187 = cljs.core.first(seq3183__$3);
  var seq3183__$4 = cljs.core.next(seq3183__$3);
  var G__3188 = cljs.core.first(seq3183__$4);
  var seq3183__$5 = cljs.core.next(seq3183__$4);
  var G__3189 = cljs.core.first(seq3183__$5);
  var seq3183__$6 = cljs.core.next(seq3183__$5);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3184, G__3185, G__3186, G__3187, G__3188, G__3189, seq3183__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__3233 = arguments.length;
  switch(G__3233) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3245 = arguments.length;
      var i__4500__auto___3246 = 0;
      while (true) {
        if (i__4500__auto___3246 < len__4499__auto___3245) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3246]);
          var G__3247 = i__4500__auto___3246 + 1;
          i__4500__auto___3246 = G__3247;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4515__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3234 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3234) : f.call(null, G__3234);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3235 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3236 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3235, G__3236) : f.call(null, G__3235, G__3236);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3237 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3238 = x;
    var G__3239 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3237, G__3238, G__3239) : f.call(null, G__3237, G__3238, G__3239);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3240 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3241 = x;
    var G__3242 = y;
    var G__3243 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3240, G__3241, G__3242, G__3243) : f.call(null, G__3240, G__3241, G__3242, G__3243);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq3226) {
  var G__3227 = cljs.core.first(seq3226);
  var seq3226__$1 = cljs.core.next(seq3226);
  var G__3228 = cljs.core.first(seq3226__$1);
  var seq3226__$2 = cljs.core.next(seq3226__$1);
  var G__3229 = cljs.core.first(seq3226__$2);
  var seq3226__$3 = cljs.core.next(seq3226__$2);
  var G__3230 = cljs.core.first(seq3226__$3);
  var seq3226__$4 = cljs.core.next(seq3226__$3);
  var G__3231 = cljs.core.first(seq3226__$4);
  var seq3226__$5 = cljs.core.next(seq3226__$4);
  var G__3232 = cljs.core.first(seq3226__$5);
  var seq3226__$6 = cljs.core.next(seq3226__$5);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3227, G__3228, G__3229, G__3230, G__3231, G__3232, seq3226__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__3248 = ll - 5;
      var G__3249 = r;
      ll = G__3248;
      ret = G__3249;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__3250 = pv;
        var G__3251 = level - 5;
        var G__3252 = child;
        var G__3253 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__3250, G__3251, G__3252, G__3253) : cljs.core.push_tail.call(null, G__3250, G__3251, G__3252, G__3253);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__3254 = cljs.core.pv_aget(node, 0);
      var G__3255 = level - 5;
      node = G__3254;
      level = G__3255;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__3256 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__3257 = level - 5;
        node = G__3256;
        level = G__3257;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__3258 = pv;
      var G__3259 = level - 5;
      var G__3260 = cljs.core.pv_aget(node, subidx);
      var G__3261 = i;
      var G__3262 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__3258, G__3259, G__3260, G__3261, G__3262) : cljs.core.do_assoc.call(null, G__3258, G__3259, G__3260, G__3261, G__3262);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3263 = pv;
      var G__3264 = level - 5;
      var G__3265 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__3263, G__3264, G__3265) : cljs.core.pop_tail.call(null, G__3263, G__3264, G__3265);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__3267 = arguments.length;
  switch(G__3267) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__3268 = acc;
        var G__3269 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3268, G__3269) : f.call(null, G__3268, G__3269);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__3271 = nacc;
        var G__3272 = i + 1;
        var G__3273 = arr__$1;
        acc = G__3271;
        i = G__3272;
        arr = G__3273;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__3280 = null;
  var G__3280__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3280__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3280 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3280__1.call(this, x);
      case 2:
        return G__3280__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3280.cljs$core$IFn$_invoke$arity$1 = G__3280__1;
  G__3280.cljs$core$IFn$_invoke$arity$2 = G__3280__2;
  return G__3280;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__3281 = null;
  var G__3281__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3281__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3281 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3281__1.call(this, x);
      case 2:
        return G__3281__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3281.cljs$core$IFn$_invoke$arity$1 = G__3281__1;
  G__3281.cljs$core$IFn$_invoke$arity$2 = G__3281__2;
  return G__3281;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3275 = init__$2;
              var G__3276 = j + i;
              var G__3277 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3275, G__3276, G__3277) : f.call(null, G__3275, G__3276, G__3277);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3282 = j + 1;
              var G__3283 = init__$3;
              j = G__3282;
              init__$2 = G__3283;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3284 = i + len;
        var G__3285 = init__$2;
        i = G__3284;
        init__$1 = G__3285;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3278 = init__$2;
              var G__3279 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3278, G__3279) : f.call(null, G__3278, G__3279);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3286 = j + 1;
              var G__3287 = init__$3;
              j = G__3286;
              init__$2 = G__3287;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3288 = i + len;
        var G__3289 = init__$2;
        i = G__3288;
        init__$1 = G__3289;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4376__auto___3290 = len;
    var i_3291 = 0;
    while (true) {
      if (i_3291 < n__4376__auto___3290) {
        new_tail[i_3291] = self__.tail[i_3291];
        var G__3292 = i_3291 + 1;
        i_3291 = G__3292;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__3293 = null;
  var G__3293__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3293__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3293 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3293__2.call(this, self__, k);
      case 3:
        return G__3293__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3293.cljs$core$IFn$_invoke$arity$2 = G__3293__2;
  G__3293.cljs$core$IFn$_invoke$arity$3 = G__3293__3;
  return G__3293;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args3274) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3274)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__3294 = i + 1;
        var G__3295 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__3294;
        out = G__3295;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
var G__3296_3299 = cljs.core.PersistentVector.prototype;
var G__3297_3300 = cljs.core.ITER_SYMBOL;
var G__3298_3301 = function(G__3296_3299, G__3297_3300) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3296_3299, G__3297_3300);
goog.object.set(G__3296_3299, G__3297_3300, G__3298_3301);
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3303 = arguments.length;
  var i__4500__auto___3304 = 0;
  while (true) {
    if (i__4500__auto___3304 < len__4499__auto___3303) {
      args__4502__auto__.push(arguments[i__4500__auto___3304]);
      var G__3305 = i__4500__auto___3304 + 1;
      i__4500__auto___3304 = G__3305;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq3302) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3302));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__3306 = null;
  var G__3306__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3306__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3306 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3306__1.call(this, x);
      case 2:
        return G__3306__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3306.cljs$core$IFn$_invoke$arity$1 = G__3306__1;
  G__3306.cljs$core$IFn$_invoke$arity$2 = G__3306__2;
  return G__3306;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__3307 = null;
  var G__3307__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3307__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3307 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3307__1.call(this, x);
      case 2:
        return G__3307__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3307.cljs$core$IFn$_invoke$arity$1 = G__3307__1;
  G__3307.cljs$core$IFn$_invoke$arity$2 = G__3307__2;
  return G__3307;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
var G__3308_3311 = cljs.core.ChunkedSeq.prototype;
var G__3309_3312 = cljs.core.ITER_SYMBOL;
var G__3310_3313 = function(G__3308_3311, G__3309_3312) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3308_3311, G__3309_3312);
goog.object.set(G__3308_3311, G__3309_3312, G__3310_3313);
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__3315 = arguments.length;
  switch(G__3315) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__3324 = null;
  var G__3324__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3324__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3324 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3324__1.call(this, x);
      case 2:
        return G__3324__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3324.cljs$core$IFn$_invoke$arity$1 = G__3324__1;
  G__3324.cljs$core$IFn$_invoke$arity$2 = G__3324__2;
  return G__3324;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__3325 = null;
  var G__3325__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3325__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3325 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3325__1.call(this, x);
      case 2:
        return G__3325__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3325.cljs$core$IFn$_invoke$arity$1 = G__3325__1;
  G__3325.cljs$core$IFn$_invoke$arity$2 = G__3325__2;
  return G__3325;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__3318 = init__$1;
        var G__3319 = j;
        var G__3320 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3318, G__3319, G__3320) : f.call(null, G__3318, G__3319, G__3320);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3326 = i + 1;
        var G__3327 = j + 1;
        var G__3328 = init__$2;
        i = G__3326;
        j = G__3327;
        init__$1 = G__3328;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4006__auto__ = self__.end;
      var y__4007__auto__ = v_pos + 1;
      return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__3329 = null;
  var G__3329__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3329__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3329__2.call(this, self__, k);
      case 3:
        return G__3329__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3329.cljs$core$IFn$_invoke$arity$2 = G__3329__2;
  G__3329.cljs$core$IFn$_invoke$arity$3 = G__3329__3;
  return G__3329;
}();
cljs.core.Subvec.prototype.apply = function(self__, args3317) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3317)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
var G__3330_3333 = cljs.core.Subvec.prototype;
var G__3331_3334 = cljs.core.ITER_SYMBOL;
var G__3332_3335 = function(G__3330_3333, G__3331_3334) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3330_3333, G__3331_3334);
goog.object.set(G__3330_3333, G__3331_3334, G__3332_3335);
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__3336 = meta;
      var G__3337 = v.v;
      var G__3338 = v.start + start;
      var G__3339 = v.start + end;
      var G__3340 = __hash;
      meta = G__3336;
      v = G__3337;
      start = G__3338;
      end = G__3339;
      __hash = G__3340;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      var c_3341 = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c_3341 || end > c_3341) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__3343 = arguments.length;
  switch(G__3343) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__3347 = tv;
      var G__3348 = level - 5;
      var G__3349 = child;
      var G__3350 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__3347, G__3348, G__3349, G__3350) : cljs.core.tv_push_tail.call(null, G__3347, G__3348, G__3349, G__3350);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3351 = tv;
      var G__3352 = level - 5;
      var G__3353 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__3351, G__3352, G__3353) : cljs.core.tv_pop_tail.call(null, G__3351, G__3352, G__3353);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__3354 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__3355 = level - 5;
        node = G__3354;
        level = G__3355;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__3357 = function(tcoll__$1) {
            return function cljs$core$go(level, node) {
              var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
              if (level === 0) {
                cljs.core.pv_aset(node__$1, n & 31, val);
                return node__$1;
              } else {
                var subidx = n >>> level & 31;
                cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
                return node__$1;
              }
            };
          }(tcoll__$1);
          return fexpr__3357(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__3358 = null;
  var G__3358__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3358__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3358 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3358__2.call(this, self__, k);
      case 3:
        return G__3358__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3358.cljs$core$IFn$_invoke$arity$2 = G__3358__2;
  G__3358.cljs$core$IFn$_invoke$arity$3 = G__3358__3;
  return G__3358;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args3356) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3356)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__3922__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    var and__3911__auto__ = !(self__.riter == null);
    if (and__3911__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__3911__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__3359 = null;
  var G__3359__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3359__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3359 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3359__1.call(this, x);
      case 2:
        return G__3359__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3359.cljs$core$IFn$_invoke$arity$1 = G__3359__1;
  G__3359.cljs$core$IFn$_invoke$arity$2 = G__3359__2;
  return G__3359;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__3360 = null;
  var G__3360__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3360__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3360 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3360__1.call(this, x);
      case 2:
        return G__3360__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3360.cljs$core$IFn$_invoke$arity$1 = G__3360__1;
  G__3360.cljs$core$IFn$_invoke$arity$2 = G__3360__2;
  return G__3360;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
var G__3361_3364 = cljs.core.PersistentQueueSeq.prototype;
var G__3362_3365 = cljs.core.ITER_SYMBOL;
var G__3363_3366 = function(G__3361_3364, G__3362_3365) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3361_3364, G__3362_3365);
goog.object.set(G__3361_3364, G__3362_3365, G__3363_3366);
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__3367 = null;
  var G__3367__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3367__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3367 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3367__1.call(this, x);
      case 2:
        return G__3367__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3367.cljs$core$IFn$_invoke$arity$1 = G__3367__1;
  G__3367.cljs$core$IFn$_invoke$arity$2 = G__3367__2;
  return G__3367;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__3368 = null;
  var G__3368__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__3368__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3368 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3368__1.call(this, x);
      case 2:
        return G__3368__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3368.cljs$core$IFn$_invoke$arity$1 = G__3368__1;
  G__3368.cljs$core$IFn$_invoke$arity$2 = G__3368__2;
  return G__3368;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3922__auto__ = self__.front;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3922__auto__ = self__.rear;
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__3369_3372 = cljs.core.PersistentQueue.prototype;
var G__3370_3373 = cljs.core.ITER_SYMBOL;
var G__3371_3374 = function(G__3369_3372, G__3370_3373) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3369_3372, G__3370_3373);
goog.object.set(G__3369_3372, G__3370_3373, G__3371_3374);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__3376 = i + incr;
        i = G__3376;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__3377 = i + 1;
      var G__3378 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__3377;
      out = G__3378;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_3384 = 0;
  while (true) {
    if (i_3384 < l) {
      var k_3385 = ks[i_3384];
      var G__3381_3386 = new_obj;
      var G__3382_3387 = k_3385;
      var G__3383_3388 = goog.object.get(obj, k_3385);
      goog.object.set(G__3381_3386, G__3382_3387, G__3383_3388);
      var G__3389 = i_3384 + 1;
      i_3384 = G__3389;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__3392 = init__$1;
        var G__3393 = k;
        var G__3394 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3392, G__3393, G__3394) : f.call(null, G__3392, G__3393, G__3394);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3395 = cljs.core.rest(keys__$1);
        var G__3396 = init__$2;
        keys__$1 = G__3395;
        init__$1 = G__3396;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__3390_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3390_SHARP_, self__.strobj[p1__3390_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__3397 = null;
  var G__3397__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3397__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3397 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3397__2.call(this, self__, k);
      case 3:
        return G__3397__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3397.cljs$core$IFn$_invoke$arity$2 = G__3397__2;
  G__3397.cljs$core$IFn$_invoke$arity$3 = G__3397__3;
  return G__3397;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args3391) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3391)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__3922__auto__ = self__.i < self__.base_count;
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__3400 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3400, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3400, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__3403 = i + 2;
        i = G__3403;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__3404 = i + 2;
        i = G__3404;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__3405 = i + 2;
        i = G__3405;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__3406 = i + 2;
        i = G__3406;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__3407 = i + 2;
        i = G__3407;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_3408 = 0;
  while (true) {
    if (i_3408 < l) {
      narr[i_3408] = arr[i_3408];
      var G__3409 = i_3408 + 1;
      i_3408 = G__3409;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3411 = k;
  switch(G__3411) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__3413 = null;
  var G__3413__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3413__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3413 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3413__1.call(this, x);
      case 2:
        return G__3413__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3413.cljs$core$IFn$_invoke$arity$1 = G__3413__1;
  G__3413.cljs$core$IFn$_invoke$arity$2 = G__3413__2;
  return G__3413;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__3414 = null;
  var G__3414__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3414__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3414 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3414__1.call(this, x);
      case 2:
        return G__3414__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3414.cljs$core$IFn$_invoke$arity$1 = G__3414__1;
  G__3414.cljs$core$IFn$_invoke$arity$2 = G__3414__2;
  return G__3414;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__3415 = null;
  var G__3415__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3415__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3415 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3415__2.call(this, self__, k);
      case 3:
        return G__3415__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3415.cljs$core$IFn$_invoke$arity$2 = G__3415__2;
  G__3415.cljs$core$IFn$_invoke$arity$3 = G__3415__3;
  return G__3415;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args3410) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3410)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__3417 = null;
  var G__3417__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3417__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3417 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3417__1.call(this, x);
      case 2:
        return G__3417__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3417.cljs$core$IFn$_invoke$arity$1 = G__3417__1;
  G__3417.cljs$core$IFn$_invoke$arity$2 = G__3417__2;
  return G__3417;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__3418 = null;
  var G__3418__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3418__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3418 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3418__1.call(this, x);
      case 2:
        return G__3418__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3418.cljs$core$IFn$_invoke$arity$1 = G__3418__1;
  G__3418.cljs$core$IFn$_invoke$arity$2 = G__3418__2;
  return G__3418;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
var G__3419_3422 = cljs.core.PersistentArrayMapSeq.prototype;
var G__3420_3423 = cljs.core.ITER_SYMBOL;
var G__3421_3424 = function(G__3419_3422, G__3420_3423) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3419_3422, G__3420_3423);
goog.object.set(G__3419_3422, G__3420_3423, G__3421_3424);
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3426 = cljs.core.seq(coll);
  var chunk__3427 = null;
  var count__3428 = 0;
  var i__3429 = 0;
  while (true) {
    if (i__3429 < count__3428) {
      var vec__3430 = chunk__3427.cljs$core$IIndexed$_nth$arity$2(null, i__3429);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3430, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3430, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3442 = seq__3426;
      var G__3443 = chunk__3427;
      var G__3444 = count__3428;
      var G__3445 = i__3429 + 1;
      seq__3426 = G__3442;
      chunk__3427 = G__3443;
      count__3428 = G__3444;
      i__3429 = G__3445;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__3426);
      if (temp__4657__auto__) {
        var seq__3426__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3426__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__3426__$1);
          var G__3446 = cljs.core.chunk_rest(seq__3426__$1);
          var G__3447 = c__4319__auto__;
          var G__3448 = cljs.core.count(c__4319__auto__);
          var G__3449 = 0;
          seq__3426 = G__3446;
          chunk__3427 = G__3447;
          count__3428 = G__3448;
          i__3429 = G__3449;
          continue;
        } else {
          var vec__3433 = cljs.core.first(seq__3426__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3433, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3433, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3450 = cljs.core.next(seq__3426__$1);
          var G__3451 = null;
          var G__3452 = 0;
          var G__3453 = 0;
          seq__3426 = G__3450;
          chunk__3427 = G__3451;
          count__3428 = G__3452;
          i__3429 = G__3453;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__3436 = init__$1;
        var G__3437 = self__.arr[i];
        var G__3438 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3436, G__3437, G__3438) : f.call(null, G__3436, G__3437, G__3438);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3454 = i + 2;
        var G__3455 = init__$2;
        i = G__3454;
        init__$1 = G__3455;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__3456 = i + 2;
              i = G__3456;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__3457 = s + 2;
            var G__3458 = d;
            s = G__3457;
            d = G__3458;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__3459 = s + 2;
            var G__3460 = d + 2;
            s = G__3459;
            d = G__3460;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__3441 = cljs.core.aclone(self__.arr);
        G__3441[idx + 1] = v;
        return G__3441;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3461 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3462 = cljs.core.next(es);
          ret = G__3461;
          es = G__3462;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__3463 = null;
  var G__3463__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3463__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3463 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3463__2.call(this, self__, k);
      case 3:
        return G__3463__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3463.cljs$core$IFn$_invoke$arity$2 = G__3463__2;
  G__3463.cljs$core$IFn$_invoke$arity$3 = G__3463__3;
  return G__3463;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args3425) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3425)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_3464 = 0;
    while (true) {
      if (i_3464 < arr__$1.length) {
        var k_3465 = arr__$1[i_3464];
        var v_3466 = arr__$1[i_3464 + 1];
        var idx_3467 = cljs.core.array_index_of(ret, k_3465);
        if (idx_3467 === -1) {
          ret.push(k_3465);
          ret.push(v_3466);
        } else {
        }
        var G__3468 = i_3464 + 2;
        i_3464 = G__3468;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_3470 = 0;
  while (true) {
    if (i_3470 < arr.length) {
      var k_3471 = arr[i_3470];
      var v_3472 = arr[i_3470 + 1];
      var idx_3473 = cljs.core.array_index_of(ret, k_3471);
      if (idx_3473 === -1) {
        var G__3469_3474 = ret;
        G__3469_3474.push(k_3471);
        G__3469_3474.push(v_3472);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_3471)].join(""));
      }
      var G__3475 = i_3470 + 2;
      i_3470 = G__3475;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_3477 = 0;
  while (true) {
    if (i_3477 < arr.length) {
      var k_3478 = arr[i_3477];
      var v_3479 = arr[i_3477 + 1];
      var idx_3480 = cljs.core.array_index_of(ret, k_3478);
      if (idx_3480 === -1) {
        var G__3476_3481 = ret;
        G__3476_3481.push(k_3478);
        G__3476_3481.push(v_3479);
      } else {
        ret[idx_3480 + 1] = v_3479;
      }
      var G__3482 = i_3477 + 2;
      i_3477 = G__3482;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
var G__3483_3486 = cljs.core.PersistentArrayMap.prototype;
var G__3484_3487 = cljs.core.ITER_SYMBOL;
var G__3485_3488 = function(G__3483_3486, G__3484_3487) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3483_3486, G__3484_3487);
goog.object.set(G__3483_3486, G__3484_3487, G__3485_3488);
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__4655__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var e = temp__4655__auto__;
            var G__3491 = cljs.core.next(es);
            var G__3492 = tcoll__$2.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(e), cljs.core.val(e));
            es = G__3491;
            tcoll__$2 = G__3492;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__3490_3493 = self__.arr;
      G__3490_3493.pop();
      G__3490_3493.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__3494 = null;
  var G__3494__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__3494__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3494 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3494__2.call(this, self__, key);
      case 3:
        return G__3494__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3494.cljs$core$IFn$_invoke$arity$2 = G__3494__2;
  G__3494.cljs$core$IFn$_invoke$arity$3 = G__3494__3;
  return G__3494;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args3489) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3489)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__3495 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__3496 = i + 2;
      out = G__3495;
      i = G__3496;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__3498 = arguments.length;
  switch(G__3498) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__3499 = cljs.core.aclone(arr);
  G__3499[i] = a;
  return G__3499;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__3500 = cljs.core.aclone(arr);
  G__3500[i] = a;
  G__3500[j] = b;
  return G__3500;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__3503 = arguments.length;
  switch(G__3503) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__3505 = init__$1;
          var G__3506 = k;
          var G__3507 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3505, G__3506, G__3507) : f.call(null, G__3505, G__3506, G__3507);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__3508 = i + 2;
        var G__3509 = init__$2;
        i = G__3508;
        init__$1 = G__3509;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__3922__auto__ = !(self__.next_entry == null);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    var or__3922__auto____$1 = !(self__.next_iter == null);
    if (or__3922__auto____$1) {
      return or__3922__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_3510 = 0;
        var j_3511 = 0;
        while (true) {
          if (i_3510 < 32) {
            if ((self__.bitmap >>> i_3510 & 1) === 0) {
              var G__3512 = i_3510 + 1;
              var G__3513 = j_3511;
              i_3510 = G__3512;
              j_3511 = G__3513;
              continue;
            } else {
              nodes[i_3510] = !(self__.arr[j_3511] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_3511]), self__.arr[j_3511], self__.arr[j_3511 + 1], added_leaf_QMARK_) : self__.arr[j_3511 + 1];
              var G__3514 = i_3510 + 1;
              var G__3515 = j_3511 + 2;
              i_3510 = G__3514;
              j_3511 = G__3515;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_3516 = 0;
      var j_3517 = 0;
      while (true) {
        if (i_3516 < 32) {
          if ((self__.bitmap >>> i_3516 & 1) === 0) {
            var G__3518 = i_3516 + 1;
            var G__3519 = j_3517;
            i_3516 = G__3518;
            j_3517 = G__3519;
            continue;
          } else {
            nodes[i_3516] = !(self__.arr[j_3517] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_3517]), self__.arr[j_3517], self__.arr[j_3517 + 1], added_leaf_QMARK_) : self__.arr[j_3517 + 1];
            var G__3520 = i_3516 + 1;
            var G__3521 = j_3517 + 2;
            i_3516 = G__3520;
            j_3517 = G__3521;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__3522 = i + 1;
        var G__3523 = j + 2;
        var G__3524 = bitmap | 1 << i;
        i = G__3522;
        j = G__3523;
        bitmap = G__3524;
        continue;
      } else {
        var G__3525 = i + 1;
        var G__3526 = j;
        var G__3527 = bitmap;
        i = G__3525;
        j = G__3526;
        bitmap = G__3527;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__3528 = i + 1;
          var G__3529 = init__$2;
          i = G__3528;
          init__$1 = G__3529;
          continue;
        }
      } else {
        var G__3530 = i + 1;
        var G__3531 = init__$1;
        i = G__3530;
        init__$1 = G__3531;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__3532 = i + 2;
        i = G__3532;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__3534 = arguments.length;
  switch(G__3534) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__3536 = null;
  var G__3536__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3536__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3536 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3536__1.call(this, x);
      case 2:
        return G__3536__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3536.cljs$core$IFn$_invoke$arity$1 = G__3536__1;
  G__3536.cljs$core$IFn$_invoke$arity$2 = G__3536__2;
  return G__3536;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__3537 = null;
  var G__3537__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3537__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3537 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3537__1.call(this, x);
      case 2:
        return G__3537__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3537.cljs$core$IFn$_invoke$arity$1 = G__3537__1;
  G__3537.cljs$core$IFn$_invoke$arity$2 = G__3537__2;
  return G__3537;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
var G__3538_3541 = cljs.core.NodeSeq.prototype;
var G__3539_3542 = cljs.core.ITER_SYMBOL;
var G__3540_3543 = function(G__3538_3541, G__3539_3542) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3538_3541, G__3539_3542);
goog.object.set(G__3538_3541, G__3539_3542, G__3540_3543);
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__3545 = arguments.length;
  switch(G__3545) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__3547 = j + 2;
              j = G__3547;
              continue;
            }
          } else {
            var G__3548 = j + 2;
            j = G__3548;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__3549 = null;
  var G__3549__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3549__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3549 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3549__1.call(this, x);
      case 2:
        return G__3549__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3549.cljs$core$IFn$_invoke$arity$1 = G__3549__1;
  G__3549.cljs$core$IFn$_invoke$arity$2 = G__3549__2;
  return G__3549;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__3550 = null;
  var G__3550__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3550__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3550 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3550__1.call(this, x);
      case 2:
        return G__3550__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3550.cljs$core$IFn$_invoke$arity$1 = G__3550__1;
  G__3550.cljs$core$IFn$_invoke$arity$2 = G__3550__2;
  return G__3550;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
var G__3551_3554 = cljs.core.ArrayNodeSeq.prototype;
var G__3552_3555 = cljs.core.ITER_SYMBOL;
var G__3553_3556 = function(G__3551_3554, G__3552_3555) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3551_3554, G__3552_3555);
goog.object.set(G__3551_3554, G__3552_3555, G__3553_3556);
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__3558 = arguments.length;
  switch(G__3558) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__3560 = j + 1;
            j = G__3560;
            continue;
          }
        } else {
          var G__3561 = j + 1;
          j = G__3561;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3563 = cljs.core.seq(coll);
  var chunk__3564 = null;
  var count__3565 = 0;
  var i__3566 = 0;
  while (true) {
    if (i__3566 < count__3565) {
      var vec__3567 = chunk__3564.cljs$core$IIndexed$_nth$arity$2(null, i__3566);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3567, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3567, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3575 = seq__3563;
      var G__3576 = chunk__3564;
      var G__3577 = count__3565;
      var G__3578 = i__3566 + 1;
      seq__3563 = G__3575;
      chunk__3564 = G__3576;
      count__3565 = G__3577;
      i__3566 = G__3578;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__3563);
      if (temp__4657__auto__) {
        var seq__3563__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3563__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__3563__$1);
          var G__3579 = cljs.core.chunk_rest(seq__3563__$1);
          var G__3580 = c__4319__auto__;
          var G__3581 = cljs.core.count(c__4319__auto__);
          var G__3582 = 0;
          seq__3563 = G__3579;
          chunk__3564 = G__3580;
          count__3565 = G__3581;
          i__3566 = G__3582;
          continue;
        } else {
          var vec__3570 = cljs.core.first(seq__3563__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3570, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3570, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3583 = cljs.core.next(seq__3563__$1);
          var G__3584 = null;
          var G__3585 = 0;
          var G__3586 = 0;
          seq__3563 = G__3583;
          chunk__3564 = G__3584;
          count__3565 = G__3585;
          i__3566 = G__3586;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3587 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3588 = cljs.core.next(es);
          ret = G__3587;
          es = G__3588;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__3589 = null;
  var G__3589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3589__2.call(this, self__, k);
      case 3:
        return G__3589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3589.cljs$core$IFn$_invoke$arity$2 = G__3589__2;
  G__3589.cljs$core$IFn$_invoke$arity$3 = G__3589__3;
  return G__3589;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args3562) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3562)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3590 = i + 2;
      var G__3591 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__3590;
      ret = G__3591;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3592 = i + 1;
      var G__3593 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__3592;
      out = G__3593;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_3594 = 0;
  while (true) {
    if (i_3594 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_3594], arr[i_3594 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_3594 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_3594])].join(""));
      } else {
        var G__3595 = i_3594 + 2;
        i_3594 = G__3595;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
var G__3596_3599 = cljs.core.PersistentHashMap.prototype;
var G__3597_3600 = cljs.core.ITER_SYMBOL;
var G__3598_3601 = function(G__3596_3599, G__3597_3600) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3596_3599, G__3597_3600);
goog.object.set(G__3596_3599, G__3597_3600, G__3598_3601);
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__4655__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var e = temp__4655__auto__;
            var G__3603 = cljs.core.next(es);
            var G__3604 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__3603;
            tcoll__$1 = G__3604;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__3605 = null;
  var G__3605__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__3605__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3605 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3605__2.call(this, self__, key);
      case 3:
        return G__3605__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3605.cljs$core$IFn$_invoke$arity$2 = G__3605__2;
  G__3605.cljs$core$IFn$_invoke$arity$3 = G__3605__3;
  return G__3605;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args3602) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3602)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__3606 = ascending_QMARK_ ? t.left : t.right;
      var G__3607 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__3606;
      stack__$1 = G__3607;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__3608 = null;
  var G__3608__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3608__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3608 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3608__1.call(this, x);
      case 2:
        return G__3608__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3608.cljs$core$IFn$_invoke$arity$1 = G__3608__1;
  G__3608.cljs$core$IFn$_invoke$arity$2 = G__3608__2;
  return G__3608;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__3609 = null;
  var G__3609__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3609__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3609 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3609__1.call(this, x);
      case 2:
        return G__3609__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3609.cljs$core$IFn$_invoke$arity$1 = G__3609__1;
  G__3609.cljs$core$IFn$_invoke$arity$2 = G__3609__2;
  return G__3609;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
var G__3610_3613 = cljs.core.PersistentTreeMapSeq.prototype;
var G__3611_3614 = cljs.core.ITER_SYMBOL;
var G__3612_3615 = function(G__3610_3613, G__3611_3614) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3610_3613, G__3611_3614);
goog.object.set(G__3610_3613, G__3611_3614, G__3612_3615);
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__3616 = node.left;
    var G__3617 = f;
    var G__3618 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3616, G__3617, G__3618) : cljs.core.tree_map_kv_reduce.call(null, G__3616, G__3617, G__3618);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__3619 = init__$1;
      var G__3620 = node.key;
      var G__3621 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3619, G__3620, G__3621) : f.call(null, G__3619, G__3620, G__3621);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__3622 = node.right;
        var G__3623 = f;
        var G__3624 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3622, G__3623, G__3624) : cljs.core.tree_map_kv_reduce.call(null, G__3622, G__3623, G__3624);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3626 = k;
  switch(G__3626) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__3628 = null;
  var G__3628__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3628__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3628 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3628__1.call(this, x);
      case 2:
        return G__3628__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3628.cljs$core$IFn$_invoke$arity$1 = G__3628__1;
  G__3628.cljs$core$IFn$_invoke$arity$2 = G__3628__2;
  return G__3628;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__3629 = null;
  var G__3629__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3629__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3629 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3629__1.call(this, x);
      case 2:
        return G__3629__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3629.cljs$core$IFn$_invoke$arity$1 = G__3629__1;
  G__3629.cljs$core$IFn$_invoke$arity$2 = G__3629__2;
  return G__3629;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__3630 = null;
  var G__3630__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3630__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3630 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3630__2.call(this, self__, k);
      case 3:
        return G__3630__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3630.cljs$core$IFn$_invoke$arity$2 = G__3630__2;
  G__3630.cljs$core$IFn$_invoke$arity$3 = G__3630__3;
  return G__3630;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args3625) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3625)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
var G__3631_3634 = cljs.core.BlackNode.prototype;
var G__3632_3635 = cljs.core.ITER_SYMBOL;
var G__3633_3636 = function(G__3631_3634, G__3632_3635) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3631_3634, G__3632_3635);
goog.object.set(G__3631_3634, G__3632_3635, G__3633_3636);
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3638 = k;
  switch(G__3638) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__3640 = null;
  var G__3640__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3640__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3640 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3640__1.call(this, x);
      case 2:
        return G__3640__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3640.cljs$core$IFn$_invoke$arity$1 = G__3640__1;
  G__3640.cljs$core$IFn$_invoke$arity$2 = G__3640__2;
  return G__3640;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__3641 = null;
  var G__3641__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3641__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3641 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3641__1.call(this, x);
      case 2:
        return G__3641__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3641.cljs$core$IFn$_invoke$arity$1 = G__3641__1;
  G__3641.cljs$core$IFn$_invoke$arity$2 = G__3641__2;
  return G__3641;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__3642 = null;
  var G__3642__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3642__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3642 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3642__2.call(this, self__, k);
      case 3:
        return G__3642__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3642.cljs$core$IFn$_invoke$arity$2 = G__3642__2;
  G__3642.cljs$core$IFn$_invoke$arity$3 = G__3642__3;
  return G__3642;
}();
cljs.core.RedNode.prototype.apply = function(self__, args3637) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3637)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
var G__3643_3646 = cljs.core.RedNode.prototype;
var G__3644_3647 = cljs.core.ITER_SYMBOL;
var G__3645_3648 = function(G__3643_3646, G__3644_3647) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3643_3646, G__3644_3647);
goog.object.set(G__3643_3646, G__3644_3647, G__3645_3648);
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__3649 = k;
      var G__3650 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3649, G__3650) : comp.call(null, G__3649, G__3650);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__3651 = comp;
          var G__3652 = tree.left;
          var G__3653 = k;
          var G__3654 = v;
          var G__3655 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3651, G__3652, G__3653, G__3654, G__3655) : cljs.core.tree_map_add.call(null, G__3651, G__3652, G__3653, G__3654, G__3655);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__3656 = comp;
          var G__3657 = tree.right;
          var G__3658 = k;
          var G__3659 = v;
          var G__3660 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3656, G__3657, G__3658, G__3659, G__3660) : cljs.core.tree_map_add.call(null, G__3656, G__3657, G__3658, G__3659, G__3660);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__3661 = left.right;
            var G__3662 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3661, G__3662) : cljs.core.tree_map_append.call(null, G__3661, G__3662);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__3663 = left.right;
            var G__3664 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3663, G__3664) : cljs.core.tree_map_append.call(null, G__3663, G__3664);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__3665 = left;
            var G__3666 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3665, G__3666) : cljs.core.tree_map_append.call(null, G__3665, G__3666);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__3667 = left.right;
            var G__3668 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3667, G__3668) : cljs.core.tree_map_append.call(null, G__3667, G__3668);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__3669 = k;
      var G__3670 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3669, G__3670) : comp.call(null, G__3669, G__3670);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__3671 = comp;
          var G__3672 = tree.left;
          var G__3673 = k;
          var G__3674 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3671, G__3672, G__3673, G__3674) : cljs.core.tree_map_remove.call(null, G__3671, G__3672, G__3673, G__3674);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__3675 = comp;
          var G__3676 = tree.right;
          var G__3677 = k;
          var G__3678 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3675, G__3676, G__3677, G__3678) : cljs.core.tree_map_remove.call(null, G__3675, G__3676, G__3677, G__3678);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__3679 = comp;
        var G__3680 = tree.left;
        var G__3681 = k;
        var G__3682 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3679, G__3680, G__3681, G__3682) : cljs.core.tree_map_replace.call(null, G__3679, G__3680, G__3681, G__3682);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__3683 = comp;
        var G__3684 = tree.right;
        var G__3685 = k;
        var G__3686 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3683, G__3684, G__3685, G__3686) : cljs.core.tree_map_replace.call(null, G__3683, G__3684, G__3685, G__3686);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3688 = cljs.core.seq(coll);
  var chunk__3689 = null;
  var count__3690 = 0;
  var i__3691 = 0;
  while (true) {
    if (i__3691 < count__3690) {
      var vec__3692 = chunk__3689.cljs$core$IIndexed$_nth$arity$2(null, i__3691);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3692, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3692, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3702 = seq__3688;
      var G__3703 = chunk__3689;
      var G__3704 = count__3690;
      var G__3705 = i__3691 + 1;
      seq__3688 = G__3702;
      chunk__3689 = G__3703;
      count__3690 = G__3704;
      i__3691 = G__3705;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__3688);
      if (temp__4657__auto__) {
        var seq__3688__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3688__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__3688__$1);
          var G__3706 = cljs.core.chunk_rest(seq__3688__$1);
          var G__3707 = c__4319__auto__;
          var G__3708 = cljs.core.count(c__4319__auto__);
          var G__3709 = 0;
          seq__3688 = G__3706;
          chunk__3689 = G__3707;
          count__3690 = G__3708;
          i__3691 = G__3709;
          continue;
        } else {
          var vec__3695 = cljs.core.first(seq__3688__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3695, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3695, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3710 = cljs.core.next(seq__3688__$1);
          var G__3711 = null;
          var G__3712 = 0;
          var G__3713 = 0;
          seq__3688 = G__3710;
          chunk__3689 = G__3711;
          count__3690 = G__3712;
          i__3691 = G__3713;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__3698 = k;
        var G__3699 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3698, G__3699) : self__.comp.call(null, G__3698, G__3699);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__3714 = t.left;
          t = G__3714;
          continue;
        } else {
          var G__3715 = t.right;
          t = G__3715;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3716 = ret.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3717 = cljs.core.next(es);
          ret = G__3716;
          es = G__3717;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__3718 = null;
  var G__3718__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3718__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3718 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3718__2.call(this, self__, k);
      case 3:
        return G__3718__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3718.cljs$core$IFn$_invoke$arity$2 = G__3718__2;
  G__3718.cljs$core$IFn$_invoke$arity$3 = G__3718__3;
  return G__3718;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args3687) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3687)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__3700 = k;
          var G__3701 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__3700, G__3701) : self__.comp.call(null, G__3700, G__3701);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__3719 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3720 = t.left;
              stack = G__3719;
              t = G__3720;
              continue;
            } else {
              var G__3721 = stack;
              var G__3722 = t.right;
              stack = G__3721;
              t = G__3722;
              continue;
            }
          } else {
            if (c > 0) {
              var G__3723 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__3724 = t.right;
              stack = G__3723;
              t = G__3724;
              continue;
            } else {
              var G__3725 = stack;
              var G__3726 = t.left;
              stack = G__3725;
              t = G__3726;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__3727_3730 = cljs.core.PersistentTreeMap.prototype;
var G__3728_3731 = cljs.core.ITER_SYMBOL;
var G__3729_3732 = function(G__3727_3730, G__3728_3731) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3727_3730, G__3728_3731);
goog.object.set(G__3727_3730, G__3728_3731, G__3729_3732);
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3734 = arguments.length;
  var i__4500__auto___3735 = 0;
  while (true) {
    if (i__4500__auto___3735 < len__4499__auto___3734) {
      args__4502__auto__.push(arguments[i__4500__auto___3735]);
      var G__3736 = i__4500__auto___3735 + 1;
      i__4500__auto___3735 = G__3736;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__3737 = cljs.core.nnext(in$);
      var G__3738 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3737;
      out = G__3738;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq3733) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3733));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3740 = arguments.length;
  var i__4500__auto___3741 = 0;
  while (true) {
    if (i__4500__auto___3741 < len__4499__auto___3740) {
      args__4502__auto__.push(arguments[i__4500__auto___3741]);
      var G__3742 = i__4500__auto___3741 + 1;
      i__4500__auto___3741 = G__3742;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq3739) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3739));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3749 = arguments.length;
  var i__4500__auto___3750 = 0;
  while (true) {
    if (i__4500__auto___3750 < len__4499__auto___3749) {
      args__4502__auto__.push(arguments[i__4500__auto___3750]);
      var G__3751 = i__4500__auto___3750 + 1;
      i__4500__auto___3750 = G__3751;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      var G__3746_3752 = obj;
      var G__3747_3753 = cljs.core.first(kvs);
      var G__3748_3754 = cljs.core.second(kvs);
      goog.object.set(G__3746_3752, G__3747_3753, G__3748_3754);
      var G__3755 = cljs.core.nnext(kvs);
      kvs = G__3755;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq3743) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3743));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3757 = arguments.length;
  var i__4500__auto___3758 = 0;
  while (true) {
    if (i__4500__auto___3758 < len__4499__auto___3757) {
      args__4502__auto__.push(arguments[i__4500__auto___3758]);
      var G__3759 = i__4500__auto___3758 + 1;
      i__4500__auto___3758 = G__3759;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__3760 = cljs.core.nnext(in$);
      var G__3761 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3760;
      out = G__3761;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq3756) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3756));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3764 = arguments.length;
  var i__4500__auto___3765 = 0;
  while (true) {
    if (i__4500__auto___3765 < len__4499__auto___3764) {
      args__4502__auto__.push(arguments[i__4500__auto___3765]);
      var G__3766 = i__4500__auto___3765 + 1;
      i__4500__auto___3765 = G__3766;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__3767 = cljs.core.nnext(in$);
      var G__3768 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__3767;
      out = G__3768;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq3762) {
  var G__3763 = cljs.core.first(seq3762);
  var seq3762__$1 = cljs.core.next(seq3762);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3763, seq3762__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__3771 = null;
  var G__3771__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3771__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3771 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3771__1.call(this, x);
      case 2:
        return G__3771__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3771.cljs$core$IFn$_invoke$arity$1 = G__3771__1;
  G__3771.cljs$core$IFn$_invoke$arity$2 = G__3771__2;
  return G__3771;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__3772 = null;
  var G__3772__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3772__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3772 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3772__1.call(this, x);
      case 2:
        return G__3772__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3772.cljs$core$IFn$_invoke$arity$1 = G__3772__1;
  G__3772.cljs$core$IFn$_invoke$arity$2 = G__3772__2;
  return G__3772;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
var G__3773_3776 = cljs.core.KeySeq.prototype;
var G__3774_3777 = cljs.core.ITER_SYMBOL;
var G__3775_3778 = function(G__3773_3776, G__3774_3777) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3773_3776, G__3774_3777);
goog.object.set(G__3773_3776, G__3774_3777, G__3775_3778);
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__3781 = null;
  var G__3781__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3781__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3781 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3781__1.call(this, x);
      case 2:
        return G__3781__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3781.cljs$core$IFn$_invoke$arity$1 = G__3781__1;
  G__3781.cljs$core$IFn$_invoke$arity$2 = G__3781__2;
  return G__3781;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__3782 = null;
  var G__3782__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3782__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3782 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3782__1.call(this, x);
      case 2:
        return G__3782__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3782.cljs$core$IFn$_invoke$arity$1 = G__3782__1;
  G__3782.cljs$core$IFn$_invoke$arity$2 = G__3782__2;
  return G__3782;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
var G__3783_3786 = cljs.core.ValSeq.prototype;
var G__3784_3787 = cljs.core.ITER_SYMBOL;
var G__3785_3788 = function(G__3783_3786, G__3784_3787) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3783_3786, G__3784_3787);
goog.object.set(G__3783_3786, G__3784_3787, G__3785_3788);
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3792 = arguments.length;
  var i__4500__auto___3793 = 0;
  while (true) {
    if (i__4500__auto___3793 < len__4499__auto___3792) {
      args__4502__auto__.push(arguments[i__4500__auto___3793]);
      var G__3794 = i__4500__auto___3793 + 1;
      i__4500__auto___3793 = G__3794;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__3789_SHARP_, p2__3790_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__3922__auto__ = p1__3789_SHARP_;
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__3790_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq3791) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3791));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3799 = arguments.length;
  var i__4500__auto___3800 = 0;
  while (true) {
    if (i__4500__auto___3800 < len__4499__auto___3799) {
      args__4502__auto__.push(arguments[i__4500__auto___3800]);
      var G__3801 = i__4500__auto___3800 + 1;
      i__4500__auto___3800 = G__3801;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__3797 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__3798 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3797, G__3798) : f.call(null, G__3797, G__3798);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__3922__auto__ = m1;
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq3795) {
  var G__3796 = cljs.core.first(seq3795);
  var seq3795__$1 = cljs.core.next(seq3795);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3796, seq3795__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__3802 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__3803 = cljs.core.next(keys);
      ret = G__3802;
      keys = G__3803;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3807 = cljs.core.seq(coll);
  var chunk__3808 = null;
  var count__3809 = 0;
  var i__3810 = 0;
  while (true) {
    if (i__3810 < count__3809) {
      var vec__3811 = chunk__3808.cljs$core$IIndexed$_nth$arity$2(null, i__3810);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3811, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3811, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3817 = seq__3807;
      var G__3818 = chunk__3808;
      var G__3819 = count__3809;
      var G__3820 = i__3810 + 1;
      seq__3807 = G__3817;
      chunk__3808 = G__3818;
      count__3809 = G__3819;
      i__3810 = G__3820;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__3807);
      if (temp__4657__auto__) {
        var seq__3807__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3807__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__3807__$1);
          var G__3821 = cljs.core.chunk_rest(seq__3807__$1);
          var G__3822 = c__4319__auto__;
          var G__3823 = cljs.core.count(c__4319__auto__);
          var G__3824 = 0;
          seq__3807 = G__3821;
          chunk__3808 = G__3822;
          count__3809 = G__3823;
          i__3810 = G__3824;
          continue;
        } else {
          var vec__3814 = cljs.core.first(seq__3807__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3814, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3814, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3825 = cljs.core.next(seq__3807__$1);
          var G__3826 = null;
          var G__3827 = 0;
          var G__3828 = 0;
          seq__3807 = G__3825;
          chunk__3808 = G__3826;
          count__3809 = G__3827;
          i__3810 = G__3828;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.reduce_kv(function(coll__$1) {
    return function(p1__3805_SHARP_, p2__3804_SHARP_) {
      var or__3922__auto__ = cljs.core.contains_QMARK_(other, p2__3804_SHARP_);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return cljs.core.reduced(false);
      }
    };
  }(coll__$1), true, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__3829 = null;
  var G__3829__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3829__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3829 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3829__2.call(this, self__, k);
      case 3:
        return G__3829__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3829.cljs$core$IFn$_invoke$arity$2 = G__3829__2;
  G__3829.cljs$core$IFn$_invoke$arity$3 = G__3829__3;
  return G__3829;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args3806) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3806)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__3830 = i + 1;
        var G__3831 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__3830;
        out = G__3831;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__3832 = i + 1;
        var G__3833 = cljs.core._conj_BANG_(out, items[i]);
        i = G__3832;
        out = G__3833;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4376__auto___3834 = len;
  var i_3835 = 0;
  while (true) {
    if (i_3835 < n__4376__auto___3834) {
      cljs.core._conj_BANG_(t, items[i_3835]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_3835 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_3835])].join(""));
      }
      var G__3836 = i_3835 + 1;
      i_3835 = G__3836;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4376__auto___3837 = len;
  var i_3838 = 0;
  while (true) {
    if (i_3838 < n__4376__auto___3837) {
      cljs.core._conj_BANG_(t, items[i_3838]);
      var G__3839 = i_3838 + 1;
      i_3838 = G__3839;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
var G__3840_3843 = cljs.core.PersistentHashSet.prototype;
var G__3841_3844 = cljs.core.ITER_SYMBOL;
var G__3842_3845 = function(G__3840_3843, G__3841_3844) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3840_3843, G__3841_3844);
goog.object.set(G__3840_3843, G__3841_3844, G__3842_3845);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__3847 = null;
  var G__3847__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__3847__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__3847 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3847__2.call(this, self__, k);
      case 3:
        return G__3847__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3847.cljs$core$IFn$_invoke$arity$2 = G__3847__2;
  G__3847.cljs$core$IFn$_invoke$arity$3 = G__3847__3;
  return G__3847;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args3846) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3846)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3851 = cljs.core.seq(coll);
  var chunk__3852 = null;
  var count__3853 = 0;
  var i__3854 = 0;
  while (true) {
    if (i__3854 < count__3853) {
      var vec__3855 = chunk__3852.cljs$core$IIndexed$_nth$arity$2(null, i__3854);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3855, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3855, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3861 = seq__3851;
      var G__3862 = chunk__3852;
      var G__3863 = count__3853;
      var G__3864 = i__3854 + 1;
      seq__3851 = G__3861;
      chunk__3852 = G__3862;
      count__3853 = G__3863;
      i__3854 = G__3864;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__3851);
      if (temp__4657__auto__) {
        var seq__3851__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3851__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__3851__$1);
          var G__3865 = cljs.core.chunk_rest(seq__3851__$1);
          var G__3866 = c__4319__auto__;
          var G__3867 = cljs.core.count(c__4319__auto__);
          var G__3868 = 0;
          seq__3851 = G__3865;
          chunk__3852 = G__3866;
          count__3853 = G__3867;
          i__3854 = G__3868;
          continue;
        } else {
          var vec__3858 = cljs.core.first(seq__3851__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3858, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3858, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3869 = cljs.core.next(seq__3851__$1);
          var G__3870 = null;
          var G__3871 = 0;
          var G__3872 = 0;
          seq__3851 = G__3869;
          chunk__3852 = G__3870;
          count__3853 = G__3871;
          i__3854 = G__3872;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.reduce_kv(function(coll__$1) {
    return function(p1__3849_SHARP_, p2__3848_SHARP_) {
      var or__3922__auto__ = cljs.core.contains_QMARK_(other, p2__3848_SHARP_);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return cljs.core.reduced(false);
      }
    };
  }(coll__$1), true, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__3873 = null;
  var G__3873__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3873__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3873 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3873__2.call(this, self__, k);
      case 3:
        return G__3873__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3873.cljs$core$IFn$_invoke$arity$2 = G__3873__2;
  G__3873.cljs$core$IFn$_invoke$arity$3 = G__3873__3;
  return G__3873;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args3850) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3850)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__3874_3877 = cljs.core.PersistentTreeSet.prototype;
var G__3875_3878 = cljs.core.ITER_SYMBOL;
var G__3876_3879 = function(G__3874_3877, G__3875_3878) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3874_3877, G__3875_3878);
goog.object.set(G__3874_3877, G__3875_3878, G__3876_3879);
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4373__auto__ = arr;
    var l__4374__auto__ = a__4373__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4374__auto__) {
        var G__3880 = i + 1;
        var G__3881 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__3880;
        res = G__3881;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__3882 = cljs.core.next(in$__$1);
          var G__3883 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__3882;
          out = G__3883;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__3886 = arguments.length;
  switch(G__3886) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3888 = arguments.length;
      var i__4500__auto___3889 = 0;
      while (true) {
        if (i__4500__auto___3889 < len__4499__auto___3888) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3889]);
          var G__3890 = i__4500__auto___3889 + 1;
          i__4500__auto___3889 = G__3890;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4515__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq3885) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3885));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3892 = arguments.length;
  var i__4500__auto___3893 = 0;
  while (true) {
    if (i__4500__auto___3893 < len__4499__auto___3892) {
      args__4502__auto__.push(arguments[i__4500__auto___3893]);
      var G__3894 = i__4500__auto___3893 + 1;
      i__4500__auto___3893 = G__3894;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq3891) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3891));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___3897 = arguments.length;
  var i__4500__auto___3898 = 0;
  while (true) {
    if (i__4500__auto___3898 < len__4499__auto___3897) {
      args__4502__auto__.push(arguments[i__4500__auto___3898]);
      var G__3899 = i__4500__auto___3898 + 1;
      i__4500__auto___3898 = G__3899;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq3895) {
  var G__3896 = cljs.core.first(seq3895);
  var seq3895__$1 = cljs.core.next(seq3895);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3896, seq3895__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__3903 = arguments.length;
  switch(G__3903) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__3900_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__3900_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__3900_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__3901_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__3901_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__3901_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__3906 = arguments.length;
  switch(G__3906) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__3917 = null;
        var G__3917__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3917__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3917__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3917 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3917__0.call(this);
            case 1:
              return G__3917__1.call(this, result);
            case 2:
              return G__3917__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3917.cljs$core$IFn$_invoke$arity$0 = G__3917__0;
        G__3917.cljs$core$IFn$_invoke$arity$1 = G__3917__1;
        G__3917.cljs$core$IFn$_invoke$arity$2 = G__3917__2;
        return G__3917;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__3911 = function(p__3912, seen__$1) {
        while (true) {
          var vec__3913 = p__3912;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3913, 0, null);
          var xs__$1 = vec__3913;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__3918 = cljs.core.rest(s);
              var G__3919 = seen__$1;
              p__3912 = G__3918;
              seen__$1 = G__3919;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__3911(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__3920 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__3921 = cljs.core.next(s__$1);
      ret = G__3920;
      s__$1 = G__3921;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__3923 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__3924 = cljs.core.next(ks);
      var G__3925 = cljs.core.next(vs);
      map = G__3923;
      ks = G__3924;
      vs = G__3925;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__3933 = arguments.length;
  switch(G__3933) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3935 = arguments.length;
      var i__4500__auto___3936 = 0;
      while (true) {
        if (i__4500__auto___3936 < len__4499__auto___3935) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3936]);
          var G__3937 = i__4500__auto___3936 + 1;
          i__4500__auto___3936 = G__3937;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__3926_SHARP_, p2__3927_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__3926_SHARP_, p2__3927_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq3929) {
  var G__3930 = cljs.core.first(seq3929);
  var seq3929__$1 = cljs.core.next(seq3929);
  var G__3931 = cljs.core.first(seq3929__$1);
  var seq3929__$2 = cljs.core.next(seq3929__$1);
  var G__3932 = cljs.core.first(seq3929__$2);
  var seq3929__$3 = cljs.core.next(seq3929__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3930, G__3931, G__3932, seq3929__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__3945 = arguments.length;
  switch(G__3945) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___3947 = arguments.length;
      var i__4500__auto___3948 = 0;
      while (true) {
        if (i__4500__auto___3948 < len__4499__auto___3947) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___3948]);
          var G__3949 = i__4500__auto___3948 + 1;
          i__4500__auto___3948 = G__3949;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__3938_SHARP_, p2__3939_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__3938_SHARP_, p2__3939_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq3941) {
  var G__3942 = cljs.core.first(seq3941);
  var seq3941__$1 = cljs.core.next(seq3941);
  var G__3943 = cljs.core.first(seq3941__$1);
  var seq3941__$2 = cljs.core.next(seq3941__$1);
  var G__3944 = cljs.core.first(seq3941__$2);
  var seq3941__$3 = cljs.core.next(seq3941__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3942, G__3943, G__3944, seq3941__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__3951 = arguments.length;
  switch(G__3951) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__3953 = null;
        var G__3953__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3953__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__3953__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__3953 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3953__0.call(this);
            case 1:
              return G__3953__1.call(this, result);
            case 2:
              return G__3953__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3953.cljs$core$IFn$_invoke$arity$0 = G__3953__0;
        G__3953.cljs$core$IFn$_invoke$arity$1 = G__3953__1;
        G__3953.cljs$core$IFn$_invoke$arity$2 = G__3953__2;
        return G__3953;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__3955 = arguments.length;
  switch(G__3955) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3958 = null;
      var G__3958__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3958__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3958__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__3958 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3958__0.call(this);
          case 1:
            return G__3958__1.call(this, result);
          case 2:
            return G__3958__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__3958.cljs$core$IFn$_invoke$arity$0 = G__3958__0;
      G__3958.cljs$core$IFn$_invoke$arity$1 = G__3958__1;
      G__3958.cljs$core$IFn$_invoke$arity$2 = G__3958__2;
      return G__3958;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__3956 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3956) : pred.call(null, G__3956);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__3959 = function() {
      var G__3961 = cljs.core._entry_key(sc, e);
      var G__3962 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3961, G__3962) : comp.call(null, G__3961, G__3962);
    }();
    var G__3960 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__3959, G__3960) : test.call(null, G__3959, G__3960);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__3964 = arguments.length;
  switch(G__3964) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__3965 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__3965.cljs$core$IFn$_invoke$arity$1 ? fexpr__3965.cljs$core$IFn$_invoke$arity$1(test) : fexpr__3965.call(null, test);
  }())) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__3966 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3966, 0, null);
      var s = vec__3966;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__3969 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3969, 0, null);
    var s = vec__3969;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__3972 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__3972.cljs$core$IFn$_invoke$arity$1 ? fexpr__3972.cljs$core$IFn$_invoke$arity$1(e) : fexpr__3972.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__3975 = arguments.length;
  switch(G__3975) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__3976 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__3976.cljs$core$IFn$_invoke$arity$1 ? fexpr__3976.cljs$core$IFn$_invoke$arity$1(test) : fexpr__3976.call(null, test);
  }())) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__3977 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3977, 0, null);
      var s = vec__3977;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__3980 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3980, 0, null);
    var s = vec__3980;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__3983 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__3983.cljs$core$IFn$_invoke$arity$1 ? fexpr__3983.cljs$core$IFn$_invoke$arity$1(e) : fexpr__3983.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__3986 = null;
  var G__3986__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3986__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3986 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3986__1.call(this, x);
      case 2:
        return G__3986__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3986.cljs$core$IFn$_invoke$arity$1 = G__3986__1;
  G__3986.cljs$core$IFn$_invoke$arity$2 = G__3986__2;
  return G__3986;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__3987 = null;
  var G__3987__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3987__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3987 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3987__1.call(this, x);
      case 2:
        return G__3987__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3987.cljs$core$IFn$_invoke$arity$1 = G__3987__1;
  G__3987.cljs$core$IFn$_invoke$arity$2 = G__3987__2;
  return G__3987;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(rng__$1.cljs$core$ISeqable$_seq$arity$1(null))) {
    return 0;
  } else {
    var G__3985 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__3985);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__3988 = i + self__.step;
        var G__3989 = ret__$1;
        i = G__3988;
        ret = G__3989;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (rng__$1.cljs$core$ISeqable$_seq$arity$1(null) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(rng__$1.cljs$core$ISeqable$_seq$arity$1(null) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
var G__3990_3993 = cljs.core.Range.prototype;
var G__3991_3994 = cljs.core.ITER_SYMBOL;
var G__3992_3995 = function(G__3990_3993, G__3991_3994) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__3990_3993, G__3991_3994);
goog.object.set(G__3990_3993, G__3991_3994, G__3992_3995);
cljs.core.range = function cljs$core$range(var_args) {
  var G__3997 = arguments.length;
  switch(G__3997) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__4000 = arguments.length;
  switch(G__4000) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__4002 = null;
        var G__4002__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4002__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4002__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__4002 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4002__0.call(this);
            case 1:
              return G__4002__1.call(this, result);
            case 2:
              return G__4002__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__4002.cljs$core$IFn$_invoke$arity$0 = G__4002__0;
        G__4002.cljs$core$IFn$_invoke$arity$1 = G__4002__1;
        G__4002.cljs$core$IFn$_invoke$arity$2 = G__4002__2;
        return G__4002;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__4005 = arguments.length;
  switch(G__4005) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__4007 = null;
        var G__4007__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4007__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4007__2 = function(result, input) {
          var pval = cljs.core.deref(pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__4007 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4007__0.call(this);
            case 1:
              return G__4007__1.call(this, result);
            case 2:
              return G__4007__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__4007.cljs$core$IFn$_invoke$arity$0 = G__4007__0;
        G__4007.cljs$core$IFn$_invoke$arity$1 = G__4007__1;
        G__4007.cljs$core$IFn$_invoke$arity$2 = G__4007__2;
        return G__4007;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__4003_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__4003_SHARP_) : f.call(null, p1__4003_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__4009 = arguments.length;
  switch(G__4009) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__4010 = init;
          var G__4011 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4010, G__4011) : f.call(null, G__4010, G__4011);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__4028 = arguments.length;
  switch(G__4028) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___4030 = arguments.length;
      var i__4500__auto___4031 = 0;
      while (true) {
        if (i__4500__auto___4031 < len__4499__auto___4030) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___4031]);
          var G__4032 = i__4500__auto___4031 + 1;
          i__4500__auto___4031 = G__4032;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4515__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__4033 = null;
    var G__4033__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__4033__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__4033__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__4033__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__4033__4 = function() {
      var G__4034__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__4034 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4035__i = 0, G__4035__a = new Array(arguments.length - 3);
          while (G__4035__i < G__4035__a.length) {
            G__4035__a[G__4035__i] = arguments[G__4035__i + 3];
            ++G__4035__i;
          }
          args = new cljs.core.IndexedSeq(G__4035__a, 0, null);
        }
        return G__4034__delegate.call(this, x, y, z, args);
      };
      G__4034.cljs$lang$maxFixedArity = 3;
      G__4034.cljs$lang$applyTo = function(arglist__4036) {
        var x = cljs.core.first(arglist__4036);
        arglist__4036 = cljs.core.next(arglist__4036);
        var y = cljs.core.first(arglist__4036);
        arglist__4036 = cljs.core.next(arglist__4036);
        var z = cljs.core.first(arglist__4036);
        var args = cljs.core.rest(arglist__4036);
        return G__4034__delegate(x, y, z, args);
      };
      G__4034.cljs$core$IFn$_invoke$arity$variadic = G__4034__delegate;
      return G__4034;
    }();
    G__4033 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4033__0.call(this);
        case 1:
          return G__4033__1.call(this, x);
        case 2:
          return G__4033__2.call(this, x, y);
        case 3:
          return G__4033__3.call(this, x, y, z);
        default:
          var G__4037 = null;
          if (arguments.length > 3) {
            var G__4038__i = 0, G__4038__a = new Array(arguments.length - 3);
            while (G__4038__i < G__4038__a.length) {
              G__4038__a[G__4038__i] = arguments[G__4038__i + 3];
              ++G__4038__i;
            }
            G__4037 = new cljs.core.IndexedSeq(G__4038__a, 0, null);
          }
          return G__4033__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4037);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__4033.cljs$lang$maxFixedArity = 3;
    G__4033.cljs$lang$applyTo = G__4033__4.cljs$lang$applyTo;
    G__4033.cljs$core$IFn$_invoke$arity$0 = G__4033__0;
    G__4033.cljs$core$IFn$_invoke$arity$1 = G__4033__1;
    G__4033.cljs$core$IFn$_invoke$arity$2 = G__4033__2;
    G__4033.cljs$core$IFn$_invoke$arity$3 = G__4033__3;
    G__4033.cljs$core$IFn$_invoke$arity$variadic = G__4033__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4033;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__4039 = null;
    var G__4039__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__4039__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__4039__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__4039__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__4039__4 = function() {
      var G__4040__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__4040 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4041__i = 0, G__4041__a = new Array(arguments.length - 3);
          while (G__4041__i < G__4041__a.length) {
            G__4041__a[G__4041__i] = arguments[G__4041__i + 3];
            ++G__4041__i;
          }
          args = new cljs.core.IndexedSeq(G__4041__a, 0, null);
        }
        return G__4040__delegate.call(this, x, y, z, args);
      };
      G__4040.cljs$lang$maxFixedArity = 3;
      G__4040.cljs$lang$applyTo = function(arglist__4042) {
        var x = cljs.core.first(arglist__4042);
        arglist__4042 = cljs.core.next(arglist__4042);
        var y = cljs.core.first(arglist__4042);
        arglist__4042 = cljs.core.next(arglist__4042);
        var z = cljs.core.first(arglist__4042);
        var args = cljs.core.rest(arglist__4042);
        return G__4040__delegate(x, y, z, args);
      };
      G__4040.cljs$core$IFn$_invoke$arity$variadic = G__4040__delegate;
      return G__4040;
    }();
    G__4039 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4039__0.call(this);
        case 1:
          return G__4039__1.call(this, x);
        case 2:
          return G__4039__2.call(this, x, y);
        case 3:
          return G__4039__3.call(this, x, y, z);
        default:
          var G__4043 = null;
          if (arguments.length > 3) {
            var G__4044__i = 0, G__4044__a = new Array(arguments.length - 3);
            while (G__4044__i < G__4044__a.length) {
              G__4044__a[G__4044__i] = arguments[G__4044__i + 3];
              ++G__4044__i;
            }
            G__4043 = new cljs.core.IndexedSeq(G__4044__a, 0, null);
          }
          return G__4039__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4043);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__4039.cljs$lang$maxFixedArity = 3;
    G__4039.cljs$lang$applyTo = G__4039__4.cljs$lang$applyTo;
    G__4039.cljs$core$IFn$_invoke$arity$0 = G__4039__0;
    G__4039.cljs$core$IFn$_invoke$arity$1 = G__4039__1;
    G__4039.cljs$core$IFn$_invoke$arity$2 = G__4039__2;
    G__4039.cljs$core$IFn$_invoke$arity$3 = G__4039__3;
    G__4039.cljs$core$IFn$_invoke$arity$variadic = G__4039__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4039;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__4045 = null;
    var G__4045__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__4045__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__4045__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__4045__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__4045__4 = function() {
      var G__4046__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__4046 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4047__i = 0, G__4047__a = new Array(arguments.length - 3);
          while (G__4047__i < G__4047__a.length) {
            G__4047__a[G__4047__i] = arguments[G__4047__i + 3];
            ++G__4047__i;
          }
          args = new cljs.core.IndexedSeq(G__4047__a, 0, null);
        }
        return G__4046__delegate.call(this, x, y, z, args);
      };
      G__4046.cljs$lang$maxFixedArity = 3;
      G__4046.cljs$lang$applyTo = function(arglist__4048) {
        var x = cljs.core.first(arglist__4048);
        arglist__4048 = cljs.core.next(arglist__4048);
        var y = cljs.core.first(arglist__4048);
        arglist__4048 = cljs.core.next(arglist__4048);
        var z = cljs.core.first(arglist__4048);
        var args = cljs.core.rest(arglist__4048);
        return G__4046__delegate(x, y, z, args);
      };
      G__4046.cljs$core$IFn$_invoke$arity$variadic = G__4046__delegate;
      return G__4046;
    }();
    G__4045 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4045__0.call(this);
        case 1:
          return G__4045__1.call(this, x);
        case 2:
          return G__4045__2.call(this, x, y);
        case 3:
          return G__4045__3.call(this, x, y, z);
        default:
          var G__4049 = null;
          if (arguments.length > 3) {
            var G__4050__i = 0, G__4050__a = new Array(arguments.length - 3);
            while (G__4050__i < G__4050__a.length) {
              G__4050__a[G__4050__i] = arguments[G__4050__i + 3];
              ++G__4050__i;
            }
            G__4049 = new cljs.core.IndexedSeq(G__4050__a, 0, null);
          }
          return G__4045__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4049);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    G__4045.cljs$lang$maxFixedArity = 3;
    G__4045.cljs$lang$applyTo = G__4045__4.cljs$lang$applyTo;
    G__4045.cljs$core$IFn$_invoke$arity$0 = G__4045__0;
    G__4045.cljs$core$IFn$_invoke$arity$1 = G__4045__1;
    G__4045.cljs$core$IFn$_invoke$arity$2 = G__4045__2;
    G__4045.cljs$core$IFn$_invoke$arity$3 = G__4045__3;
    G__4045.cljs$core$IFn$_invoke$arity$variadic = G__4045__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4045;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__4051 = null;
      var G__4051__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4013_SHARP_, p2__4014_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4013_SHARP_, p2__4014_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4014_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4014_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4051__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4015_SHARP_, p2__4016_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4015_SHARP_, p2__4016_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4016_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__4016_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4051__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4017_SHARP_, p2__4018_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4017_SHARP_, p2__4018_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4018_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__4018_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4051__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4019_SHARP_, p2__4020_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4019_SHARP_, p2__4020_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4020_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__4020_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4051__4 = function() {
        var G__4052__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__4021_SHARP_, p2__4022_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4021_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4022_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__4052 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__4053__i = 0, G__4053__a = new Array(arguments.length - 3);
            while (G__4053__i < G__4053__a.length) {
              G__4053__a[G__4053__i] = arguments[G__4053__i + 3];
              ++G__4053__i;
            }
            args = new cljs.core.IndexedSeq(G__4053__a, 0, null);
          }
          return G__4052__delegate.call(this, x, y, z, args);
        };
        G__4052.cljs$lang$maxFixedArity = 3;
        G__4052.cljs$lang$applyTo = function(arglist__4054) {
          var x = cljs.core.first(arglist__4054);
          arglist__4054 = cljs.core.next(arglist__4054);
          var y = cljs.core.first(arglist__4054);
          arglist__4054 = cljs.core.next(arglist__4054);
          var z = cljs.core.first(arglist__4054);
          var args = cljs.core.rest(arglist__4054);
          return G__4052__delegate(x, y, z, args);
        };
        G__4052.cljs$core$IFn$_invoke$arity$variadic = G__4052__delegate;
        return G__4052;
      }();
      G__4051 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__4051__0.call(this);
          case 1:
            return G__4051__1.call(this, x);
          case 2:
            return G__4051__2.call(this, x, y);
          case 3:
            return G__4051__3.call(this, x, y, z);
          default:
            var G__4055 = null;
            if (arguments.length > 3) {
              var G__4056__i = 0, G__4056__a = new Array(arguments.length - 3);
              while (G__4056__i < G__4056__a.length) {
                G__4056__a[G__4056__i] = arguments[G__4056__i + 3];
                ++G__4056__i;
              }
              G__4055 = new cljs.core.IndexedSeq(G__4056__a, 0, null);
            }
            return G__4051__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4055);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__4051.cljs$lang$maxFixedArity = 3;
      G__4051.cljs$lang$applyTo = G__4051__4.cljs$lang$applyTo;
      G__4051.cljs$core$IFn$_invoke$arity$0 = G__4051__0;
      G__4051.cljs$core$IFn$_invoke$arity$1 = G__4051__1;
      G__4051.cljs$core$IFn$_invoke$arity$2 = G__4051__2;
      G__4051.cljs$core$IFn$_invoke$arity$3 = G__4051__3;
      G__4051.cljs$core$IFn$_invoke$arity$variadic = G__4051__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__4051;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq4024) {
  var G__4025 = cljs.core.first(seq4024);
  var seq4024__$1 = cljs.core.next(seq4024);
  var G__4026 = cljs.core.first(seq4024__$1);
  var seq4024__$2 = cljs.core.next(seq4024__$1);
  var G__4027 = cljs.core.first(seq4024__$2);
  var seq4024__$3 = cljs.core.next(seq4024__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4025, G__4026, G__4027, seq4024__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__4058 = arguments.length;
  switch(G__4058) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var G__4060 = cljs.core.next(s);
      coll = G__4060;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__4061 = n - 1;
      var G__4062 = cljs.core.next(coll);
      n = G__4061;
      coll = G__4062;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__4064 = arguments.length;
  switch(G__4064) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_idx = match_idx + function() {
    var x__4006__auto__ = 1;
    var y__4007__auto__ = cljs.core.count(match_str);
    return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
  }();
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_idx, post_match) {
      return function() {
        return cljs.core.cons(match_data, post_idx <= cljs.core.count(s) ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2(re, post_match) : cljs.core.re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_idx, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__4066 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4066, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4066, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__3922__auto__ = flags;
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_4069 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__3922__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__4070_4076 = cljs.core.first(coll);
          var G__4071_4077 = writer;
          var G__4072_4078 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4070_4076, G__4071_4077, G__4072_4078) : print_one.call(null, G__4070_4076, G__4071_4077, G__4072_4078);
        } else {
        }
        var coll_4079__$1 = cljs.core.next(coll);
        var n_4080 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_4079__$1 && (n_4080 == null || !(n_4080 === 0))) {
            cljs.core._write(writer, sep);
            var G__4073_4081 = cljs.core.first(coll_4079__$1);
            var G__4074_4082 = writer;
            var G__4075_4083 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4073_4081, G__4074_4082, G__4075_4083) : print_one.call(null, G__4073_4081, G__4074_4082, G__4075_4083);
            var G__4084 = cljs.core.next(coll_4079__$1);
            var G__4085 = n_4080 - 1;
            coll_4079__$1 = G__4084;
            n_4080 = G__4085;
            continue;
          } else {
            if (cljs.core.seq(coll_4079__$1) && n_4080 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__3922__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_4069;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4092 = arguments.length;
  var i__4500__auto___4093 = 0;
  while (true) {
    if (i__4500__auto___4093 < len__4499__auto___4092) {
      args__4502__auto__.push(arguments[i__4500__auto___4093]);
      var G__4094 = i__4500__auto___4093 + 1;
      i__4500__auto___4093 = G__4094;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__4088 = cljs.core.seq(ss);
  var chunk__4089 = null;
  var count__4090 = 0;
  var i__4091 = 0;
  while (true) {
    if (i__4091 < count__4090) {
      var s = chunk__4089.cljs$core$IIndexed$_nth$arity$2(null, i__4091);
      cljs.core._write(writer, s);
      var G__4095 = seq__4088;
      var G__4096 = chunk__4089;
      var G__4097 = count__4090;
      var G__4098 = i__4091 + 1;
      seq__4088 = G__4095;
      chunk__4089 = G__4096;
      count__4090 = G__4097;
      i__4091 = G__4098;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__4088);
      if (temp__4657__auto__) {
        var seq__4088__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4088__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__4088__$1);
          var G__4099 = cljs.core.chunk_rest(seq__4088__$1);
          var G__4100 = c__4319__auto__;
          var G__4101 = cljs.core.count(c__4319__auto__);
          var G__4102 = 0;
          seq__4088 = G__4099;
          chunk__4089 = G__4100;
          count__4090 = G__4101;
          i__4091 = G__4102;
          continue;
        } else {
          var s = cljs.core.first(seq__4088__$1);
          cljs.core._write(writer, s);
          var G__4103 = cljs.core.next(seq__4088__$1);
          var G__4104 = null;
          var G__4105 = 0;
          var G__4106 = 0;
          seq__4088 = G__4103;
          chunk__4089 = G__4104;
          count__4090 = G__4105;
          i__4091 = G__4106;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq4086) {
  var G__4087 = cljs.core.first(seq4086);
  var seq4086__$1 = cljs.core.next(seq4086);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4087, seq4086__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj4108 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj4108;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str.cljs$core$IFn$_invoke$arity$1('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__3911__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__3911__auto__) {
    var and__3911__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__3911__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__3911__auto____$1;
    }
  } else {
    return and__3911__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(""));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(""));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__4113 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__4113);
                  } else {
                    return G__4113;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = cljs.core.truth_(function() {
                      var or__3922__auto__ = name == null;
                      if (or__3922__auto__) {
                        return or__3922__auto__;
                      } else {
                        return goog.string.isEmpty(name);
                      }
                    }()) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join("")), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join("");
                        while (true) {
                          if (cljs.core.count(ns) < len) {
                            var G__4116 = ["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join("");
                            ns = G__4116;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', [cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__4114 = obj;
                          var G__4114__$1 = G__4114 == null ? null : G__4114.constructor;
                          if (G__4114__$1 == null) {
                            return null;
                          } else {
                            return G__4114__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__4115 = obj;
                            var G__4115__$1 = G__4115 == null ? null : G__4115.constructor;
                            if (G__4115__$1 == null) {
                              return null;
                            } else {
                              return G__4115__$1.name;
                            }
                          }();
                          var name__$1 = cljs.core.truth_(function() {
                            var or__3922__auto__ = name == null;
                            if (or__3922__auto__) {
                              return or__3922__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(""), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__4117 = obj;
    var G__4118 = writer;
    var G__4119 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4117, G__4118, G__4119) : alt_impl.call(null, G__4117, G__4118, G__4119);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__4120 = cljs.core.seq(cljs.core.next(objs));
  var chunk__4121 = null;
  var count__4122 = 0;
  var i__4123 = 0;
  while (true) {
    if (i__4123 < count__4122) {
      var obj = chunk__4121.cljs$core$IIndexed$_nth$arity$2(null, i__4123);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__4124 = seq__4120;
      var G__4125 = chunk__4121;
      var G__4126 = count__4122;
      var G__4127 = i__4123 + 1;
      seq__4120 = G__4124;
      chunk__4121 = G__4125;
      count__4122 = G__4126;
      i__4123 = G__4127;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__4120);
      if (temp__4657__auto__) {
        var seq__4120__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4120__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first(seq__4120__$1);
          var G__4128 = cljs.core.chunk_rest(seq__4120__$1);
          var G__4129 = c__4319__auto__;
          var G__4130 = cljs.core.count(c__4319__auto__);
          var G__4131 = 0;
          seq__4120 = G__4128;
          chunk__4121 = G__4129;
          count__4122 = G__4130;
          i__4123 = G__4131;
          continue;
        } else {
          var obj = cljs.core.first(seq__4120__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__4132 = cljs.core.next(seq__4120__$1);
          var G__4133 = null;
          var G__4134 = 0;
          var G__4135 = 0;
          seq__4120 = G__4132;
          chunk__4121 = G__4133;
          count__4122 = G__4134;
          i__4123 = G__4135;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__4137 = arguments.length;
  switch(G__4137) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4140 = arguments.length;
  var i__4500__auto___4141 = 0;
  while (true) {
    if (i__4500__auto___4141 < len__4499__auto___4140) {
      args__4502__auto__.push(arguments[i__4500__auto___4141]);
      var G__4142 = i__4500__auto___4141 + 1;
      i__4500__auto___4141 = G__4142;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq4139) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4139));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4144 = arguments.length;
  var i__4500__auto___4145 = 0;
  while (true) {
    if (i__4500__auto___4145 < len__4499__auto___4144) {
      args__4502__auto__.push(arguments[i__4500__auto___4145]);
      var G__4146 = i__4500__auto___4145 + 1;
      i__4500__auto___4145 = G__4146;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq4143) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4143));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4148 = arguments.length;
  var i__4500__auto___4149 = 0;
  while (true) {
    if (i__4500__auto___4149 < len__4499__auto___4148) {
      args__4502__auto__.push(arguments[i__4500__auto___4149]);
      var G__4150 = i__4500__auto___4149 + 1;
      i__4500__auto___4149 = G__4150;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq4147) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4147));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__4151__i = 0, G__4151__a = new Array(arguments.length - 0);
      while (G__4151__i < G__4151__a.length) {
        G__4151__a[G__4151__i] = arguments[G__4151__i + 0];
        ++G__4151__i;
      }
      objs = new cljs.core.IndexedSeq(G__4151__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__4152) {
    var objs = cljs.core.seq(arglist__4152);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4154 = arguments.length;
  var i__4500__auto___4155 = 0;
  while (true) {
    if (i__4500__auto___4155 < len__4499__auto___4154) {
      args__4502__auto__.push(arguments[i__4500__auto___4155]);
      var G__4156 = i__4500__auto___4155 + 1;
      i__4500__auto___4155 = G__4156;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq4153) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4153));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4158 = arguments.length;
  var i__4500__auto___4159 = 0;
  while (true) {
    if (i__4500__auto___4159 < len__4499__auto___4158) {
      args__4502__auto__.push(arguments[i__4500__auto___4159]);
      var G__4160 = i__4500__auto___4159 + 1;
      i__4500__auto___4159 = G__4160;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq4157) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4157));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4162 = arguments.length;
  var i__4500__auto___4163 = 0;
  while (true) {
    if (i__4500__auto___4163 < len__4499__auto___4162) {
      args__4502__auto__.push(arguments[i__4500__auto___4163]);
      var G__4164 = i__4500__auto___4163 + 1;
      i__4500__auto___4163 = G__4164;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq4161) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4161));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4166 = arguments.length;
  var i__4500__auto___4167 = 0;
  while (true) {
    if (i__4500__auto___4167 < len__4499__auto___4166) {
      args__4502__auto__.push(arguments[i__4500__auto___4167]);
      var G__4168 = i__4500__auto___4167 + 1;
      i__4500__auto___4167 = G__4168;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq4165) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4165));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var ns = null;
    var G__4175 = cljs.core.seq(m);
    var vec__4176 = G__4175;
    var seq__4177 = cljs.core.seq(vec__4176);
    var first__4178 = cljs.core.first(seq__4177);
    var seq__4177__$1 = cljs.core.next(seq__4177);
    var vec__4179 = first__4178;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4179, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4179, 1, null);
    var entry = vec__4179;
    var entries = seq__4177__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__4175__$1 = G__4175;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__4182 = G__4175__$1;
      var seq__4183 = cljs.core.seq(vec__4182);
      var first__4184 = cljs.core.first(seq__4183);
      var seq__4183__$1 = cljs.core.next(seq__4183);
      var vec__4185 = first__4184;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4185, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4185, 1, null);
      var entry__$1 = vec__4185;
      var entries__$1 = seq__4183__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__4188 = ns__$2;
              var G__4189 = entries__$1;
              var G__4190 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4188;
              G__4175__$1 = G__4189;
              lm__$1 = G__4190;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__4657__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__4657__auto__)) {
              var new_ns = temp__4657__auto__;
              var G__4191 = new_ns;
              var G__4192 = entries__$1;
              var G__4193 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4191;
              G__4175__$1 = G__4192;
              lm__$1 = G__4193;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__4194_4200 = cljs.core.key(e);
    var G__4195_4201 = w;
    var G__4196_4202 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4194_4200, G__4195_4201, G__4196_4202) : print_one.call(null, G__4194_4200, G__4195_4201, G__4196_4202);
    cljs.core._write(w, " ");
    var G__4197 = cljs.core.val(e);
    var G__4198 = w;
    var G__4199 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4197, G__4198, G__4199) : print_one.call(null, G__4197, G__4198, G__4199);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__4203 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4203, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4203, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4209 = arguments.length;
  var i__4500__auto___4210 = 0;
  while (true) {
    if (i__4500__auto___4210 < len__4499__auto___4209) {
      args__4502__auto__.push(arguments[i__4500__auto___4210]);
      var G__4211 = i__4500__auto___4210 + 1;
      i__4500__auto___4210 = G__4211;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq4206) {
  var G__4207 = cljs.core.first(seq4206);
  var seq4206__$1 = cljs.core.next(seq4206);
  var G__4208 = cljs.core.first(seq4206__$1);
  var seq4206__$2 = cljs.core.next(seq4206__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4207, G__4208, seq4206__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__4213 = arguments.length;
  switch(G__4213) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__4215_SHARP_, p2__4216_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__4215_SHARP_, p2__4216_SHARP_) : rf.call(null, p1__4215_SHARP_, p2__4216_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__4217 = null;
      var G__4217__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4217__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4217__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__4217 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4217__0.call(this);
          case 1:
            return G__4217__1.call(this, result);
          case 2:
            return G__4217__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__4217.cljs$core$IFn$_invoke$arity$0 = G__4217__0;
      G__4217.cljs$core$IFn$_invoke$arity$1 = G__4217__1;
      G__4217.cljs$core$IFn$_invoke$arity$2 = G__4217__2;
      return G__4217;
    }();
  }(rf1);
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__4219 = arguments.length;
  switch(G__4219) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__4223 = null;
      var G__4223__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4223__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__4223__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__4220 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__4221 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__4220, G__4221) : retf.call(null, G__4220, G__4221);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4223 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4223__0.call(this);
          case 1:
            return G__4223__1.call(this, result);
          case 2:
            return G__4223__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + (arguments.length - 1));
      };
      G__4223.cljs$core$IFn$_invoke$arity$0 = G__4223__0;
      G__4223.cljs$core$IFn$_invoke$arity$1 = G__4223__1;
      G__4223.cljs$core$IFn$_invoke$arity$2 = G__4223__2;
      return G__4223;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__4225 = arguments.length;
  switch(G__4225) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__4227 = null;
        var G__4227__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4227__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4227__2 = function(result, input) {
          var prior = cljs.core.deref(pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4227 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4227__0.call(this);
            case 1:
              return G__4227__1.call(this, result);
            case 2:
              return G__4227__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__4227.cljs$core$IFn$_invoke$arity$0 = G__4227__0;
        G__4227.cljs$core$IFn$_invoke$arity$1 = G__4227__1;
        G__4227.cljs$core$IFn$_invoke$arity$2 = G__4227__2;
        return G__4227;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__4229 = arguments.length;
  switch(G__4229) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__4231 = null;
  var G__4231__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__4231__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4231 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4231__1.call(this, x);
      case 2:
        return G__4231__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4231.cljs$core$IFn$_invoke$arity$1 = G__4231__1;
  G__4231.cljs$core$IFn$_invoke$arity$2 = G__4231__2;
  return G__4231;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__4232 = null;
  var G__4232__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__4232__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4232 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4232__1.call(this, x);
      case 2:
        return G__4232__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4232.cljs$core$IFn$_invoke$arity$1 = G__4232__1;
  G__4232.cljs$core$IFn$_invoke$arity$2 = G__4232__2;
  return G__4232;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
var G__4233_4236 = cljs.core.Eduction.prototype;
var G__4234_4237 = cljs.core.ITER_SYMBOL;
var G__4235_4238 = function(G__4233_4236, G__4234_4237) {
  return function() {
    var this__4438__auto__ = this;
    return cljs.core.es6_iterator(this__4438__auto__);
  };
}(G__4233_4236, G__4234_4237);
goog.object.set(G__4233_4236, G__4234_4237, G__4235_4238);
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4240 = arguments.length;
  var i__4500__auto___4241 = 0;
  while (true) {
    if (i__4500__auto___4241 < len__4499__auto___4240) {
      args__4502__auto__.push(arguments[i__4500__auto___4241]);
      var G__4242 = i__4500__auto___4241 + 1;
      i__4500__auto___4241 = G__4242;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq4239) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4239));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4244_SHARP_, p2__4243_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__4243_SHARP_) : proc.call(null, p2__4243_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto__.call(null, x);
    } else {
      var m__4212__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto__.call(null, x);
    } else {
      var m__4212__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4212__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__4246 = arguments.length;
  switch(G__4246) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4300 = arguments.length;
  var i__4500__auto___4301 = 0;
  while (true) {
    if (i__4500__auto___4301 < len__4499__auto___4300) {
      args__4502__auto__.push(arguments[i__4500__auto___4301]);
      var G__4302 = i__4500__auto___4301 + 1;
      i__4500__auto___4301 = G__4302;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__4251) {
  var map__4252 = p__4251;
  var map__4252__$1 = (!(map__4252 == null) ? map__4252.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4252.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4252) : map__4252;
  var options = map__4252__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__4252__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function(map__4252, map__4252__$1, options, keyword_fn) {
    return function cljs$core$keyfn(k) {
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
    };
  }(map__4252, map__4252__$1, options, keyword_fn);
  var thisfn = function(map__4252, map__4252__$1, options, keyword_fn) {
    return function cljs$core$thisfn(x__$1) {
      if (x__$1 == null) {
        return null;
      } else {
        if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
          return cljs.core._clj__GT_js(x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Keyword) {
            return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
          } else {
            if (x__$1 instanceof cljs.core.Symbol) {
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1)].join("");
            } else {
              if (cljs.core.map_QMARK_(x__$1)) {
                var m = {};
                var seq__4280_4303 = cljs.core.seq(x__$1);
                var chunk__4281_4304 = null;
                var count__4282_4305 = 0;
                var i__4283_4306 = 0;
                while (true) {
                  if (i__4283_4306 < count__4282_4305) {
                    var vec__4284_4307 = chunk__4281_4304.cljs$core$IIndexed$_nth$arity$2(null, i__4283_4306);
                    var k_4308 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4284_4307, 0, null);
                    var v_4309 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4284_4307, 1, null);
                    var G__4287_4310 = m;
                    var G__4288_4311 = keyfn(k_4308);
                    var G__4289_4312 = cljs$core$thisfn(v_4309);
                    goog.object.set(G__4287_4310, G__4288_4311, G__4289_4312);
                    var G__4313 = seq__4280_4303;
                    var G__4314 = chunk__4281_4304;
                    var G__4315 = count__4282_4305;
                    var G__4316 = i__4283_4306 + 1;
                    seq__4280_4303 = G__4313;
                    chunk__4281_4304 = G__4314;
                    count__4282_4305 = G__4315;
                    i__4283_4306 = G__4316;
                    continue;
                  } else {
                    var temp__4657__auto___4317 = cljs.core.seq(seq__4280_4303);
                    if (temp__4657__auto___4317) {
                      var seq__4280_4318__$1 = temp__4657__auto___4317;
                      if (cljs.core.chunked_seq_QMARK_(seq__4280_4318__$1)) {
                        var c__4319__auto___4319 = cljs.core.chunk_first(seq__4280_4318__$1);
                        var G__4320 = cljs.core.chunk_rest(seq__4280_4318__$1);
                        var G__4321 = c__4319__auto___4319;
                        var G__4322 = cljs.core.count(c__4319__auto___4319);
                        var G__4323 = 0;
                        seq__4280_4303 = G__4320;
                        chunk__4281_4304 = G__4321;
                        count__4282_4305 = G__4322;
                        i__4283_4306 = G__4323;
                        continue;
                      } else {
                        var vec__4290_4324 = cljs.core.first(seq__4280_4318__$1);
                        var k_4325 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4290_4324, 0, null);
                        var v_4326 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4290_4324, 1, null);
                        var G__4293_4327 = m;
                        var G__4294_4328 = keyfn(k_4325);
                        var G__4295_4329 = cljs$core$thisfn(v_4326);
                        goog.object.set(G__4293_4327, G__4294_4328, G__4295_4329);
                        var G__4330 = cljs.core.next(seq__4280_4318__$1);
                        var G__4331 = null;
                        var G__4332 = 0;
                        var G__4333 = 0;
                        seq__4280_4303 = G__4330;
                        chunk__4281_4304 = G__4331;
                        count__4282_4305 = G__4332;
                        i__4283_4306 = G__4333;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return m;
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  var arr = [];
                  var seq__4296_4334 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                  var chunk__4297_4335 = null;
                  var count__4298_4336 = 0;
                  var i__4299_4337 = 0;
                  while (true) {
                    if (i__4299_4337 < count__4298_4336) {
                      var x_4338__$2 = chunk__4297_4335.cljs$core$IIndexed$_nth$arity$2(null, i__4299_4337);
                      arr.push(x_4338__$2);
                      var G__4339 = seq__4296_4334;
                      var G__4340 = chunk__4297_4335;
                      var G__4341 = count__4298_4336;
                      var G__4342 = i__4299_4337 + 1;
                      seq__4296_4334 = G__4339;
                      chunk__4297_4335 = G__4340;
                      count__4298_4336 = G__4341;
                      i__4299_4337 = G__4342;
                      continue;
                    } else {
                      var temp__4657__auto___4343 = cljs.core.seq(seq__4296_4334);
                      if (temp__4657__auto___4343) {
                        var seq__4296_4344__$1 = temp__4657__auto___4343;
                        if (cljs.core.chunked_seq_QMARK_(seq__4296_4344__$1)) {
                          var c__4319__auto___4345 = cljs.core.chunk_first(seq__4296_4344__$1);
                          var G__4346 = cljs.core.chunk_rest(seq__4296_4344__$1);
                          var G__4347 = c__4319__auto___4345;
                          var G__4348 = cljs.core.count(c__4319__auto___4345);
                          var G__4349 = 0;
                          seq__4296_4334 = G__4346;
                          chunk__4297_4335 = G__4347;
                          count__4298_4336 = G__4348;
                          i__4299_4337 = G__4349;
                          continue;
                        } else {
                          var x_4350__$2 = cljs.core.first(seq__4296_4344__$1);
                          arr.push(x_4350__$2);
                          var G__4351 = cljs.core.next(seq__4296_4344__$1);
                          var G__4352 = null;
                          var G__4353 = 0;
                          var G__4354 = 0;
                          seq__4296_4334 = G__4351;
                          chunk__4297_4335 = G__4352;
                          count__4298_4336 = G__4353;
                          i__4299_4337 = G__4354;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  return arr;
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4252, map__4252__$1, options, keyword_fn);
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq4249) {
  var G__4250 = cljs.core.first(seq4249);
  var seq4249__$1 = cljs.core.next(seq4249);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4250, seq4249__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4211__auto__ = x == null ? null : x;
    var m__4212__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4212__auto__.call(null, x, options);
    } else {
      var m__4212__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4212__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__4358 = arguments.length;
  switch(G__4358) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___4367 = arguments.length;
      var i__4500__auto___4368 = 0;
      while (true) {
        if (i__4500__auto___4368 < len__4499__auto___4367) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___4368]);
          var G__4369 = i__4500__auto___4368 + 1;
          i__4500__auto___4368 = G__4369;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4515__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__4359 = opts;
  var map__4359__$1 = (!(map__4359 == null) ? map__4359.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4359.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4359) : map__4359;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4359__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__4359, map__4359__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.map_entry_QMARK_(x__$1)) {
            return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
          } else {
            if (cljs.core.coll_QMARK_(x__$1)) {
              return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.array_QMARK_(x__$1)) {
                return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
              } else {
                if (cljs.core.type(x__$1) === Object) {
                  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                    var iter__4292__auto__ = function(map__4359, map__4359__$1, keywordize_keys, keyfn) {
                      return function cljs$core$thisfn_$_iter__4362(s__4363) {
                        return new cljs.core.LazySeq(null, function(map__4359, map__4359__$1, keywordize_keys, keyfn) {
                          return function() {
                            var s__4363__$1 = s__4363;
                            while (true) {
                              var temp__4657__auto__ = cljs.core.seq(s__4363__$1);
                              if (temp__4657__auto__) {
                                var s__4363__$2 = temp__4657__auto__;
                                if (cljs.core.chunked_seq_QMARK_(s__4363__$2)) {
                                  var c__4290__auto__ = cljs.core.chunk_first(s__4363__$2);
                                  var size__4291__auto__ = cljs.core.count(c__4290__auto__);
                                  var b__4365 = cljs.core.chunk_buffer(size__4291__auto__);
                                  if (function() {
                                    var i__4364 = 0;
                                    while (true) {
                                      if (i__4364 < size__4291__auto__) {
                                        var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4290__auto__, i__4364);
                                        cljs.core.chunk_append(b__4365, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                        var G__4370 = i__4364 + 1;
                                        i__4364 = G__4370;
                                        continue;
                                      } else {
                                        return true;
                                      }
                                      break;
                                    }
                                  }()) {
                                    return cljs.core.chunk_cons(cljs.core.chunk(b__4365), cljs$core$thisfn_$_iter__4362(cljs.core.chunk_rest(s__4363__$2)));
                                  } else {
                                    return cljs.core.chunk_cons(cljs.core.chunk(b__4365), null);
                                  }
                                } else {
                                  var k = cljs.core.first(s__4363__$2);
                                  return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__4362(cljs.core.rest(s__4363__$2)));
                                }
                              } else {
                                return null;
                              }
                              break;
                            }
                          };
                        }(map__4359, map__4359__$1, keywordize_keys, keyfn), null, null);
                      };
                    }(map__4359, map__4359__$1, keywordize_keys, keyfn);
                    return iter__4292__auto__(cljs.core.js_keys(x__$1));
                  }());
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4359, map__4359__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq4356) {
  var G__4357 = cljs.core.first(seq4356);
  var seq4356__$1 = cljs.core.next(seq4356);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4357, seq4356__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__4371__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__4371 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4372__i = 0, G__4372__a = new Array(arguments.length - 0);
          while (G__4372__i < G__4372__a.length) {
            G__4372__a[G__4372__i] = arguments[G__4372__i + 0];
            ++G__4372__i;
          }
          args = new cljs.core.IndexedSeq(G__4372__a, 0, null);
        }
        return G__4371__delegate.call(this, args);
      };
      G__4371.cljs$lang$maxFixedArity = 0;
      G__4371.cljs$lang$applyTo = function(arglist__4373) {
        var args = cljs.core.seq(arglist__4373);
        return G__4371__delegate(args);
      };
      G__4371.cljs$core$IFn$_invoke$arity$variadic = G__4371__delegate;
      return G__4371;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__4377 = arguments.length;
  switch(G__4377) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4514__auto__ = [];
      var len__4499__auto___4379 = arguments.length;
      var i__4500__auto___4380 = 0;
      while (true) {
        if (i__4500__auto___4380 < len__4499__auto___4379) {
          args_arr__4514__auto__.push(arguments[i__4500__auto___4380]);
          var G__4381 = i__4500__auto___4380 + 1;
          i__4500__auto___4380 = G__4381;
          continue;
        } else {
        }
        break;
      }
      var argseq__4515__auto__ = new cljs.core.IndexedSeq(args_arr__4514__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4515__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__4382 = ret;
      f = G__4382;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq4375) {
  var G__4376 = cljs.core.first(seq4375);
  var seq4375__$1 = cljs.core.next(seq4375);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4376, seq4375__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__4384 = arguments.length;
  switch(G__4384) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__4386 = Math.random() * n;
  return Math.floor(G__4386);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4389 = arguments.length;
  var i__4500__auto___4390 = 0;
  while (true) {
    if (i__4500__auto___4390 < len__4499__auto___4389) {
      args__4502__auto__.push(arguments[i__4500__auto___4390]);
      var G__4391 = i__4500__auto___4390 + 1;
      i__4500__auto___4390 = G__4391;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq4387) {
  var G__4388 = cljs.core.first(seq4387);
  var seq4387__$1 = cljs.core.next(seq4387);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4388, seq4387__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__4393 = arguments.length;
  switch(G__4393) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__3922__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    var or__3922__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__4396 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__4396.cljs$core$IFn$_invoke$arity$1 ? fexpr__4396.cljs$core$IFn$_invoke$arity$1(child) : fexpr__4396.call(null, child);
    }(), parent);
    if (or__3922__auto____$1) {
      return or__3922__auto____$1;
    } else {
      var and__3911__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__3911__auto__) {
        var and__3911__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__3911__auto____$1) {
          var and__3911__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__3911__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__4398 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__4399 = i + 1;
                ret = G__4398;
                i = G__4399;
                continue;
              }
              break;
            }
          } else {
            return and__3911__auto____$2;
          }
        } else {
          return and__3911__auto____$1;
        }
      } else {
        return and__3911__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__4401 = arguments.length;
  switch(G__4401) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__4404 = arguments.length;
  switch(G__4404) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__4407 = arguments.length;
  switch(G__4407) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__4410 = arguments.length;
  switch(G__4410) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__3922__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__4416 = arguments.length;
  switch(G__4416) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__4412_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__4412_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4412_SHARP_), cljs.core.second(p1__4412_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__4413_SHARP_, p2__4414_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__4413_SHARP_, p2__4414_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__4418 = cljs.core.deref(prefer_table);
    return fexpr__4418.cljs$core$IFn$_invoke$arity$1 ? fexpr__4418.cljs$core$IFn$_invoke$arity$1(x) : fexpr__4418.call(null, x);
  }();
  var or__3922__auto__ = cljs.core.truth_(function() {
    var and__3911__auto__ = xprefs;
    if (cljs.core.truth_(and__3911__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__3911__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    var or__3922__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__4422 = x;
            var G__4423 = cljs.core.first(ps);
            var G__4424 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4422, G__4423, G__4424) : cljs.core.prefers_STAR_.call(null, G__4422, G__4423, G__4424);
          }())) {
          } else {
          }
          var G__4431 = cljs.core.rest(ps);
          ps = G__4431;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3922__auto____$1)) {
      return or__3922__auto____$1;
    } else {
      var or__3922__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__4428 = cljs.core.first(ps);
              var G__4429 = y;
              var G__4430 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4428, G__4429, G__4430) : cljs.core.prefers_STAR_.call(null, G__4428, G__4429, G__4430);
            }())) {
            } else {
            }
            var G__4432 = cljs.core.rest(ps);
            ps = G__4432;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3922__auto____$2)) {
        return or__3922__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__3922__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__4433) {
    var vec__4434 = p__4433;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4434, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4434, 1, null);
    var e = vec__4434;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3922__auto__ = be == null;
        if (or__3922__auto__) {
          return or__3922__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy));
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy)))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__4655__auto__ = function() {
      var and__3911__auto__ = best_entry == null;
      if (and__3911__auto__) {
        var fexpr__4438 = cljs.core.deref(method_table);
        return fexpr__4438.cljs$core$IFn$_invoke$arity$1 ? fexpr__4438.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__4438.call(null, default_dispatch_val);
      } else {
        return and__3911__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var entry = temp__4655__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._reset[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto__.call(null, mf);
    } else {
      var m__4212__auto____$1 = cljs.core._reset["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._add_method[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4212__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4212__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4212__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._remove_method[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4212__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4212__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4212__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._prefer_method[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4212__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4212__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4212__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._get_method[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4212__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4212__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4212__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._methods[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto__.call(null, mf);
    } else {
      var m__4212__auto____$1 = cljs.core._methods["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._prefers[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto__.call(null, mf);
    } else {
      var m__4212__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto__.call(null, mf);
    } else {
      var m__4212__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4211__auto__ = mf == null ? null : mf;
    var m__4212__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto__.call(null, mf);
    } else {
      var m__4212__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4212__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4212__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__4441 = null;
  var G__4441__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__4441__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__4441__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__4441__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__4441__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__4441__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__4441__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__4441__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__4441__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__4441__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__4441__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__4441__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__4441__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__4441__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__4441__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__4441__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__4441__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__4441__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__4441__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__4441__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__4441__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__4441__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__4441 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__4441__1.call(this, self__);
      case 2:
        return G__4441__2.call(this, self__, a);
      case 3:
        return G__4441__3.call(this, self__, a, b);
      case 4:
        return G__4441__4.call(this, self__, a, b, c);
      case 5:
        return G__4441__5.call(this, self__, a, b, c, d);
      case 6:
        return G__4441__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__4441__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__4441__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__4441__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__4441__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__4441__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__4441__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__4441__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__4441__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__4441__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__4441__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__4441__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__4441__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__4441__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__4441__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__4441__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__4441__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4441.cljs$core$IFn$_invoke$arity$1 = G__4441__1;
  G__4441.cljs$core$IFn$_invoke$arity$2 = G__4441__2;
  G__4441.cljs$core$IFn$_invoke$arity$3 = G__4441__3;
  G__4441.cljs$core$IFn$_invoke$arity$4 = G__4441__4;
  G__4441.cljs$core$IFn$_invoke$arity$5 = G__4441__5;
  G__4441.cljs$core$IFn$_invoke$arity$6 = G__4441__6;
  G__4441.cljs$core$IFn$_invoke$arity$7 = G__4441__7;
  G__4441.cljs$core$IFn$_invoke$arity$8 = G__4441__8;
  G__4441.cljs$core$IFn$_invoke$arity$9 = G__4441__9;
  G__4441.cljs$core$IFn$_invoke$arity$10 = G__4441__10;
  G__4441.cljs$core$IFn$_invoke$arity$11 = G__4441__11;
  G__4441.cljs$core$IFn$_invoke$arity$12 = G__4441__12;
  G__4441.cljs$core$IFn$_invoke$arity$13 = G__4441__13;
  G__4441.cljs$core$IFn$_invoke$arity$14 = G__4441__14;
  G__4441.cljs$core$IFn$_invoke$arity$15 = G__4441__15;
  G__4441.cljs$core$IFn$_invoke$arity$16 = G__4441__16;
  G__4441.cljs$core$IFn$_invoke$arity$17 = G__4441__17;
  G__4441.cljs$core$IFn$_invoke$arity$18 = G__4441__18;
  G__4441.cljs$core$IFn$_invoke$arity$19 = G__4441__19;
  G__4441.cljs$core$IFn$_invoke$arity$20 = G__4441__20;
  G__4441.cljs$core$IFn$_invoke$arity$21 = G__4441__21;
  G__4441.cljs$core$IFn$_invoke$arity$22 = G__4441__22;
  return G__4441;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args4439) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4439)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = function() {
    var fexpr__4440 = cljs.core.deref(self__.method_cache);
    return fexpr__4440.cljs$core$IFn$_invoke$arity$1 ? fexpr__4440.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__4440.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__4442 = self__.uuid;
  var G__4443 = other.uuid;
  return goog.array.defaultCompare(G__4442, G__4443);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__4446 = arguments.length;
  switch(G__4446) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), null, new cljs.core.Symbol(null, "finally", 
  "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), 
  null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", 
  "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__4448 = v;
  var G__4448__$1 = G__4448 instanceof cljs.core.Keyword ? G__4448.fqn : null;
  switch(G__4448__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4450_SHARP_, p2__4451_SHARP_) {
      goog.object.set(p1__4450_SHARP_, p2__4451_SHARP_, true);
      return p1__4450_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__4453 = cljs.core.next(ks__$1);
          var G__4454 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var G__4452 = ret;
            if (!(ret === "")) {
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4452), "|"].join("");
            } else {
              return G__4452;
            }
          }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__4453;
          ret = G__4454;
          continue;
        } else {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_4455 = 0;
  while (true) {
    if (i_4455 < name.length) {
      var c_4456 = name.charAt(i_4455);
      var sub_4457 = goog.object.get(cljs.core.CHAR_MAP, c_4456);
      if (!(sub_4457 == null)) {
        sb.append(sub_4457);
      } else {
        sb.append(c_4456);
      }
      var G__4458 = i_4455 + 1;
      i_4455 = G__4458;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE_), "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__4459 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4459, 0, null);
      var G__4462 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__4463 = r.lastIndex;
      ret = G__4462;
      last_match_end = G__4463;
      continue;
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret), cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__4465 = function() {
    var name_SINGLEQUOTE_ = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__4464 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__4464.cljs$core$IFn$_invoke$arity$1 ? fexpr__4464.cljs$core$IFn$_invoke$arity$1(G__4465) : fexpr__4464.call(null, G__4465);
};
if (typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__4466 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4467 = null;
    var count__4468 = 0;
    var i__4469 = 0;
    while (true) {
      if (i__4469 < count__4468) {
        var tap = chunk__4467.cljs$core$IIndexed$_nth$arity$2(null, i__4469);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4470) {
          if (e4470 instanceof Error) {
            var ex_4472 = e4470;
          } else {
            throw e4470;
          }
        }
        var G__4473 = seq__4466;
        var G__4474 = chunk__4467;
        var G__4475 = count__4468;
        var G__4476 = i__4469 + 1;
        seq__4466 = G__4473;
        chunk__4467 = G__4474;
        count__4468 = G__4475;
        i__4469 = G__4476;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq(seq__4466);
        if (temp__4657__auto__) {
          var seq__4466__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4466__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first(seq__4466__$1);
            var G__4477 = cljs.core.chunk_rest(seq__4466__$1);
            var G__4478 = c__4319__auto__;
            var G__4479 = cljs.core.count(c__4319__auto__);
            var G__4480 = 0;
            seq__4466 = G__4477;
            chunk__4467 = G__4478;
            count__4468 = G__4479;
            i__4469 = G__4480;
            continue;
          } else {
            var tap = cljs.core.first(seq__4466__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4471) {
              if (e4471 instanceof Error) {
                var ex_4481 = e4471;
              } else {
                throw e4471;
              }
            }
            var G__4482 = cljs.core.next(seq__4466__$1);
            var G__4483 = null;
            var G__4484 = 0;
            var G__4485 = 0;
            seq__4466 = G__4482;
            chunk__4467 = G__4483;
            count__4468 = G__4484;
            i__4469 = G__4485;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__4466 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4467 = null;
    var count__4468 = 0;
    var i__4469 = 0;
    while (true) {
      if (i__4469 < count__4468) {
        var tap = chunk__4467.cljs$core$IIndexed$_nth$arity$2(null, i__4469);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4470) {
          if (e4470 instanceof Error) {
            var ex_4486 = e4470;
          } else {
            throw e4470;
          }
        }
        var G__4487 = seq__4466;
        var G__4488 = chunk__4467;
        var G__4489 = count__4468;
        var G__4490 = i__4469 + 1;
        seq__4466 = G__4487;
        chunk__4467 = G__4488;
        count__4468 = G__4489;
        i__4469 = G__4490;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq(seq__4466);
        if (temp__4657__auto__) {
          var seq__4466__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4466__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first(seq__4466__$1);
            var G__4491 = cljs.core.chunk_rest(seq__4466__$1);
            var G__4492 = c__4319__auto__;
            var G__4493 = cljs.core.count(c__4319__auto__);
            var G__4494 = 0;
            seq__4466 = G__4491;
            chunk__4467 = G__4492;
            count__4468 = G__4493;
            i__4469 = G__4494;
            continue;
          } else {
            var tap = cljs.core.first(seq__4466__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4471) {
              if (e4471 instanceof Error) {
                var ex_4495 = e4471;
              } else {
                throw e4471;
              }
            }
            var G__4496 = cljs.core.next(seq__4466__$1);
            var G__4497 = null;
            var G__4498 = 0;
            var G__4499 = 0;
            seq__4466 = G__4496;
            chunk__4467 = G__4497;
            count__4468 = G__4498;
            i__4469 = G__4499;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write(writer__4162__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__4502 = function() {
          var G__4500 = ctxt;
          var G__4501 = cljs.core.first(xs);
          return goog.object.get(G__4500, G__4501);
        }();
        var G__4503 = cljs.core.next(xs);
        ctxt = G__4502;
        xs = G__4503;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__4504 = cljs.core._STAR_target_STAR_;
  switch(G__4504) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__3911__auto__ = ctxt;
              if (cljs.core.truth_(and__3911__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__3911__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e4505) {
            if (e4505 instanceof ReferenceError) {
              var e = e4505;
              return null;
            } else {
              throw e4505;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__4508 = arguments.length;
  switch(G__4508) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join("");
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_str), "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.out.println(s);
        };
      }(system));
      return cljs.core.set_print_err_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.error.println(s);
        };
      }(system));
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("goog.debug.errorcontext");
goog.debug.errorcontext.addErrorContext = function(err, contextKey, contextValue) {
  if (!err[goog.debug.errorcontext.CONTEXT_KEY_]) {
    err[goog.debug.errorcontext.CONTEXT_KEY_] = {};
  }
  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] = contextValue;
};
goog.debug.errorcontext.getErrorContext = function(err) {
  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};
};
goog.debug.errorcontext.CONTEXT_KEY_ = "__closure__error__context__984382";
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.debug.errorcontext");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.define("goog.debug.FORCE_SLOPPY_STACKS", false);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var uidsToCleanup = [];
  var ancestorUids = {};
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (!goog.hasUid(obj)) {
                  uidsToCleanup.push(obj);
                }
                var uid = goog.getUid(obj);
                if (ancestorUids[uid]) {
                  str.push("*** reference loop detected (id\x3d" + uid + ") ***");
                } else {
                  ancestorUids[uid] = true;
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                  delete ancestorUids[uid];
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  for (var i = 0; i < uidsToCleanup.length; i++) {
    goog.removeUid(uidsToCleanup[i]);
  }
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0; i < arr.length; i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return {"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return {"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (!(err instanceof Error)) {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.enhanceErrorWithContext = function(err, opt_context) {
  var error = goog.debug.enhanceError(err);
  if (opt_context) {
    for (var key in opt_context) {
      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);
    }
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(fn) {
  var stack;
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var contextFn = fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0; args && i < args.length; i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i]);
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1000);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i]; i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  var console = goog.global["console"];
  if (console && console["timeStamp"]) {
    console["timeStamp"](msg);
  }
  var msWriteProfilerMark = goog.global["msWriteProfilerMark"];
  if (msWriteProfilerMark) {
    msWriteProfilerMark(msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_);
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler; handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler; handler = this.handlers_[i]; i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_;
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.forwardDeclare("goog.net.xpc.CrossPageChannel");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.Thenable");
goog.forwardDeclare("goog.Promise");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  ctor.prototype["then"] = ctor.prototype.then;
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0; i < monitors.length; i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.useSetImmediate_ = function() {
  if (!goog.global.Window || !goog.global.Window.prototype) {
    return true;
  }
  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {
    return true;
  }
  return false;
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(String(goog.dom.TagName.IFRAME));
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(String(goog.dom.TagName.SCRIPT))) {
    return function(cb) {
      var script = document.createElement(String(goog.dom.TagName.SCRIPT));
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (String(goog.global.Promise).indexOf("[native code]") != -1) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_; entry; entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this === x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = value;
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this; promise; promise = promise.parent_) {
      for (var i = this.currentStep_; i >= 0; i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this; p && p.hadUnhandledRejection_; p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.creationStack;
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    goog.isDef(opt_scope) ? callback.call(opt_scope) : callback();
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length; i < len; ++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.scope(function() {
  goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
  goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
  goog.global["navigator"]["msMaxTouchPoints"]), PASSIVE_EVENTS:purify(function() {
    if (!goog.global.addEventListener || !Object.defineProperty) {
      return false;
    }
    var passive = false;
    var options = Object.defineProperty({}, "passive", {get:function() {
      passive = true;
    }});
    goog.global.addEventListener("test", goog.nullFunction, options);
    goog.global.removeEventListener("test", goog.nullFunction, options);
    return passive;
  })};
  function purify(fn) {
    return {valueOf:fn}.valueOf();
  }
});
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTIONCHANGE:"selectionchange", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? 
"focusout" : "DOMFocusOut", CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DEVICEMOTION:"devicemotion", DEVICEORIENTATION:"deviceorientation", 
DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", CANPLAY:"canplay", CANPLAYTHROUGH:"canplaythrough", DURATIONCHANGE:"durationchange", EMPTIED:"emptied", ENDED:"ended", LOADEDDATA:"loadeddata", LOADEDMETADATA:"loadedmetadata", PAUSE:"pause", PLAY:"play", PLAYING:"playing", RATECHANGE:"ratechange", SEEKED:"seeked", SEEKING:"seeking", 
STALLED:"stalled", SUSPEND:"suspend", TIMEUPDATE:"timeupdate", VOLUMECHANGE:"volumechange", WAITING:"waiting", SOURCEOPEN:"sourceopen", SOURCEENDED:"sourceended", SOURCECLOSED:"sourceclosed", ABORT:"abort", UPDATE:"update", UPDATESTART:"updatestart", UPDATEEND:"updateend", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", 
MESSAGE:"message", CONNECT:"connect", INSTALL:"install", ACTIVATE:"activate", FETCH:"fetch", FOREIGNFETCH:"foreignfetch", MESSAGEERROR:"messageerror", STATECHANGE:"statechange", UPDATEFOUND:"updatefound", CONTROLLERCHANGE:"controllerchange", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), 
POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", 
MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:goog.userAgent.IE ? "textinput" : "textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", 
BEFOREINPUT:"beforeinput", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", 
DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.key = "";
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.key = e.key || "";
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.forwardDeclare("goog.events.EventLike");
goog.forwardDeclare("goog.events.EventTarget");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1e6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0; i < listenerArray.length; i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0; i < listenerArray.length; ++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0; i < listenerArray.length; ++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0; i < listenerArray.length; ++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1e6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_options, opt_handler) {
  if (opt_options && opt_options.once) {
    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);
  }
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listen(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listen(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, false, opt_options, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_options, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, capture, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {
      opt_options = capture;
    }
    if (opt_options === undefined) {
      opt_options = false;
    }
    src.addEventListener(type.toString(), proxy, opt_options);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listenOnce(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, true, opt_options, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, listener, capture, opt_handler);
  }
  if (!src) {
    return false;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0; i < listeners.length; ++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_(obj);
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = type;
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_(obj);
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0; i < listenerArray.length; i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget; parent; parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1; !evt.propagationStopped_ && i >= 0; i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || e.returnValue == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1e9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1000;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0; i < listenerArray.length; ++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || e;
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0; i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.json.hybrid");
goog.require("goog.asserts");
goog.require("goog.json");
goog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(obj) {
  if (goog.global.JSON) {
    try {
      return goog.global.JSON.stringify(obj);
    } catch (e) {
    }
  }
  return goog.json.serialize(obj);
};
goog.json.hybrid.parse_ = function(jsonString, fallbackParser) {
  if (goog.global.JSON) {
    try {
      var obj = goog.global.JSON.parse(jsonString);
      goog.asserts.assertObject(obj);
      return obj;
    } catch (e) {
    }
  }
  var obj = fallbackParser(jsonString);
  goog.asserts.assert(obj);
  return obj;
};
goog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(jsonString) {
  return goog.json.hybrid.parse_(jsonString, goog.json.parse);
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    case goog.net.HttpStatus.CREATED:
    case goog.net.HttpStatus.ACCEPTED:
    case goog.net.HttpStatus.NO_CONTENT:
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    case goog.net.HttpStatus.NOT_MODIFIED:
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_;
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json.hybrid");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.progressEventsEnabled_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.CONTENT_TRANSFER_ENCODING = "Content-Transfer-Encoding";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {
  this.progressEventsEnabled_ = enabled;
};
goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
  return this.progressEventsEnabled_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  if (this.getProgressEventsEnabled() && "onprogress" in this.xhr_) {
    this.xhr_.onprogress = goog.bind(function(e) {
      this.onProgressHandler_(e, true);
    }, this);
    if (this.xhr_.upload) {
      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);
    }
  }
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if ("withCredentials" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
  return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total};
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return !!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.hybrid.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  if (!this.xhr_ || !this.isComplete()) {
    return undefined;
  }
  var value = this.xhr_.getResponseHeader(key);
  return goog.isNull(value) ? undefined : value;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0; i < headersArray.length; i++) {
    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {
  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;
};
goog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {
  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addFinally = function(f, opt_scope) {
  return this.addCallbacks(f, function(err) {
    var result = f.call(this, err);
    if (!goog.isDef(result)) {
      throw err;
    }
    return result;
  }, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res) || typeof goog.global["Promise"] === "function" && res instanceof goog.global["Promise"]) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.async.Delay.base(this, "constructor");
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.base(this, "disposeInternal");
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.startIfNotActive = function(opt_interval) {
  if (!this.isActive()) {
    this.start(opt_interval);
  }
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listen_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, options, scope) {
  var self = this;
  return self.listen_(src, type, fn, options, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0; i < type.length; i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || self.handleEvent, opt_options || false, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listenOnce_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  var self = this;
  return self.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || self.handleEvent, opt_options, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.listen(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    var listener = goog.events.getListener(src, type, opt_fn || self.handleEvent, capture, opt_scope || self.handler_ || self);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete self.keys_[listener.key];
    }
  }
  return self;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.unlisten(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, function(listenerObj, key) {
    if (this.keys_.hasOwnProperty(key)) {
      goog.events.unlistenByKey(listenerObj);
    }
  }, this);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return {callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[String(this.transportType)] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = payload.split(DirectTransport.MESSAGE_DELIMITER_);
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return {"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetupCb_;
goog.net.xpc.FrameElementMethodTransport.prototype.outgoing_;
goog.net.xpc.FrameElementMethodTransport.prototype.iframeElm_;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.prototype.ackReceiver_;
goog.net.xpc.IframePollingTransport.prototype.ackSender_;
goog.net.xpc.IframePollingTransport.prototype.ackIframeElm_;
goog.net.xpc.IframePollingTransport.prototype.ackWinObj_;
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresentCb_;
goog.net.xpc.IframePollingTransport.prototype.deliveryQueue_;
goog.net.xpc.IframePollingTransport.prototype.msgIframeElm_;
goog.net.xpc.IframePollingTransport.prototype.msgReceiver_;
goog.net.xpc.IframePollingTransport.prototype.msgSender_;
goog.net.xpc.IframePollingTransport.prototype.msgWinObj_;
goog.net.xpc.IframePollingTransport.prototype.rcvdConnectionSetupAck_;
goog.net.xpc.IframePollingTransport.prototype.sentConnectionSetupAck_;
goog.net.xpc.IframePollingTransport.prototype.parts_;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return !this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return {};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement(goog.dom.TagName.IFRAME);
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0; i < length; i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m; i < this.deliveryQueue_.length; i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1000;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0; receiver = receivers[i]; i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  if (!/^https?:\/\//.test(url)) {
    throw Error("URL " + url + " is invalid");
  }
  this.sanitizedSendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sanitizedSendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1000;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3000;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header;
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0; startIndex < encodedLen; fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement(String(goog.dom.TagName.DIV));
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.createIframe(null, null, {"onload":goog.string.Const.from("this.xpcOnload()"), "sandbox":null}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement(String(goog.dom.TagName.IFRAME));
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.prototype.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2) && staleChannel.isMessageOriginAcceptable(msgEvt.getBrowserEvent().origin)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField; uriField = goog.net.xpc.UriCfgFields[i]; i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return !!this.peerWindowObject_ && !this.peerWindowObject_.closed;
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported(this.peerWindowObject_)) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement(goog.dom.TagName.IFRAME);
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return iframeElm;
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    this.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
  }
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed() || this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Channel closed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(opt_origin)) || goog.string.isEmptyOrWhitespace(goog.string.makeSafe(peerHostname)) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.reconnectTimer_ = null;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1000;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1000;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return !!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.getBufferedAmount = function() {
  return this.webSocket_.bufferedAmount;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1000);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = event.data;
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = event.data;
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
clojure.browser.event.IEventType = function() {
};
clojure.browser.event.event_types = function clojure$browser$event$event_types(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$event$IEventType$event_types$arity$1 == null)) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = clojure.browser.event.event_types["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
      }
    }
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__5664) {
      var vec__5665 = p__5664;
      var k = cljs.core.nth.call(null, vec__5665, 0, null);
      var v = cljs.core.nth.call(null, vec__5665, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__5668) {
        var vec__5669 = p__5668;
        var k = cljs.core.nth.call(null, vec__5669, 0, null);
        var v = cljs.core.nth.call(null, vec__5669, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function clojure$browser$event$listen(var_args) {
  var G__5673 = arguments.length;
  switch(G__5673) {
    case 3:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen.call(null, src, type, fn, false);
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen.cljs$lang$maxFixedArity = 4;
clojure.browser.event.listen_once = function clojure$browser$event$listen_once(var_args) {
  var G__5676 = arguments.length;
  switch(G__5676) {
    case 3:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen_once.call(null, src, type, fn, false);
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen_once.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten = function clojure$browser$event$unlisten(var_args) {
  var G__5679 = arguments.length;
  switch(G__5679) {
    case 3:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.unlisten.call(null, src, type, fn, false);
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.unlisten.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten_by_key = function clojure$browser$event$unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function clojure$browser$event$dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function clojure$browser$event$expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function clojure$browser$event$fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function clojure$browser$event$total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function clojure$browser$event$get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function clojure$browser$event$all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function clojure$browser$event$unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function clojure$browser$event$has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function clojure$browser$event$remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("goog.json");
goog.require("goog.object");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.net.WebSocket");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
clojure.browser.net._STAR_timeout_STAR_ = 10000;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__5683) {
  var vec__5684 = p__5683;
  var k = cljs.core.nth.call(null, vec__5684, 0, null);
  var v = cljs.core.nth.call(null, vec__5684, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
};
clojure.browser.net.connect = function clojure$browser$net$connect(var_args) {
  var G__5688 = arguments.length;
  switch(G__5688) {
    case 1:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.connect[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.connect["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2 = function(this$, opt1) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.connect[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt1);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.connect["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt1);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3 = function(this$, opt1, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.connect[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt1, opt2);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.connect["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt1, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4 = function(this$, opt1, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.connect[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt1, opt2, opt3);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.connect["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt1, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$lang$maxFixedArity = 4;
clojure.browser.net.transmit = function clojure$browser$net$transmit(var_args) {
  var G__5690 = arguments.length;
  switch(G__5690) {
    case 2:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2 = function(this$, opt) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.transmit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3 = function(this$, opt, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt, opt2);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.transmit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4 = function(this$, opt, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt, opt2, opt3);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.transmit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5 = function(this$, opt, opt2, opt3, opt4) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$5 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt, opt2, opt3, opt4);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.transmit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt, opt2, opt3, opt4);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6 = function(this$, opt, opt2, opt3, opt4, opt5) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$6 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.transmit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, opt, opt2, opt3, opt4, opt5);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$lang$maxFixedArity = 6;
clojure.browser.net.close = function clojure$browser$net$close(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$close$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.close[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.close["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
      }
    }
  }
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__5693) {
      var vec__5694 = p__5693;
      var k = cljs.core.nth.call(null, vec__5694, 0, null);
      var v = cljs.core.nth.call(null, vec__5694, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__5697) {
  var vec__5698 = p__5697;
  var k = cljs.core.nth.call(null, vec__5698, 0, null);
  var v = cljs.core.nth.call(null, vec__5698, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function clojure$browser$net$xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
};
clojure.browser.net.register_service = function clojure$browser$net$register_service(var_args) {
  var G__5702 = arguments.length;
  switch(G__5702) {
    case 3:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3 = function(this$, service_name, fn) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, service_name, fn);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.register_service["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, service_name, fn);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, service_name, fn, encode_json_QMARK_);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.register_service["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, service_name, fn, encode_json_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  }
};
clojure.browser.net.register_service.cljs$lang$maxFixedArity = 4;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
clojure.browser.net.xpc_connection = function clojure$browser$net$xpc_connection(var_args) {
  var G__5705 = arguments.length;
  switch(G__5705) {
    case 0:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  var temp__4657__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
  if (cljs.core.truth_(temp__4657__auto__)) {
    var config = temp__4657__auto__;
    return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
  } else {
    return null;
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1 = function(config) {
  return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__5706) {
    var vec__5707 = p__5706;
    var k = cljs.core.nth.call(null, vec__5707, 0, null);
    var v = cljs.core.nth.call(null, vec__5707, 1, null);
    var temp__4655__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var field = temp__4655__auto__;
      var G__5710 = sum;
      goog.object.set(G__5710, field, v);
      return G__5710;
    } else {
      return sum;
    }
  }, {}, config));
};
clojure.browser.net.xpc_connection.cljs$lang$maxFixedArity = 1;
clojure.browser.net.IWebSocket = function() {
};
clojure.browser.net.open_QMARK_ = function clojure$browser$net$open_QMARK_(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 == null)) {
    return this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = clojure.browser.net.open_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = clojure.browser.net.open_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
      }
    }
  }
};
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__5714) {
      var vec__5715 = p__5714;
      var k = cljs.core.nth.call(null, vec__5715, 0, null);
      var v = cljs.core.nth.call(null, vec__5715, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
clojure.browser.net.websocket_connection = function clojure$browser$net$websocket_connection(var_args) {
  var G__5719 = arguments.length;
  switch(G__5719) {
    case 0:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  return clojure.browser.net.websocket_connection.call(null, null, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1 = function(auto_reconnect_QMARK_) {
  return clojure.browser.net.websocket_connection.call(null, auto_reconnect_QMARK_, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
  return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
};
clojure.browser.net.websocket_connection.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__4520 = "g";
    var G__4520__$1 = cljs.core.truth_(re.ignoreCase) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4520), "i"].join("") : G__4520;
    var G__4520__$2 = cljs.core.truth_(re.multiline) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4520__$1), "m"].join("") : G__4520__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4520__$2), "u"].join("");
    } else {
      return G__4520__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__4521__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__4521 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__4522__i = 0, G__4522__a = new Array(arguments.length - 0);
        while (G__4522__i < G__4522__a.length) {
          G__4522__a[G__4522__i] = arguments[G__4522__i + 0];
          ++G__4522__i;
        }
        args = new cljs.core.IndexedSeq(G__4522__a, 0, null);
      }
      return G__4521__delegate.call(this, args);
    };
    G__4521.cljs$lang$maxFixedArity = 0;
    G__4521.cljs$lang$applyTo = function(arglist__4523) {
      var args = cljs.core.seq(arglist__4523);
      return G__4521__delegate(args);
    };
    G__4521.cljs$core$IFn$_invoke$arity$variadic = G__4521__delegate;
    return G__4521;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__4525 = arguments.length;
  switch(G__4525) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__4527 = sb.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1))].join(""));
      var G__4528 = cljs.core.next.call(null, coll__$1);
      sb = G__4527;
      coll__$1 = G__4528;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__4529 = sb;
      var G__4530 = coll__$2;
      sb = G__4529;
      coll__$1 = G__4530;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__4531 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__4531;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__4532 = cljs.core._EQ__EQ_;
    var expr__4533 = limit;
    if (cljs.core.truth_(pred__4532.call(null, 1, expr__4533))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__4532.call(null, 2, expr__4533))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__4536 = arguments.length;
  switch(G__4536) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str.cljs$core$IFn$_invoke$arity$1(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__4538 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__4539 = limit__$1 - 1;
          var G__4540 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__4538;
          limit__$1 = G__4539;
          parts = G__4540;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__4541 = index - 1;
        index = G__4541;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__4542 = index + 1;
      index = G__4542;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__4544 = arguments.length;
  switch(G__4544) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__4547 = arguments.length;
  switch(G__4547) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.map_entry_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, inner, form)));
    } else {
      if (cljs.core.seq_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
      } else {
        if (cljs.core.record_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
            return cljs.core.conj.call(null, r, inner.call(null, x));
          }, form, form));
        } else {
          if (cljs.core.coll_QMARK_.call(null, form)) {
            return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
          } else {
            return outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__4551) {
    var vec__4552 = p__4551;
    var k = cljs.core.nth.call(null, vec__4552, 0, null);
    var v = cljs.core.nth.call(null, vec__4552, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__4555) {
    var vec__4556 = p__4555;
    var k = cljs.core.nth.call(null, vec__4556, 0, null);
    var v = cljs.core.nth.call(null, vec__4556, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.spec.gen.alpha");
goog.require("cljs.core");
goog.require("cljs.core");
cljs.spec.gen.alpha.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.spec.gen.alpha.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
cljs.spec.gen.alpha.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.spec.gen.alpha.LazyVar.cljs$lang$type = true;
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorStr = "cljs.spec.gen.alpha/LazyVar";
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.gen.alpha/LazyVar");
};
cljs.spec.gen.alpha.__GT_LazyVar = function cljs$spec$gen$alpha$__GT_LazyVar(f, cached) {
  return new cljs.spec.gen.alpha.LazyVar(f, cached);
};
cljs.spec.gen.alpha.quick_check_ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check.quick_check !== "undefined") {
    return clojure.test.check.quick_check;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.quick_check = function cljs$spec$gen$alpha$quick_check(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4612 = arguments.length;
  var i__4500__auto___4613 = 0;
  while (true) {
    if (i__4500__auto___4613 < len__4499__auto___4612) {
      args__4502__auto__.push(arguments[i__4500__auto___4613]);
      var G__4614 = i__4500__auto___4613 + 1;
      i__4500__auto___4613 = G__4614;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.quick_check_ref), args);
};
cljs.spec.gen.alpha.quick_check.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.quick_check.cljs$lang$applyTo = function(seq4611) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4611));
};
cljs.spec.gen.alpha.for_all_STAR__ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.properties.for_all_STAR_ !== "undefined") {
    return clojure.test.check.properties.for_all_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.for_all_STAR_ = function cljs$spec$gen$alpha$for_all_STAR_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4616 = arguments.length;
  var i__4500__auto___4617 = 0;
  while (true) {
    if (i__4500__auto___4617 < len__4499__auto___4616) {
      args__4502__auto__.push(arguments[i__4500__auto___4617]);
      var G__4618 = i__4500__auto___4617 + 1;
      i__4500__auto___4617 = G__4618;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.for_all_STAR__ref), args);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$applyTo = function(seq4615) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4615));
};
var g_QMARK__4619 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.generator_QMARK_ !== "undefined") {
    return clojure.test.check.generators.generator_QMARK_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null))), " never required"].join(""));
  }
}, null);
var g_4620 = new cljs.spec.gen.alpha.LazyVar(function(g_QMARK__4619) {
  return function() {
    if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.generate !== "undefined") {
      return clojure.test.check.generators.generate;
    } else {
      throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null))), " never required"].join(""));
    }
  };
}(g_QMARK__4619), null);
var mkg_4621 = new cljs.spec.gen.alpha.LazyVar(function(g_QMARK__4619, g_4620) {
  return function() {
    if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.__GT_Generator !== "undefined") {
      return clojure.test.check.generators.__GT_Generator;
    } else {
      throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null))), " never required"].join(""));
    }
  };
}(g_QMARK__4619, g_4620), null);
cljs.spec.gen.alpha.generator_QMARK_ = function(g_QMARK__4619, g_4620, mkg_4621) {
  return function cljs$spec$gen$alpha$generator_QMARK_(x) {
    return cljs.core.deref.call(null, g_QMARK__4619).call(null, x);
  };
}(g_QMARK__4619, g_4620, mkg_4621);
cljs.spec.gen.alpha.generator = function(g_QMARK__4619, g_4620, mkg_4621) {
  return function cljs$spec$gen$alpha$generator(gfn) {
    return cljs.core.deref.call(null, mkg_4621).call(null, gfn);
  };
}(g_QMARK__4619, g_4620, mkg_4621);
cljs.spec.gen.alpha.generate = function(g_QMARK__4619, g_4620, mkg_4621) {
  return function cljs$spec$gen$alpha$generate(generator) {
    return cljs.core.deref.call(null, g_4620).call(null, generator);
  };
}(g_QMARK__4619, g_4620, mkg_4621);
cljs.spec.gen.alpha.delay_impl = function cljs$spec$gen$alpha$delay_impl(gfnd) {
  return cljs.spec.gen.alpha.generator.call(null, function(rnd, size) {
    return (new cljs.core.Keyword(null, "gen", "gen", 142575302)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gfnd)).call(null, rnd, size);
  });
};
var g__4583__auto___4641 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.hash_map !== "undefined") {
    return clojure.test.check.generators.hash_map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.hash_map = function(g__4583__auto___4641) {
  return function cljs$spec$gen$alpha$hash_map(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4642 = arguments.length;
    var i__4500__auto___4643 = 0;
    while (true) {
      if (i__4500__auto___4643 < len__4499__auto___4642) {
        args__4502__auto__.push(arguments[i__4500__auto___4643]);
        var G__4644 = i__4500__auto___4643 + 1;
        i__4500__auto___4643 = G__4644;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4641);
cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4641) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4641), args);
  };
}(g__4583__auto___4641);
cljs.spec.gen.alpha.hash_map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.hash_map.cljs$lang$applyTo = function(g__4583__auto___4641) {
  return function(seq4622) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4622));
  };
}(g__4583__auto___4641);
var g__4583__auto___4645 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.list !== "undefined") {
    return clojure.test.check.generators.list;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.list = function(g__4583__auto___4645) {
  return function cljs$spec$gen$alpha$list(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4646 = arguments.length;
    var i__4500__auto___4647 = 0;
    while (true) {
      if (i__4500__auto___4647 < len__4499__auto___4646) {
        args__4502__auto__.push(arguments[i__4500__auto___4647]);
        var G__4648 = i__4500__auto___4647 + 1;
        i__4500__auto___4647 = G__4648;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4645);
cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4645) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4645), args);
  };
}(g__4583__auto___4645);
cljs.spec.gen.alpha.list.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.list.cljs$lang$applyTo = function(g__4583__auto___4645) {
  return function(seq4623) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4623));
  };
}(g__4583__auto___4645);
var g__4583__auto___4649 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.map !== "undefined") {
    return clojure.test.check.generators.map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.map = function(g__4583__auto___4649) {
  return function cljs$spec$gen$alpha$map(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4650 = arguments.length;
    var i__4500__auto___4651 = 0;
    while (true) {
      if (i__4500__auto___4651 < len__4499__auto___4650) {
        args__4502__auto__.push(arguments[i__4500__auto___4651]);
        var G__4652 = i__4500__auto___4651 + 1;
        i__4500__auto___4651 = G__4652;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4649);
cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4649) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4649), args);
  };
}(g__4583__auto___4649);
cljs.spec.gen.alpha.map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.map.cljs$lang$applyTo = function(g__4583__auto___4649) {
  return function(seq4624) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4624));
  };
}(g__4583__auto___4649);
var g__4583__auto___4653 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.not_empty !== "undefined") {
    return clojure.test.check.generators.not_empty;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.not_empty = function(g__4583__auto___4653) {
  return function cljs$spec$gen$alpha$not_empty(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4654 = arguments.length;
    var i__4500__auto___4655 = 0;
    while (true) {
      if (i__4500__auto___4655 < len__4499__auto___4654) {
        args__4502__auto__.push(arguments[i__4500__auto___4655]);
        var G__4656 = i__4500__auto___4655 + 1;
        i__4500__auto___4655 = G__4656;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4653);
cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4653) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4653), args);
  };
}(g__4583__auto___4653);
cljs.spec.gen.alpha.not_empty.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.not_empty.cljs$lang$applyTo = function(g__4583__auto___4653) {
  return function(seq4625) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4625));
  };
}(g__4583__auto___4653);
var g__4583__auto___4657 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.set !== "undefined") {
    return clojure.test.check.generators.set;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.set = function(g__4583__auto___4657) {
  return function cljs$spec$gen$alpha$set(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4658 = arguments.length;
    var i__4500__auto___4659 = 0;
    while (true) {
      if (i__4500__auto___4659 < len__4499__auto___4658) {
        args__4502__auto__.push(arguments[i__4500__auto___4659]);
        var G__4660 = i__4500__auto___4659 + 1;
        i__4500__auto___4659 = G__4660;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4657);
cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4657) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4657), args);
  };
}(g__4583__auto___4657);
cljs.spec.gen.alpha.set.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.set.cljs$lang$applyTo = function(g__4583__auto___4657) {
  return function(seq4626) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4626));
  };
}(g__4583__auto___4657);
var g__4583__auto___4661 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.vector !== "undefined") {
    return clojure.test.check.generators.vector;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector = function(g__4583__auto___4661) {
  return function cljs$spec$gen$alpha$vector(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4662 = arguments.length;
    var i__4500__auto___4663 = 0;
    while (true) {
      if (i__4500__auto___4663 < len__4499__auto___4662) {
        args__4502__auto__.push(arguments[i__4500__auto___4663]);
        var G__4664 = i__4500__auto___4663 + 1;
        i__4500__auto___4663 = G__4664;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4661);
cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4661) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4661), args);
  };
}(g__4583__auto___4661);
cljs.spec.gen.alpha.vector.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector.cljs$lang$applyTo = function(g__4583__auto___4661) {
  return function(seq4627) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4627));
  };
}(g__4583__auto___4661);
var g__4583__auto___4665 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.vector_distinct !== "undefined") {
    return clojure.test.check.generators.vector_distinct;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector_distinct = function(g__4583__auto___4665) {
  return function cljs$spec$gen$alpha$vector_distinct(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4666 = arguments.length;
    var i__4500__auto___4667 = 0;
    while (true) {
      if (i__4500__auto___4667 < len__4499__auto___4666) {
        args__4502__auto__.push(arguments[i__4500__auto___4667]);
        var G__4668 = i__4500__auto___4667 + 1;
        i__4500__auto___4667 = G__4668;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4665);
cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4665) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4665), args);
  };
}(g__4583__auto___4665);
cljs.spec.gen.alpha.vector_distinct.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector_distinct.cljs$lang$applyTo = function(g__4583__auto___4665) {
  return function(seq4628) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4628));
  };
}(g__4583__auto___4665);
var g__4583__auto___4669 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.fmap !== "undefined") {
    return clojure.test.check.generators.fmap;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.fmap = function(g__4583__auto___4669) {
  return function cljs$spec$gen$alpha$fmap(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4670 = arguments.length;
    var i__4500__auto___4671 = 0;
    while (true) {
      if (i__4500__auto___4671 < len__4499__auto___4670) {
        args__4502__auto__.push(arguments[i__4500__auto___4671]);
        var G__4672 = i__4500__auto___4671 + 1;
        i__4500__auto___4671 = G__4672;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4669);
cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4669) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4669), args);
  };
}(g__4583__auto___4669);
cljs.spec.gen.alpha.fmap.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.fmap.cljs$lang$applyTo = function(g__4583__auto___4669) {
  return function(seq4629) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4629));
  };
}(g__4583__auto___4669);
var g__4583__auto___4673 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.elements !== "undefined") {
    return clojure.test.check.generators.elements;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.elements = function(g__4583__auto___4673) {
  return function cljs$spec$gen$alpha$elements(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4674 = arguments.length;
    var i__4500__auto___4675 = 0;
    while (true) {
      if (i__4500__auto___4675 < len__4499__auto___4674) {
        args__4502__auto__.push(arguments[i__4500__auto___4675]);
        var G__4676 = i__4500__auto___4675 + 1;
        i__4500__auto___4675 = G__4676;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4673);
cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4673) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4673), args);
  };
}(g__4583__auto___4673);
cljs.spec.gen.alpha.elements.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.elements.cljs$lang$applyTo = function(g__4583__auto___4673) {
  return function(seq4630) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4630));
  };
}(g__4583__auto___4673);
var g__4583__auto___4677 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.bind !== "undefined") {
    return clojure.test.check.generators.bind;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.bind = function(g__4583__auto___4677) {
  return function cljs$spec$gen$alpha$bind(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4678 = arguments.length;
    var i__4500__auto___4679 = 0;
    while (true) {
      if (i__4500__auto___4679 < len__4499__auto___4678) {
        args__4502__auto__.push(arguments[i__4500__auto___4679]);
        var G__4680 = i__4500__auto___4679 + 1;
        i__4500__auto___4679 = G__4680;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4677);
cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4677) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4677), args);
  };
}(g__4583__auto___4677);
cljs.spec.gen.alpha.bind.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.bind.cljs$lang$applyTo = function(g__4583__auto___4677) {
  return function(seq4631) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4631));
  };
}(g__4583__auto___4677);
var g__4583__auto___4681 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.choose !== "undefined") {
    return clojure.test.check.generators.choose;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.choose = function(g__4583__auto___4681) {
  return function cljs$spec$gen$alpha$choose(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4682 = arguments.length;
    var i__4500__auto___4683 = 0;
    while (true) {
      if (i__4500__auto___4683 < len__4499__auto___4682) {
        args__4502__auto__.push(arguments[i__4500__auto___4683]);
        var G__4684 = i__4500__auto___4683 + 1;
        i__4500__auto___4683 = G__4684;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4681);
cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4681) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4681), args);
  };
}(g__4583__auto___4681);
cljs.spec.gen.alpha.choose.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.choose.cljs$lang$applyTo = function(g__4583__auto___4681) {
  return function(seq4632) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4632));
  };
}(g__4583__auto___4681);
var g__4583__auto___4685 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.one_of !== "undefined") {
    return clojure.test.check.generators.one_of;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.one_of = function(g__4583__auto___4685) {
  return function cljs$spec$gen$alpha$one_of(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4686 = arguments.length;
    var i__4500__auto___4687 = 0;
    while (true) {
      if (i__4500__auto___4687 < len__4499__auto___4686) {
        args__4502__auto__.push(arguments[i__4500__auto___4687]);
        var G__4688 = i__4500__auto___4687 + 1;
        i__4500__auto___4687 = G__4688;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4685);
cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4685) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4685), args);
  };
}(g__4583__auto___4685);
cljs.spec.gen.alpha.one_of.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.one_of.cljs$lang$applyTo = function(g__4583__auto___4685) {
  return function(seq4633) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4633));
  };
}(g__4583__auto___4685);
var g__4583__auto___4689 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.such_that !== "undefined") {
    return clojure.test.check.generators.such_that;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.such_that = function(g__4583__auto___4689) {
  return function cljs$spec$gen$alpha$such_that(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4690 = arguments.length;
    var i__4500__auto___4691 = 0;
    while (true) {
      if (i__4500__auto___4691 < len__4499__auto___4690) {
        args__4502__auto__.push(arguments[i__4500__auto___4691]);
        var G__4692 = i__4500__auto___4691 + 1;
        i__4500__auto___4691 = G__4692;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4689);
cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4689) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4689), args);
  };
}(g__4583__auto___4689);
cljs.spec.gen.alpha.such_that.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.such_that.cljs$lang$applyTo = function(g__4583__auto___4689) {
  return function(seq4634) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4634));
  };
}(g__4583__auto___4689);
var g__4583__auto___4693 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.tuple !== "undefined") {
    return clojure.test.check.generators.tuple;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.tuple = function(g__4583__auto___4693) {
  return function cljs$spec$gen$alpha$tuple(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4694 = arguments.length;
    var i__4500__auto___4695 = 0;
    while (true) {
      if (i__4500__auto___4695 < len__4499__auto___4694) {
        args__4502__auto__.push(arguments[i__4500__auto___4695]);
        var G__4696 = i__4500__auto___4695 + 1;
        i__4500__auto___4695 = G__4696;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4693);
cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4693) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4693), args);
  };
}(g__4583__auto___4693);
cljs.spec.gen.alpha.tuple.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.tuple.cljs$lang$applyTo = function(g__4583__auto___4693) {
  return function(seq4635) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4635));
  };
}(g__4583__auto___4693);
var g__4583__auto___4697 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.sample !== "undefined") {
    return clojure.test.check.generators.sample;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.sample = function(g__4583__auto___4697) {
  return function cljs$spec$gen$alpha$sample(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4698 = arguments.length;
    var i__4500__auto___4699 = 0;
    while (true) {
      if (i__4500__auto___4699 < len__4499__auto___4698) {
        args__4502__auto__.push(arguments[i__4500__auto___4699]);
        var G__4700 = i__4500__auto___4699 + 1;
        i__4500__auto___4699 = G__4700;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4697);
cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4697) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4697), args);
  };
}(g__4583__auto___4697);
cljs.spec.gen.alpha.sample.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.sample.cljs$lang$applyTo = function(g__4583__auto___4697) {
  return function(seq4636) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4636));
  };
}(g__4583__auto___4697);
var g__4583__auto___4701 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.return$ !== "undefined") {
    return clojure.test.check.generators.return$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.return$ = function(g__4583__auto___4701) {
  return function cljs$spec$gen$alpha$return(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4702 = arguments.length;
    var i__4500__auto___4703 = 0;
    while (true) {
      if (i__4500__auto___4703 < len__4499__auto___4702) {
        args__4502__auto__.push(arguments[i__4500__auto___4703]);
        var G__4704 = i__4500__auto___4703 + 1;
        i__4500__auto___4703 = G__4704;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4701);
cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4701) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4701), args);
  };
}(g__4583__auto___4701);
cljs.spec.gen.alpha.return$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.return$.cljs$lang$applyTo = function(g__4583__auto___4701) {
  return function(seq4637) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4637));
  };
}(g__4583__auto___4701);
var g__4583__auto___4705 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.large_integer_STAR_ !== "undefined") {
    return clojure.test.check.generators.large_integer_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer_STAR_ = function(g__4583__auto___4705) {
  return function cljs$spec$gen$alpha$large_integer_STAR_(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4706 = arguments.length;
    var i__4500__auto___4707 = 0;
    while (true) {
      if (i__4500__auto___4707 < len__4499__auto___4706) {
        args__4502__auto__.push(arguments[i__4500__auto___4707]);
        var G__4708 = i__4500__auto___4707 + 1;
        i__4500__auto___4707 = G__4708;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4705);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4705) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4705), args);
  };
}(g__4583__auto___4705);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$applyTo = function(g__4583__auto___4705) {
  return function(seq4638) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4638));
  };
}(g__4583__auto___4705);
var g__4583__auto___4709 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.double_STAR_ !== "undefined") {
    return clojure.test.check.generators.double_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double_STAR_ = function(g__4583__auto___4709) {
  return function cljs$spec$gen$alpha$double_STAR_(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4710 = arguments.length;
    var i__4500__auto___4711 = 0;
    while (true) {
      if (i__4500__auto___4711 < len__4499__auto___4710) {
        args__4502__auto__.push(arguments[i__4500__auto___4711]);
        var G__4712 = i__4500__auto___4711 + 1;
        i__4500__auto___4711 = G__4712;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4709);
cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4709) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4709), args);
  };
}(g__4583__auto___4709);
cljs.spec.gen.alpha.double_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double_STAR_.cljs$lang$applyTo = function(g__4583__auto___4709) {
  return function(seq4639) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4639));
  };
}(g__4583__auto___4709);
var g__4583__auto___4713 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.frequency !== "undefined") {
    return clojure.test.check.generators.frequency;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.frequency = function(g__4583__auto___4713) {
  return function cljs$spec$gen$alpha$frequency(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4714 = arguments.length;
    var i__4500__auto___4715 = 0;
    while (true) {
      if (i__4500__auto___4715 < len__4499__auto___4714) {
        args__4502__auto__.push(arguments[i__4500__auto___4715]);
        var G__4716 = i__4500__auto___4715 + 1;
        i__4500__auto___4715 = G__4716;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4583__auto___4713);
cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic = function(g__4583__auto___4713) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4583__auto___4713), args);
  };
}(g__4583__auto___4713);
cljs.spec.gen.alpha.frequency.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.frequency.cljs$lang$applyTo = function(g__4583__auto___4713) {
  return function(seq4640) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4640));
  };
}(g__4583__auto___4713);
var g__4596__auto___4738 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.any !== "undefined") {
    return clojure.test.check.generators.any;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any = function(g__4596__auto___4738) {
  return function cljs$spec$gen$alpha$any(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4739 = arguments.length;
    var i__4500__auto___4740 = 0;
    while (true) {
      if (i__4500__auto___4740 < len__4499__auto___4739) {
        args__4502__auto__.push(arguments[i__4500__auto___4740]);
        var G__4741 = i__4500__auto___4740 + 1;
        i__4500__auto___4740 = G__4741;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4738);
cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4738) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4738);
  };
}(g__4596__auto___4738);
cljs.spec.gen.alpha.any.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any.cljs$lang$applyTo = function(g__4596__auto___4738) {
  return function(seq4717) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4717));
  };
}(g__4596__auto___4738);
var g__4596__auto___4742 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.any_printable !== "undefined") {
    return clojure.test.check.generators.any_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any_printable = function(g__4596__auto___4742) {
  return function cljs$spec$gen$alpha$any_printable(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4743 = arguments.length;
    var i__4500__auto___4744 = 0;
    while (true) {
      if (i__4500__auto___4744 < len__4499__auto___4743) {
        args__4502__auto__.push(arguments[i__4500__auto___4744]);
        var G__4745 = i__4500__auto___4744 + 1;
        i__4500__auto___4744 = G__4745;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4742);
cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4742) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4742);
  };
}(g__4596__auto___4742);
cljs.spec.gen.alpha.any_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any_printable.cljs$lang$applyTo = function(g__4596__auto___4742) {
  return function(seq4718) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4718));
  };
}(g__4596__auto___4742);
var g__4596__auto___4746 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.boolean$ !== "undefined") {
    return clojure.test.check.generators.boolean$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.boolean$ = function(g__4596__auto___4746) {
  return function cljs$spec$gen$alpha$boolean(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4747 = arguments.length;
    var i__4500__auto___4748 = 0;
    while (true) {
      if (i__4500__auto___4748 < len__4499__auto___4747) {
        args__4502__auto__.push(arguments[i__4500__auto___4748]);
        var G__4749 = i__4500__auto___4748 + 1;
        i__4500__auto___4748 = G__4749;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4746);
cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4746) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4746);
  };
}(g__4596__auto___4746);
cljs.spec.gen.alpha.boolean$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.boolean$.cljs$lang$applyTo = function(g__4596__auto___4746) {
  return function(seq4719) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4719));
  };
}(g__4596__auto___4746);
var g__4596__auto___4750 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.char$ !== "undefined") {
    return clojure.test.check.generators.char$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char$ = function(g__4596__auto___4750) {
  return function cljs$spec$gen$alpha$char(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4751 = arguments.length;
    var i__4500__auto___4752 = 0;
    while (true) {
      if (i__4500__auto___4752 < len__4499__auto___4751) {
        args__4502__auto__.push(arguments[i__4500__auto___4752]);
        var G__4753 = i__4500__auto___4752 + 1;
        i__4500__auto___4752 = G__4753;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4750);
cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4750) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4750);
  };
}(g__4596__auto___4750);
cljs.spec.gen.alpha.char$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char$.cljs$lang$applyTo = function(g__4596__auto___4750) {
  return function(seq4720) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4720));
  };
}(g__4596__auto___4750);
var g__4596__auto___4754 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.char_alpha !== "undefined") {
    return clojure.test.check.generators.char_alpha;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alpha = function(g__4596__auto___4754) {
  return function cljs$spec$gen$alpha$char_alpha(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4755 = arguments.length;
    var i__4500__auto___4756 = 0;
    while (true) {
      if (i__4500__auto___4756 < len__4499__auto___4755) {
        args__4502__auto__.push(arguments[i__4500__auto___4756]);
        var G__4757 = i__4500__auto___4756 + 1;
        i__4500__auto___4756 = G__4757;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4754);
cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4754) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4754);
  };
}(g__4596__auto___4754);
cljs.spec.gen.alpha.char_alpha.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alpha.cljs$lang$applyTo = function(g__4596__auto___4754) {
  return function(seq4721) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4721));
  };
}(g__4596__auto___4754);
var g__4596__auto___4758 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.char_alphanumeric !== "undefined") {
    return clojure.test.check.generators.char_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alphanumeric = function(g__4596__auto___4758) {
  return function cljs$spec$gen$alpha$char_alphanumeric(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4759 = arguments.length;
    var i__4500__auto___4760 = 0;
    while (true) {
      if (i__4500__auto___4760 < len__4499__auto___4759) {
        args__4502__auto__.push(arguments[i__4500__auto___4760]);
        var G__4761 = i__4500__auto___4760 + 1;
        i__4500__auto___4760 = G__4761;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4758);
cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4758) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4758);
  };
}(g__4596__auto___4758);
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$applyTo = function(g__4596__auto___4758) {
  return function(seq4722) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4722));
  };
}(g__4596__auto___4758);
var g__4596__auto___4762 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.char_ascii !== "undefined") {
    return clojure.test.check.generators.char_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_ascii = function(g__4596__auto___4762) {
  return function cljs$spec$gen$alpha$char_ascii(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4763 = arguments.length;
    var i__4500__auto___4764 = 0;
    while (true) {
      if (i__4500__auto___4764 < len__4499__auto___4763) {
        args__4502__auto__.push(arguments[i__4500__auto___4764]);
        var G__4765 = i__4500__auto___4764 + 1;
        i__4500__auto___4764 = G__4765;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4762);
cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4762) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4762);
  };
}(g__4596__auto___4762);
cljs.spec.gen.alpha.char_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_ascii.cljs$lang$applyTo = function(g__4596__auto___4762) {
  return function(seq4723) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4723));
  };
}(g__4596__auto___4762);
var g__4596__auto___4766 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.double$ !== "undefined") {
    return clojure.test.check.generators.double$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double$ = function(g__4596__auto___4766) {
  return function cljs$spec$gen$alpha$double(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4767 = arguments.length;
    var i__4500__auto___4768 = 0;
    while (true) {
      if (i__4500__auto___4768 < len__4499__auto___4767) {
        args__4502__auto__.push(arguments[i__4500__auto___4768]);
        var G__4769 = i__4500__auto___4768 + 1;
        i__4500__auto___4768 = G__4769;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4766);
cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4766) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4766);
  };
}(g__4596__auto___4766);
cljs.spec.gen.alpha.double$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double$.cljs$lang$applyTo = function(g__4596__auto___4766) {
  return function(seq4724) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4724));
  };
}(g__4596__auto___4766);
var g__4596__auto___4770 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.int$ !== "undefined") {
    return clojure.test.check.generators.int$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.int$ = function(g__4596__auto___4770) {
  return function cljs$spec$gen$alpha$int(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4771 = arguments.length;
    var i__4500__auto___4772 = 0;
    while (true) {
      if (i__4500__auto___4772 < len__4499__auto___4771) {
        args__4502__auto__.push(arguments[i__4500__auto___4772]);
        var G__4773 = i__4500__auto___4772 + 1;
        i__4500__auto___4772 = G__4773;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4770);
cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4770) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4770);
  };
}(g__4596__auto___4770);
cljs.spec.gen.alpha.int$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.int$.cljs$lang$applyTo = function(g__4596__auto___4770) {
  return function(seq4725) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4725));
  };
}(g__4596__auto___4770);
var g__4596__auto___4774 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.keyword !== "undefined") {
    return clojure.test.check.generators.keyword;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword = function(g__4596__auto___4774) {
  return function cljs$spec$gen$alpha$keyword(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4775 = arguments.length;
    var i__4500__auto___4776 = 0;
    while (true) {
      if (i__4500__auto___4776 < len__4499__auto___4775) {
        args__4502__auto__.push(arguments[i__4500__auto___4776]);
        var G__4777 = i__4500__auto___4776 + 1;
        i__4500__auto___4776 = G__4777;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4774);
cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4774) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4774);
  };
}(g__4596__auto___4774);
cljs.spec.gen.alpha.keyword.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword.cljs$lang$applyTo = function(g__4596__auto___4774) {
  return function(seq4726) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4726));
  };
}(g__4596__auto___4774);
var g__4596__auto___4778 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.keyword_ns !== "undefined") {
    return clojure.test.check.generators.keyword_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword_ns = function(g__4596__auto___4778) {
  return function cljs$spec$gen$alpha$keyword_ns(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4779 = arguments.length;
    var i__4500__auto___4780 = 0;
    while (true) {
      if (i__4500__auto___4780 < len__4499__auto___4779) {
        args__4502__auto__.push(arguments[i__4500__auto___4780]);
        var G__4781 = i__4500__auto___4780 + 1;
        i__4500__auto___4780 = G__4781;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4778);
cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4778) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4778);
  };
}(g__4596__auto___4778);
cljs.spec.gen.alpha.keyword_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword_ns.cljs$lang$applyTo = function(g__4596__auto___4778) {
  return function(seq4727) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4727));
  };
}(g__4596__auto___4778);
var g__4596__auto___4782 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.large_integer !== "undefined") {
    return clojure.test.check.generators.large_integer;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer = function(g__4596__auto___4782) {
  return function cljs$spec$gen$alpha$large_integer(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4783 = arguments.length;
    var i__4500__auto___4784 = 0;
    while (true) {
      if (i__4500__auto___4784 < len__4499__auto___4783) {
        args__4502__auto__.push(arguments[i__4500__auto___4784]);
        var G__4785 = i__4500__auto___4784 + 1;
        i__4500__auto___4784 = G__4785;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4782);
cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4782) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4782);
  };
}(g__4596__auto___4782);
cljs.spec.gen.alpha.large_integer.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer.cljs$lang$applyTo = function(g__4596__auto___4782) {
  return function(seq4728) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4728));
  };
}(g__4596__auto___4782);
var g__4596__auto___4786 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.ratio !== "undefined") {
    return clojure.test.check.generators.ratio;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.ratio = function(g__4596__auto___4786) {
  return function cljs$spec$gen$alpha$ratio(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4787 = arguments.length;
    var i__4500__auto___4788 = 0;
    while (true) {
      if (i__4500__auto___4788 < len__4499__auto___4787) {
        args__4502__auto__.push(arguments[i__4500__auto___4788]);
        var G__4789 = i__4500__auto___4788 + 1;
        i__4500__auto___4788 = G__4789;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4786);
cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4786) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4786);
  };
}(g__4596__auto___4786);
cljs.spec.gen.alpha.ratio.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.ratio.cljs$lang$applyTo = function(g__4596__auto___4786) {
  return function(seq4729) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4729));
  };
}(g__4596__auto___4786);
var g__4596__auto___4790 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.simple_type !== "undefined") {
    return clojure.test.check.generators.simple_type;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type = function(g__4596__auto___4790) {
  return function cljs$spec$gen$alpha$simple_type(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4791 = arguments.length;
    var i__4500__auto___4792 = 0;
    while (true) {
      if (i__4500__auto___4792 < len__4499__auto___4791) {
        args__4502__auto__.push(arguments[i__4500__auto___4792]);
        var G__4793 = i__4500__auto___4792 + 1;
        i__4500__auto___4792 = G__4793;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4790);
cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4790) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4790);
  };
}(g__4596__auto___4790);
cljs.spec.gen.alpha.simple_type.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type.cljs$lang$applyTo = function(g__4596__auto___4790) {
  return function(seq4730) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4730));
  };
}(g__4596__auto___4790);
var g__4596__auto___4794 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.simple_type_printable !== "undefined") {
    return clojure.test.check.generators.simple_type_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type_printable = function(g__4596__auto___4794) {
  return function cljs$spec$gen$alpha$simple_type_printable(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4795 = arguments.length;
    var i__4500__auto___4796 = 0;
    while (true) {
      if (i__4500__auto___4796 < len__4499__auto___4795) {
        args__4502__auto__.push(arguments[i__4500__auto___4796]);
        var G__4797 = i__4500__auto___4796 + 1;
        i__4500__auto___4796 = G__4797;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4794);
cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4794) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4794);
  };
}(g__4596__auto___4794);
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$applyTo = function(g__4596__auto___4794) {
  return function(seq4731) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4731));
  };
}(g__4596__auto___4794);
var g__4596__auto___4798 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.string !== "undefined") {
    return clojure.test.check.generators.string;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string = function(g__4596__auto___4798) {
  return function cljs$spec$gen$alpha$string(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4799 = arguments.length;
    var i__4500__auto___4800 = 0;
    while (true) {
      if (i__4500__auto___4800 < len__4499__auto___4799) {
        args__4502__auto__.push(arguments[i__4500__auto___4800]);
        var G__4801 = i__4500__auto___4800 + 1;
        i__4500__auto___4800 = G__4801;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4798);
cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4798) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4798);
  };
}(g__4596__auto___4798);
cljs.spec.gen.alpha.string.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string.cljs$lang$applyTo = function(g__4596__auto___4798) {
  return function(seq4732) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4732));
  };
}(g__4596__auto___4798);
var g__4596__auto___4802 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.string_ascii !== "undefined") {
    return clojure.test.check.generators.string_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_ascii = function(g__4596__auto___4802) {
  return function cljs$spec$gen$alpha$string_ascii(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4803 = arguments.length;
    var i__4500__auto___4804 = 0;
    while (true) {
      if (i__4500__auto___4804 < len__4499__auto___4803) {
        args__4502__auto__.push(arguments[i__4500__auto___4804]);
        var G__4805 = i__4500__auto___4804 + 1;
        i__4500__auto___4804 = G__4805;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4802);
cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4802) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4802);
  };
}(g__4596__auto___4802);
cljs.spec.gen.alpha.string_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_ascii.cljs$lang$applyTo = function(g__4596__auto___4802) {
  return function(seq4733) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4733));
  };
}(g__4596__auto___4802);
var g__4596__auto___4806 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.string_alphanumeric !== "undefined") {
    return clojure.test.check.generators.string_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_alphanumeric = function(g__4596__auto___4806) {
  return function cljs$spec$gen$alpha$string_alphanumeric(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4807 = arguments.length;
    var i__4500__auto___4808 = 0;
    while (true) {
      if (i__4500__auto___4808 < len__4499__auto___4807) {
        args__4502__auto__.push(arguments[i__4500__auto___4808]);
        var G__4809 = i__4500__auto___4808 + 1;
        i__4500__auto___4808 = G__4809;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4806);
cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4806) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4806);
  };
}(g__4596__auto___4806);
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$applyTo = function(g__4596__auto___4806) {
  return function(seq4734) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4734));
  };
}(g__4596__auto___4806);
var g__4596__auto___4810 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.symbol !== "undefined") {
    return clojure.test.check.generators.symbol;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol = function(g__4596__auto___4810) {
  return function cljs$spec$gen$alpha$symbol(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4811 = arguments.length;
    var i__4500__auto___4812 = 0;
    while (true) {
      if (i__4500__auto___4812 < len__4499__auto___4811) {
        args__4502__auto__.push(arguments[i__4500__auto___4812]);
        var G__4813 = i__4500__auto___4812 + 1;
        i__4500__auto___4812 = G__4813;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4810);
cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4810) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4810);
  };
}(g__4596__auto___4810);
cljs.spec.gen.alpha.symbol.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol.cljs$lang$applyTo = function(g__4596__auto___4810) {
  return function(seq4735) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4735));
  };
}(g__4596__auto___4810);
var g__4596__auto___4814 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.symbol_ns !== "undefined") {
    return clojure.test.check.generators.symbol_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol_ns = function(g__4596__auto___4814) {
  return function cljs$spec$gen$alpha$symbol_ns(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4815 = arguments.length;
    var i__4500__auto___4816 = 0;
    while (true) {
      if (i__4500__auto___4816 < len__4499__auto___4815) {
        args__4502__auto__.push(arguments[i__4500__auto___4816]);
        var G__4817 = i__4500__auto___4816 + 1;
        i__4500__auto___4816 = G__4817;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4814);
cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4814) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4814);
  };
}(g__4596__auto___4814);
cljs.spec.gen.alpha.symbol_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol_ns.cljs$lang$applyTo = function(g__4596__auto___4814) {
  return function(seq4736) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4736));
  };
}(g__4596__auto___4814);
var g__4596__auto___4818 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators.uuid !== "undefined") {
    return clojure.test.check.generators.uuid;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null))), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.uuid = function(g__4596__auto___4818) {
  return function cljs$spec$gen$alpha$uuid(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4819 = arguments.length;
    var i__4500__auto___4820 = 0;
    while (true) {
      if (i__4500__auto___4820 < len__4499__auto___4819) {
        args__4502__auto__.push(arguments[i__4500__auto___4820]);
        var G__4821 = i__4500__auto___4820 + 1;
        i__4500__auto___4820 = G__4821;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
  };
}(g__4596__auto___4818);
cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic = function(g__4596__auto___4818) {
  return function(args) {
    return cljs.core.deref.call(null, g__4596__auto___4818);
  };
}(g__4596__auto___4818);
cljs.spec.gen.alpha.uuid.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.uuid.cljs$lang$applyTo = function(g__4596__auto___4818) {
  return function(seq4737) {
    var self__4487__auto__ = this;
    return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4737));
  };
}(g__4596__auto___4818);
cljs.spec.gen.alpha.cat = function cljs$spec$gen$alpha$cat(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4824 = arguments.length;
  var i__4500__auto___4825 = 0;
  while (true) {
    if (i__4500__auto___4825 < len__4499__auto___4824) {
      args__4502__auto__.push(arguments[i__4500__auto___4825]);
      var G__4826 = i__4500__auto___4825 + 1;
      i__4500__auto___4825 = G__4826;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic = function(gens) {
  return cljs.spec.gen.alpha.fmap.call(null, function(p1__4822_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.concat, p1__4822_SHARP_);
  }, cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gens));
};
cljs.spec.gen.alpha.cat.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.cat.cljs$lang$applyTo = function(seq4823) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4823));
};
cljs.spec.gen.alpha.qualified_QMARK_ = function cljs$spec$gen$alpha$qualified_QMARK_(ident) {
  return !(cljs.core.namespace.call(null, ident) == null);
};
cljs.spec.gen.alpha.gen_builtins = new cljs.core.Delay(function() {
  var simple = cljs.spec.gen.alpha.simple_type_printable.call(null);
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.qualified_keyword_QMARK_, cljs.core.seq_QMARK_, cljs.core.vector_QMARK_, cljs.core.any_QMARK_, cljs.core.boolean_QMARK_, cljs.core.char_QMARK_, cljs.core.inst_QMARK_, cljs.core.simple_symbol_QMARK_, cljs.core.sequential_QMARK_, cljs.core.float_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_, cljs.core.empty_QMARK_, cljs.core.string_QMARK_, cljs.core.double_QMARK_, cljs.core.int_QMARK_, cljs.core.associative_QMARK_, cljs.core.keyword_QMARK_, 
  cljs.core.indexed_QMARK_, cljs.core.zero_QMARK_, cljs.core.simple_keyword_QMARK_, cljs.core.neg_int_QMARK_, cljs.core.nil_QMARK_, cljs.core.ident_QMARK_, cljs.core.qualified_ident_QMARK_, cljs.core.true_QMARK_, cljs.core.integer_QMARK_, cljs.core.nat_int_QMARK_, cljs.core.pos_int_QMARK_, cljs.core.uuid_QMARK_, cljs.core.false_QMARK_, cljs.core.list_QMARK_, cljs.core.simple_ident_QMARK_, cljs.core.number_QMARK_, cljs.core.qualified_symbol_QMARK_, cljs.core.seqable_QMARK_, cljs.core.symbol_QMARK_, 
  cljs.core.coll_QMARK_], [cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.keyword_ns.call(null)), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.any_printable.call(null)], null)), cljs.spec.gen.alpha.boolean$.call(null), 
  cljs.spec.gen.alpha.char$.call(null), cljs.spec.gen.alpha.fmap.call(null, function(simple) {
    return function(p1__4827_SHARP_) {
      return new Date(p1__4827_SHARP_);
    };
  }(simple), cljs.spec.gen.alpha.large_integer.call(null)), cljs.spec.gen.alpha.symbol.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.elements.call(null, new cljs.core.PersistentVector(null, 
  5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentHashSet.EMPTY], null)), cljs.spec.gen.alpha.string_alphanumeric.call(null), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), 
  cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.return$.call(null, 0), cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), -1], null)), cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null))), cljs.spec.gen.alpha.return$.call(null, true), cljs.spec.gen.alpha.large_integer.call(null), 
  cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null)), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)), cljs.spec.gen.alpha.uuid.call(null), cljs.spec.gen.alpha.return$.call(null, false), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.symbol.call(null)], null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.double$.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.symbol_ns.call(null)), cljs.spec.gen.alpha.one_of.call(null, 
  new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.string_alphanumeric.call(null)], null)), cljs.spec.gen.alpha.symbol_ns.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 4, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.set.call(null, simple)], null))]);
}, null);
cljs.spec.gen.alpha.gen_for_pred = function cljs$spec$gen$alpha$gen_for_pred(pred) {
  if (cljs.core.set_QMARK_.call(null, pred)) {
    return cljs.spec.gen.alpha.elements.call(null, pred);
  } else {
    return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.gen_builtins), pred);
  }
};
goog.provide("cljs.spec.alpha");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("cljs.spec.gen.alpha");
goog.require("clojure.string");
cljs.spec.alpha.MAX_INT = 9007199254740991;
cljs.spec.alpha._STAR_recursion_limit_STAR_ = 4;
cljs.spec.alpha._STAR_fspec_iterations_STAR_ = 21;
cljs.spec.alpha._STAR_coll_check_limit_STAR_ = 101;
cljs.spec.alpha._STAR_coll_error_limit_STAR_ = 20;
cljs.spec.alpha.Spec = function() {
};
cljs.spec.alpha.conform_STAR_ = function cljs$spec$alpha$conform_STAR_(spec, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2(spec, x);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.conform_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec, x);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.conform_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.conform*", spec);
      }
    }
  }
};
cljs.spec.alpha.unform_STAR_ = function cljs$spec$alpha$unform_STAR_(spec, y) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2(spec, y);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.unform_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec, y);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.unform_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec, y);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.unform*", spec);
      }
    }
  }
};
cljs.spec.alpha.explain_STAR_ = function cljs$spec$alpha$explain_STAR_(spec, path, via, in$, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5 == null)) {
    return spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5(spec, path, via, in$, x);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.explain_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec, path, via, in$, x);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.explain_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec, path, via, in$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.explain*", spec);
      }
    }
  }
};
cljs.spec.alpha.gen_STAR_ = function cljs$spec$alpha$gen_STAR_(spec, overrides, path, rmap) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4 == null)) {
    return spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4(spec, overrides, path, rmap);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.gen_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec, overrides, path, rmap);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.gen_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec, overrides, path, rmap);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.gen*", spec);
      }
    }
  }
};
cljs.spec.alpha.with_gen_STAR_ = function cljs$spec$alpha$with_gen_STAR_(spec, gfn) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2(spec, gfn);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.with_gen_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec, gfn);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.with_gen_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec, gfn);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.with-gen*", spec);
      }
    }
  }
};
cljs.spec.alpha.describe_STAR_ = function cljs$spec$alpha$describe_STAR_(spec) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1 == null)) {
    return spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1(spec);
  } else {
    var x__4211__auto__ = spec == null ? null : spec;
    var m__4212__auto__ = cljs.spec.alpha.describe_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, spec);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.describe_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, spec);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.describe*", spec);
      }
    }
  }
};
if (typeof cljs.spec.alpha.registry_ref !== "undefined") {
} else {
  cljs.spec.alpha.registry_ref = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
cljs.spec.alpha.deep_resolve = function cljs$spec$alpha$deep_resolve(reg, k) {
  var spec = k;
  while (true) {
    if (cljs.core.ident_QMARK_.call(null, spec)) {
      var G__5090 = cljs.core.get.call(null, reg, spec);
      spec = G__5090;
      continue;
    } else {
      return spec;
    }
    break;
  }
};
cljs.spec.alpha.reg_resolve = function cljs$spec$alpha$reg_resolve(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var reg = cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
    var spec = cljs.core.get.call(null, reg, k);
    if (!cljs.core.ident_QMARK_.call(null, spec)) {
      return spec;
    } else {
      return cljs.spec.alpha.deep_resolve.call(null, reg, spec);
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.reg_resolve_BANG_ = function cljs$spec$alpha$reg_resolve_BANG_(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var or__3922__auto__ = cljs.spec.alpha.reg_resolve.call(null, k);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)].join(""));
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.spec_QMARK_ = function cljs$spec$alpha$spec_QMARK_(x) {
  if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.cljs$spec$alpha$Spec$ ? true : false : false) {
    return x;
  } else {
    return null;
  }
};
cljs.spec.alpha.regex_QMARK_ = function cljs$spec$alpha$regex_QMARK_(x) {
  var and__3911__auto__ = (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(x);
  if (cljs.core.truth_(and__3911__auto__)) {
    return x;
  } else {
    return and__3911__auto__;
  }
};
cljs.spec.alpha.with_name = function cljs$spec$alpha$with_name(spec, name) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return cljs.core.assoc.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, spec, cljs.core.assoc.call(null, cljs.core.meta.call(null, spec), new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.spec_name = function cljs$spec$alpha$spec_name(spec) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(spec);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, spec));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.maybe_spec = function cljs$spec$alpha$maybe_spec(spec_or_k) {
  var s = function() {
    var or__3922__auto__ = function() {
      var and__3911__auto__ = cljs.core.ident_QMARK_.call(null, spec_or_k);
      if (and__3911__auto__) {
        return cljs.spec.alpha.reg_resolve.call(null, spec_or_k);
      } else {
        return and__3911__auto__;
      }
    }();
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      var or__3922__auto____$1 = cljs.spec.alpha.spec_QMARK_.call(null, spec_or_k);
      if (cljs.core.truth_(or__3922__auto____$1)) {
        return or__3922__auto____$1;
      } else {
        var or__3922__auto____$2 = cljs.spec.alpha.regex_QMARK_.call(null, spec_or_k);
        if (cljs.core.truth_(or__3922__auto____$2)) {
          return or__3922__auto____$2;
        } else {
          return null;
        }
      }
    }
  }();
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, s))) {
    return cljs.spec.alpha.with_name.call(null, cljs.spec.alpha.regex_spec_impl.call(null, s, null), cljs.spec.alpha.spec_name.call(null, s));
  } else {
    return s;
  }
};
cljs.spec.alpha.the_spec = function cljs$spec$alpha$the_spec(spec_or_k) {
  var or__3922__auto__ = cljs.spec.alpha.maybe_spec.call(null, spec_or_k);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    if (cljs.core.ident_QMARK_.call(null, spec_or_k)) {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec_or_k)].join(""));
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.Specize = function() {
};
cljs.spec.alpha.specize_STAR_ = function cljs$spec$alpha$specize_STAR_(var_args) {
  var G__5095 = arguments.length;
  switch(G__5095) {
    case 1:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(_) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$1 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$1(_);
  } else {
    var x__4211__auto__ = _ == null ? null : _;
    var m__4212__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, _);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(_, form) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$2 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$2(_, form);
  } else {
    var x__4211__auto__ = _ == null ? null : _;
    var m__4212__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, _, form);
    } else {
      var m__4212__auto____$1 = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, _, form);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  }
};
cljs.spec.alpha.specize_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(k) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(k, _) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
goog.object.set(cljs.spec.alpha.Specize, "_", true);
goog.object.set(cljs.spec.alpha.specize_STAR_, "_", function() {
  var G__5097 = null;
  var G__5097__1 = function(o) {
    return cljs.spec.alpha.spec_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818), o, null, null);
  };
  var G__5097__2 = function(o, form) {
    return cljs.spec.alpha.spec_impl.call(null, form, o, null, null);
  };
  G__5097 = function(o, form) {
    switch(arguments.length) {
      case 1:
        return G__5097__1.call(this, o);
      case 2:
        return G__5097__2.call(this, o, form);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__5097.cljs$core$IFn$_invoke$arity$1 = G__5097__1;
  G__5097.cljs$core$IFn$_invoke$arity$2 = G__5097__2;
  return G__5097;
}());
cljs.spec.alpha.specize = function cljs$spec$alpha$specize(var_args) {
  var G__5099 = arguments.length;
  switch(G__5099) {
    case 1:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1 = function(s) {
  var or__3922__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s);
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2 = function(s, form) {
  var or__3922__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s, form);
  }
};
cljs.spec.alpha.specize.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.invalid_QMARK_ = function cljs$spec$alpha$invalid_QMARK_(ret) {
  return cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119), ret);
};
cljs.spec.alpha.conform = function cljs$spec$alpha$conform(spec, x) {
  return cljs.spec.alpha.conform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.unform = function cljs$spec$alpha$unform(spec, x) {
  return cljs.spec.alpha.unform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.form = function cljs$spec$alpha$form(spec) {
  return cljs.spec.alpha.describe_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec));
};
cljs.spec.alpha.abbrev = function cljs$spec$alpha$abbrev(form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return clojure.walk.postwalk.call(null, function(form__$1) {
      if (cljs.core.truth_(function() {
        var and__3911__auto__ = form__$1 instanceof cljs.core.Symbol;
        if (and__3911__auto__) {
          return cljs.core.namespace.call(null, form__$1);
        } else {
          return and__3911__auto__;
        }
      }())) {
        return cljs.core.symbol.call(null, cljs.core.name.call(null, form__$1));
      } else {
        if (cljs.core.seq_QMARK_.call(null, form__$1) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), cljs.core.first.call(null, form__$1)) && cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.second.call(null, form__$1))) {
          return cljs.core.last.call(null, form__$1);
        } else {
          return form__$1;
        }
      }
    }, form);
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = form instanceof cljs.core.Symbol;
      if (and__3911__auto__) {
        return cljs.core.namespace.call(null, form);
      } else {
        return and__3911__auto__;
      }
    }())) {
      return cljs.core.symbol.call(null, cljs.core.name.call(null, form));
    } else {
      return form;
    }
  }
};
cljs.spec.alpha.describe = function cljs$spec$alpha$describe(spec) {
  return cljs.spec.alpha.abbrev.call(null, cljs.spec.alpha.form.call(null, spec));
};
cljs.spec.alpha.with_gen = function cljs$spec$alpha$with_gen(spec, gen_fn) {
  var spec__$1 = cljs.spec.alpha.reg_resolve.call(null, spec);
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec__$1))) {
    return cljs.core.assoc.call(null, spec__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375), gen_fn);
  } else {
    return cljs.spec.alpha.with_gen_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec__$1), gen_fn);
  }
};
cljs.spec.alpha.explain_data_STAR_ = function cljs$spec$alpha$explain_data_STAR_(spec, path, via, in$, x) {
  var temp__4657__auto__ = cljs.spec.alpha.explain_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), path, via, in$, x);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var probs = temp__4657__auto__;
    if (cljs.core.empty_QMARK_.call(null, probs)) {
      return null;
    } else {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), probs, new cljs.core.Keyword("cljs.spec.alpha", "spec", "cljs.spec.alpha/spec", 1947137578), spec, new cljs.core.Keyword("cljs.spec.alpha", "value", "cljs.spec.alpha/value", 1974786274), x], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.explain_data = function cljs$spec$alpha$explain_data(spec, x) {
  return cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, function() {
    var temp__4655__auto__ = cljs.spec.alpha.spec_name.call(null, spec);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var name = temp__4655__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }(), cljs.core.PersistentVector.EMPTY, x);
};
cljs.spec.alpha.explain_printer = function cljs$spec$alpha$explain_printer(ed) {
  if (cljs.core.truth_(ed)) {
    var problems = cljs.core.sort_by.call(null, function(p1__5101_SHARP_) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(p1__5101_SHARP_));
    }, (new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814)).cljs$core$IFn$_invoke$arity$1(ed));
    return cljs.core.print.call(null, function() {
      var sb__4430__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_5102_5142 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_5103_5143 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_5102_5142, _STAR_print_fn_STAR_5103_5143, sb__4430__auto__, problems) {
        return function(x__4431__auto__) {
          return sb__4430__auto__.append(x__4431__auto__);
        };
      }(_STAR_print_newline_STAR_5102_5142, _STAR_print_fn_STAR_5103_5143, sb__4430__auto__, problems);
      try {
        var seq__5104_5144 = cljs.core.seq.call(null, problems);
        var chunk__5105_5145 = null;
        var count__5106_5146 = 0;
        var i__5107_5147 = 0;
        while (true) {
          if (i__5107_5147 < count__5106_5146) {
            var map__5108_5148 = cljs.core._nth.call(null, chunk__5105_5145, i__5107_5147);
            var map__5108_5149__$1 = (!(map__5108_5148 == null) ? map__5108_5148.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5108_5148.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5108_5148) : map__5108_5148;
            var prob_5150 = map__5108_5149__$1;
            var path_5151 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
            var pred_5152 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
            var val_5153 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
            var reason_5154 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
            var via_5155 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
            var in_5156 = cljs.core.get.call(null, map__5108_5149__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
            if (cljs.core.empty_QMARK_.call(null, in_5156)) {
            } else {
              cljs.core.print.call(null, "In:", cljs.core.pr_str.call(null, in_5156), "");
            }
            cljs.core.print.call(null, "val: ");
            cljs.core.pr.call(null, val_5153);
            cljs.core.print.call(null, " fails");
            if (cljs.core.empty_QMARK_.call(null, via_5155)) {
            } else {
              cljs.core.print.call(null, " spec:", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_5155)));
            }
            if (cljs.core.empty_QMARK_.call(null, path_5151)) {
            } else {
              cljs.core.print.call(null, " at:", cljs.core.pr_str.call(null, path_5151));
            }
            cljs.core.print.call(null, " predicate: ");
            cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_5152));
            if (cljs.core.truth_(reason_5154)) {
              cljs.core.print.call(null, ", ", reason_5154);
            } else {
            }
            var seq__5110_5157 = cljs.core.seq.call(null, prob_5150);
            var chunk__5111_5158 = null;
            var count__5112_5159 = 0;
            var i__5113_5160 = 0;
            while (true) {
              if (i__5113_5160 < count__5112_5159) {
                var vec__5114_5161 = cljs.core._nth.call(null, chunk__5111_5158, i__5113_5160);
                var k_5162 = cljs.core.nth.call(null, vec__5114_5161, 0, null);
                var v_5163 = cljs.core.nth.call(null, vec__5114_5161, 1, null);
                if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                null)).call(null, k_5162))) {
                } else {
                  cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5162), " ");
                  cljs.core.pr.call(null, v_5163);
                }
                var G__5164 = seq__5110_5157;
                var G__5165 = chunk__5111_5158;
                var G__5166 = count__5112_5159;
                var G__5167 = i__5113_5160 + 1;
                seq__5110_5157 = G__5164;
                chunk__5111_5158 = G__5165;
                count__5112_5159 = G__5166;
                i__5113_5160 = G__5167;
                continue;
              } else {
                var temp__4657__auto___5168 = cljs.core.seq.call(null, seq__5110_5157);
                if (temp__4657__auto___5168) {
                  var seq__5110_5169__$1 = temp__4657__auto___5168;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__5110_5169__$1)) {
                    var c__4319__auto___5170 = cljs.core.chunk_first.call(null, seq__5110_5169__$1);
                    var G__5171 = cljs.core.chunk_rest.call(null, seq__5110_5169__$1);
                    var G__5172 = c__4319__auto___5170;
                    var G__5173 = cljs.core.count.call(null, c__4319__auto___5170);
                    var G__5174 = 0;
                    seq__5110_5157 = G__5171;
                    chunk__5111_5158 = G__5172;
                    count__5112_5159 = G__5173;
                    i__5113_5160 = G__5174;
                    continue;
                  } else {
                    var vec__5117_5175 = cljs.core.first.call(null, seq__5110_5169__$1);
                    var k_5176 = cljs.core.nth.call(null, vec__5117_5175, 0, null);
                    var v_5177 = cljs.core.nth.call(null, vec__5117_5175, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_5176))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5176), " ");
                      cljs.core.pr.call(null, v_5177);
                    }
                    var G__5178 = cljs.core.next.call(null, seq__5110_5169__$1);
                    var G__5179 = null;
                    var G__5180 = 0;
                    var G__5181 = 0;
                    seq__5110_5157 = G__5178;
                    chunk__5111_5158 = G__5179;
                    count__5112_5159 = G__5180;
                    i__5113_5160 = G__5181;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            cljs.core.newline.call(null);
            var G__5182 = seq__5104_5144;
            var G__5183 = chunk__5105_5145;
            var G__5184 = count__5106_5146;
            var G__5185 = i__5107_5147 + 1;
            seq__5104_5144 = G__5182;
            chunk__5105_5145 = G__5183;
            count__5106_5146 = G__5184;
            i__5107_5147 = G__5185;
            continue;
          } else {
            var temp__4657__auto___5186 = cljs.core.seq.call(null, seq__5104_5144);
            if (temp__4657__auto___5186) {
              var seq__5104_5187__$1 = temp__4657__auto___5186;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__5104_5187__$1)) {
                var c__4319__auto___5188 = cljs.core.chunk_first.call(null, seq__5104_5187__$1);
                var G__5189 = cljs.core.chunk_rest.call(null, seq__5104_5187__$1);
                var G__5190 = c__4319__auto___5188;
                var G__5191 = cljs.core.count.call(null, c__4319__auto___5188);
                var G__5192 = 0;
                seq__5104_5144 = G__5189;
                chunk__5105_5145 = G__5190;
                count__5106_5146 = G__5191;
                i__5107_5147 = G__5192;
                continue;
              } else {
                var map__5120_5193 = cljs.core.first.call(null, seq__5104_5187__$1);
                var map__5120_5194__$1 = (!(map__5120_5193 == null) ? map__5120_5193.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5120_5193.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5120_5193) : map__5120_5193;
                var prob_5195 = map__5120_5194__$1;
                var path_5196 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
                var pred_5197 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
                var val_5198 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                var reason_5199 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
                var via_5200 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
                var in_5201 = cljs.core.get.call(null, map__5120_5194__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
                if (cljs.core.empty_QMARK_.call(null, in_5201)) {
                } else {
                  cljs.core.print.call(null, "In:", cljs.core.pr_str.call(null, in_5201), "");
                }
                cljs.core.print.call(null, "val: ");
                cljs.core.pr.call(null, val_5198);
                cljs.core.print.call(null, " fails");
                if (cljs.core.empty_QMARK_.call(null, via_5200)) {
                } else {
                  cljs.core.print.call(null, " spec:", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_5200)));
                }
                if (cljs.core.empty_QMARK_.call(null, path_5196)) {
                } else {
                  cljs.core.print.call(null, " at:", cljs.core.pr_str.call(null, path_5196));
                }
                cljs.core.print.call(null, " predicate: ");
                cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_5197));
                if (cljs.core.truth_(reason_5199)) {
                  cljs.core.print.call(null, ", ", reason_5199);
                } else {
                }
                var seq__5122_5202 = cljs.core.seq.call(null, prob_5195);
                var chunk__5123_5203 = null;
                var count__5124_5204 = 0;
                var i__5125_5205 = 0;
                while (true) {
                  if (i__5125_5205 < count__5124_5204) {
                    var vec__5126_5206 = cljs.core._nth.call(null, chunk__5123_5203, i__5125_5205);
                    var k_5207 = cljs.core.nth.call(null, vec__5126_5206, 0, null);
                    var v_5208 = cljs.core.nth.call(null, vec__5126_5206, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_5207))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5207), " ");
                      cljs.core.pr.call(null, v_5208);
                    }
                    var G__5209 = seq__5122_5202;
                    var G__5210 = chunk__5123_5203;
                    var G__5211 = count__5124_5204;
                    var G__5212 = i__5125_5205 + 1;
                    seq__5122_5202 = G__5209;
                    chunk__5123_5203 = G__5210;
                    count__5124_5204 = G__5211;
                    i__5125_5205 = G__5212;
                    continue;
                  } else {
                    var temp__4657__auto___5213__$1 = cljs.core.seq.call(null, seq__5122_5202);
                    if (temp__4657__auto___5213__$1) {
                      var seq__5122_5214__$1 = temp__4657__auto___5213__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__5122_5214__$1)) {
                        var c__4319__auto___5215 = cljs.core.chunk_first.call(null, seq__5122_5214__$1);
                        var G__5216 = cljs.core.chunk_rest.call(null, seq__5122_5214__$1);
                        var G__5217 = c__4319__auto___5215;
                        var G__5218 = cljs.core.count.call(null, c__4319__auto___5215);
                        var G__5219 = 0;
                        seq__5122_5202 = G__5216;
                        chunk__5123_5203 = G__5217;
                        count__5124_5204 = G__5218;
                        i__5125_5205 = G__5219;
                        continue;
                      } else {
                        var vec__5129_5220 = cljs.core.first.call(null, seq__5122_5214__$1);
                        var k_5221 = cljs.core.nth.call(null, vec__5129_5220, 0, null);
                        var v_5222 = cljs.core.nth.call(null, vec__5129_5220, 1, null);
                        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], 
                        null), null)).call(null, k_5221))) {
                        } else {
                          cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5221), " ");
                          cljs.core.pr.call(null, v_5222);
                        }
                        var G__5223 = cljs.core.next.call(null, seq__5122_5214__$1);
                        var G__5224 = null;
                        var G__5225 = 0;
                        var G__5226 = 0;
                        seq__5122_5202 = G__5223;
                        chunk__5123_5203 = G__5224;
                        count__5124_5204 = G__5225;
                        i__5125_5205 = G__5226;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                cljs.core.newline.call(null);
                var G__5227 = cljs.core.next.call(null, seq__5104_5187__$1);
                var G__5228 = null;
                var G__5229 = 0;
                var G__5230 = 0;
                seq__5104_5144 = G__5227;
                chunk__5105_5145 = G__5228;
                count__5106_5146 = G__5229;
                i__5107_5147 = G__5230;
                continue;
              }
            } else {
            }
          }
          break;
        }
        var seq__5132_5231 = cljs.core.seq.call(null, ed);
        var chunk__5133_5232 = null;
        var count__5134_5233 = 0;
        var i__5135_5234 = 0;
        while (true) {
          if (i__5135_5234 < count__5134_5233) {
            var vec__5136_5235 = cljs.core._nth.call(null, chunk__5133_5232, i__5135_5234);
            var k_5236 = cljs.core.nth.call(null, vec__5136_5235, 0, null);
            var v_5237 = cljs.core.nth.call(null, vec__5136_5235, 1, null);
            if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), null], null), null)).call(null, k_5236))) {
            } else {
              cljs.core.print.call(null, cljs.core.pr_str.call(null, k_5236), " ");
              cljs.core.pr.call(null, v_5237);
              cljs.core.newline.call(null);
            }
            var G__5238 = seq__5132_5231;
            var G__5239 = chunk__5133_5232;
            var G__5240 = count__5134_5233;
            var G__5241 = i__5135_5234 + 1;
            seq__5132_5231 = G__5238;
            chunk__5133_5232 = G__5239;
            count__5134_5233 = G__5240;
            i__5135_5234 = G__5241;
            continue;
          } else {
            var temp__4657__auto___5242 = cljs.core.seq.call(null, seq__5132_5231);
            if (temp__4657__auto___5242) {
              var seq__5132_5243__$1 = temp__4657__auto___5242;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__5132_5243__$1)) {
                var c__4319__auto___5244 = cljs.core.chunk_first.call(null, seq__5132_5243__$1);
                var G__5245 = cljs.core.chunk_rest.call(null, seq__5132_5243__$1);
                var G__5246 = c__4319__auto___5244;
                var G__5247 = cljs.core.count.call(null, c__4319__auto___5244);
                var G__5248 = 0;
                seq__5132_5231 = G__5245;
                chunk__5133_5232 = G__5246;
                count__5134_5233 = G__5247;
                i__5135_5234 = G__5248;
                continue;
              } else {
                var vec__5139_5249 = cljs.core.first.call(null, seq__5132_5243__$1);
                var k_5250 = cljs.core.nth.call(null, vec__5139_5249, 0, null);
                var v_5251 = cljs.core.nth.call(null, vec__5139_5249, 1, null);
                if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), null], null), null)).call(null, k_5250))) {
                } else {
                  cljs.core.print.call(null, cljs.core.pr_str.call(null, k_5250), " ");
                  cljs.core.pr.call(null, v_5251);
                  cljs.core.newline.call(null);
                }
                var G__5252 = cljs.core.next.call(null, seq__5132_5243__$1);
                var G__5253 = null;
                var G__5254 = 0;
                var G__5255 = 0;
                seq__5132_5231 = G__5252;
                chunk__5133_5232 = G__5253;
                count__5134_5233 = G__5254;
                i__5135_5234 = G__5255;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5103_5143;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_5102_5142;
      }
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4430__auto__)].join("");
    }());
  } else {
    return cljs.core.println.call(null, "Success!");
  }
};
cljs.spec.alpha._STAR_explain_out_STAR_ = cljs.spec.alpha.explain_printer;
cljs.spec.alpha.explain_out = function cljs$spec$alpha$explain_out(ed) {
  return cljs.spec.alpha._STAR_explain_out_STAR_.call(null, ed);
};
cljs.spec.alpha.explain = function cljs$spec$alpha$explain(spec, x) {
  return cljs.spec.alpha.explain_out.call(null, cljs.spec.alpha.explain_data.call(null, spec, x));
};
cljs.spec.alpha.explain_str = function cljs$spec$alpha$explain_str(spec, x) {
  var sb__4430__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR_5256_5258 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR_5257_5259 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = true;
  cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_5256_5258, _STAR_print_fn_STAR_5257_5259, sb__4430__auto__) {
    return function(x__4431__auto__) {
      return sb__4430__auto__.append(x__4431__auto__);
    };
  }(_STAR_print_newline_STAR_5256_5258, _STAR_print_fn_STAR_5257_5259, sb__4430__auto__);
  try {
    cljs.spec.alpha.explain.call(null, spec, x);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5257_5259;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_5256_5258;
  }
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4430__auto__)].join("");
};
cljs.spec.alpha.gensub = function cljs$spec$alpha$gensub(spec, overrides, path, rmap, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  var temp__4655__auto__ = function() {
    var or__3922__auto__ = function() {
      var temp__4657__auto__ = function() {
        var or__3922__auto__ = cljs.core.get.call(null, overrides, function() {
          var or__3922__auto__ = cljs.spec.alpha.spec_name.call(null, spec__$1);
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return spec__$1;
          }
        }());
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.get.call(null, overrides, path);
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var gfn = temp__4657__auto__;
        return gfn.call(null);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.spec.alpha.gen_STAR_.call(null, spec__$1, overrides, path, rmap);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var g = temp__4655__auto__;
    return cljs.spec.gen.alpha.such_that.call(null, function(g, temp__4655__auto__, spec__$1) {
      return function(p1__5260_SHARP_) {
        return cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, p1__5260_SHARP_);
      };
    }(g, temp__4655__auto__, spec__$1), g, 100);
  } else {
    throw new Error(["Unable to construct gen at: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), " for: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.abbrev.call(null, form))].join(""));
  }
};
cljs.spec.alpha.gen = function cljs$spec$alpha$gen(var_args) {
  var G__5262 = arguments.length;
  switch(G__5262) {
    case 1:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.gen.call(null, spec, null);
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2 = function(spec, overrides) {
  return cljs.spec.alpha.gensub.call(null, spec, overrides, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994), cljs.spec.alpha._STAR_recursion_limit_STAR_], null), spec);
};
cljs.spec.alpha.gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.def_impl = function cljs$spec$alpha$def_impl(k, form, spec) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = cljs.core.ident_QMARK_.call(null, k);
    if (and__3911__auto__) {
      return cljs.core.namespace.call(null, k);
    } else {
      return and__3911__auto__;
    }
  }())) {
  } else {
    throw new Error(["Assert failed: ", "k must be namespaced keyword or resolveable symbol", "\n", "(c/and (ident? k) (namespace k))"].join(""));
  }
  var spec__$1 = cljs.core.truth_(function() {
    var or__3922__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, spec);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      var or__3922__auto____$1 = cljs.spec.alpha.regex_QMARK_.call(null, spec);
      if (cljs.core.truth_(or__3922__auto____$1)) {
        return or__3922__auto____$1;
      } else {
        return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.alpha.registry_ref), spec);
      }
    }
  }()) ? spec : cljs.spec.alpha.spec_impl.call(null, form, spec, null, null);
  cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.assoc, k, cljs.spec.alpha.with_name.call(null, spec__$1, k));
  return k;
};
cljs.spec.alpha.registry = function cljs$spec$alpha$registry() {
  return cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
};
cljs.spec.alpha.__GT_sym = function cljs$spec$alpha$__GT_sym(x) {
  if (cljs.core.var_QMARK_.call(null, x)) {
    return x.sym;
  } else {
    return x;
  }
};
cljs.spec.alpha.get_spec = function cljs$spec$alpha$get_spec(k) {
  return cljs.core.get.call(null, cljs.spec.alpha.registry.call(null), k instanceof cljs.core.Keyword ? k : cljs.spec.alpha.__GT_sym.call(null, k));
};
cljs.spec.alpha.macroexpand_check = function cljs$spec$alpha$macroexpand_check(v, args) {
  var specs = cljs.spec.alpha.get_spec.call(null, v);
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var arg_spec = temp__4657__auto__;
    if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform.call(null, arg_spec, args)))) {
      var ed = cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, arg_spec, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "args", "args", 1315556576)], null), function() {
        var temp__4655__auto__ = cljs.spec.alpha.spec_name.call(null, arg_spec);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var name = temp__4655__auto__;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
        } else {
          return cljs.core.PersistentVector.EMPTY;
        }
      }(), cljs.core.PersistentVector.EMPTY, args), new cljs.core.Keyword("cljs.spec.alpha", "args", "cljs.spec.alpha/args", 1870769783), args);
      throw new Error(["Call to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.__GT_sym.call(null, v)), " did not conform to spec:\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
        var sb__4430__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR_5264_5266 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR_5265_5267 = cljs.core._STAR_print_fn_STAR_;
        cljs.core._STAR_print_newline_STAR_ = true;
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_5264_5266, _STAR_print_fn_STAR_5265_5267, sb__4430__auto__, ed, arg_spec, temp__4657__auto__, specs) {
          return function(x__4431__auto__) {
            return sb__4430__auto__.append(x__4431__auto__);
          };
        }(_STAR_print_newline_STAR_5264_5266, _STAR_print_fn_STAR_5265_5267, sb__4430__auto__, ed, arg_spec, temp__4657__auto__, specs);
        try {
          cljs.spec.alpha.explain_out.call(null, ed);
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5265_5267;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_5264_5266;
        }
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4430__auto__)].join("");
      }())].join(""));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.recur_limit_QMARK_ = function cljs$spec$alpha$recur_limit_QMARK_(rmap, id, path, k) {
  return cljs.core.get.call(null, rmap, id) > (new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994)).cljs$core$IFn$_invoke$arity$1(rmap) && cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, path), k);
};
cljs.spec.alpha.inck = function cljs$spec$alpha$inck(m, k) {
  return cljs.core.assoc.call(null, m, k, function() {
    var or__3922__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return 0;
    }
  }() + 1);
};
cljs.spec.alpha.dt = function cljs$spec$alpha$dt(var_args) {
  var G__5269 = arguments.length;
  switch(G__5269) {
    case 3:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return cljs.spec.alpha.dt.call(null, pred, x, form, null);
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4 = function(pred, x, form, cpred_QMARK_) {
  if (cljs.core.truth_(pred)) {
    var temp__4655__auto__ = cljs.spec.alpha.the_spec.call(null, pred);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var spec = temp__4655__auto__;
      return cljs.spec.alpha.conform.call(null, spec, x);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, pred)) {
        if (cljs.core.truth_(cpred_QMARK_)) {
          return pred.call(null, x);
        } else {
          if (cljs.core.truth_(pred.call(null, x))) {
            return x;
          } else {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
        }
      } else {
        throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, form)), " is not a fn, expected predicate fn"].join(""));
      }
    }
  } else {
    return x;
  }
};
cljs.spec.alpha.dt.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.valid_QMARK_ = function cljs$spec$alpha$valid_QMARK_(var_args) {
  var G__5272 = arguments.length;
  switch(G__5272) {
    case 2:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(spec, x) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x)));
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(spec, x, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec, form);
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x)));
};
cljs.spec.alpha.valid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.pvalid_QMARK_ = function cljs$spec$alpha$pvalid_QMARK_(var_args) {
  var G__5275 = arguments.length;
  switch(G__5275) {
    case 2:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(pred, x) {
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818))));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, form)));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.explain_1 = function cljs$spec$alpha$explain_1(form, pred, path, via, in$, v) {
  var pred__$1 = cljs.spec.alpha.maybe_spec.call(null, pred);
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred__$1))) {
    return cljs.spec.alpha.explain_STAR_.call(null, pred__$1, path, function() {
      var temp__4655__auto__ = cljs.spec.alpha.spec_name.call(null, pred__$1);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var name = temp__4655__auto__;
        return cljs.core.conj.call(null, via, name);
      } else {
        return via;
      }
    }(), in$, v);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), form, new cljs.core.Keyword(null, "val", "val", 128701612), v, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
  }
};
cljs.spec.alpha.map_spec_impl = function cljs$spec$alpha$map_spec_impl(p__5280) {
  var map__5281 = p__5280;
  var map__5281__$1 = (!(map__5281 == null) ? map__5281.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5281.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5281) : map__5281;
  var argm = map__5281__$1;
  var opt = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369));
  var req_un = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008));
  var opt_un = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496));
  var gfn = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "gfn", "gfn", 791517474));
  var pred_exprs = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "pred-exprs", "pred-exprs", 1792271395));
  var keys_pred = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "keys-pred", "keys-pred", 858984739));
  var opt_keys = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "opt-keys", "opt-keys", 1262688261));
  var req_specs = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "req-specs", "req-specs", 553962313));
  var req = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "req", "req", -326448303));
  var req_keys = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "req-keys", "req-keys", 514319221));
  var opt_specs = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "opt-specs", "opt-specs", -384905450));
  var pred_forms = cljs.core.get.call(null, map__5281__$1, new cljs.core.Keyword(null, "pred-forms", "pred-forms", 172611832));
  var k__GT_s = cljs.core.zipmap.call(null, cljs.core.concat.call(null, req_keys, opt_keys), cljs.core.concat.call(null, req_specs, opt_specs));
  var keys__GT_specnames = function(k__GT_s, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
    return function(p1__5277_SHARP_) {
      var or__3922__auto__ = k__GT_s.call(null, p1__5277_SHARP_);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return p1__5277_SHARP_;
      }
    };
  }(k__GT_s, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
  var id = cljs.core.random_uuid.call(null);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5283 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5283 = function(keys__GT_specnames, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, req, p__5280, map__5281, id, req_keys, opt_specs, k__GT_s, pred_forms, meta5284) {
      this.keys__GT_specnames = keys__GT_specnames;
      this.opt = opt;
      this.req_un = req_un;
      this.opt_un = opt_un;
      this.gfn = gfn;
      this.pred_exprs = pred_exprs;
      this.keys_pred = keys_pred;
      this.argm = argm;
      this.opt_keys = opt_keys;
      this.req_specs = req_specs;
      this.req = req;
      this.p__5280 = p__5280;
      this.map__5281 = map__5281;
      this.id = id;
      this.req_keys = req_keys;
      this.opt_specs = opt_specs;
      this.k__GT_s = k__GT_s;
      this.pred_forms = pred_forms;
      this.meta5284 = meta5284;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_5285, meta5284__$1) {
        var self__ = this;
        var _5285__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5283(self__.keys__GT_specnames, self__.opt, self__.req_un, self__.opt_un, self__.gfn, self__.pred_exprs, self__.keys_pred, self__.argm, self__.opt_keys, self__.req_specs, self__.req, self__.p__5280, self__.map__5281, self__.id, self__.req_keys, self__.opt_specs, self__.k__GT_s, self__.pred_forms, meta5284__$1);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$core$IMeta$_meta$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_5285) {
        var self__ = this;
        var _5285__$1 = this;
        return self__.meta5284;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, m) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.keys_pred.call(null, m))) {
          var reg = cljs.spec.alpha.registry.call(null);
          var ret = m;
          var G__5292 = m;
          var vec__5293 = G__5292;
          var seq__5294 = cljs.core.seq.call(null, vec__5293);
          var first__5295 = cljs.core.first.call(null, seq__5294);
          var seq__5294__$1 = cljs.core.next.call(null, seq__5294);
          var vec__5296 = first__5295;
          var k = cljs.core.nth.call(null, vec__5296, 0, null);
          var v = cljs.core.nth.call(null, vec__5296, 1, null);
          var ks = seq__5294__$1;
          var keys = vec__5293;
          var ret__$1 = ret;
          var G__5292__$1 = G__5292;
          while (true) {
            var ret__$2 = ret__$1;
            var vec__5299 = G__5292__$1;
            var seq__5300 = cljs.core.seq.call(null, vec__5299);
            var first__5301 = cljs.core.first.call(null, seq__5300);
            var seq__5300__$1 = cljs.core.next.call(null, seq__5300);
            var vec__5302 = first__5301;
            var k__$1 = cljs.core.nth.call(null, vec__5302, 0, null);
            var v__$1 = cljs.core.nth.call(null, vec__5302, 1, null);
            var ks__$1 = seq__5300__$1;
            var keys__$1 = vec__5299;
            if (cljs.core.truth_(keys__$1)) {
              var sname = self__.keys__GT_specnames.call(null, k__$1);
              var temp__4655__auto__ = cljs.core.get.call(null, reg, sname);
              if (cljs.core.truth_(temp__4655__auto__)) {
                var s = temp__4655__auto__;
                var cv = cljs.spec.alpha.conform.call(null, s, v__$1);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cv))) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5320 = cv === v__$1 ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, cv);
                  var G__5321 = ks__$1;
                  ret__$1 = G__5320;
                  G__5292__$1 = G__5321;
                  continue;
                }
              } else {
                var G__5322 = ret__$2;
                var G__5323 = ks__$1;
                ret__$1 = G__5322;
                G__5292__$1 = G__5323;
                continue;
              }
            } else {
              return ret__$2;
            }
            break;
          }
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, m) {
        var self__ = this;
        var ___$1 = this;
        var reg = cljs.spec.alpha.registry.call(null);
        var ret = m;
        var G__5308 = cljs.core.keys.call(null, m);
        var vec__5309 = G__5308;
        var seq__5310 = cljs.core.seq.call(null, vec__5309);
        var first__5311 = cljs.core.first.call(null, seq__5310);
        var seq__5310__$1 = cljs.core.next.call(null, seq__5310);
        var k = first__5311;
        var ks = seq__5310__$1;
        var keys = vec__5309;
        var ret__$1 = ret;
        var G__5308__$1 = G__5308;
        while (true) {
          var ret__$2 = ret__$1;
          var vec__5312 = G__5308__$1;
          var seq__5313 = cljs.core.seq.call(null, vec__5312);
          var first__5314 = cljs.core.first.call(null, seq__5313);
          var seq__5313__$1 = cljs.core.next.call(null, seq__5313);
          var k__$1 = first__5314;
          var ks__$1 = seq__5313__$1;
          var keys__$1 = vec__5312;
          if (cljs.core.truth_(keys__$1)) {
            if (cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k__$1))) {
              var cv = cljs.core.get.call(null, m, k__$1);
              var v = cljs.spec.alpha.unform.call(null, self__.keys__GT_specnames.call(null, k__$1), cv);
              var G__5324 = cv === v ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, v);
              var G__5325 = ks__$1;
              ret__$1 = G__5324;
              G__5308__$1 = G__5325;
              continue;
            } else {
              var G__5326 = ret__$2;
              var G__5327 = ks__$1;
              ret__$1 = G__5326;
              G__5308__$1 = G__5327;
              continue;
            }
          } else {
            return ret__$2;
          }
          break;
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (!cljs.core.map_QMARK_.call(null, x)) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], 
          null)], null);
        } else {
          var reg = cljs.spec.alpha.registry.call(null);
          return cljs.core.apply.call(null, cljs.core.concat, function() {
            var temp__4657__auto__ = cljs.core.seq.call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
              return function(pred, form) {
                if (cljs.core.truth_(pred.call(null, x))) {
                  return null;
                } else {
                  return form;
                }
              };
            }(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), self__.pred_exprs, self__.pred_forms)));
            if (temp__4657__auto__) {
              var probs = temp__4657__auto__;
              return cljs.core.map.call(null, function(probs, temp__4657__auto__, reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
                return function(p1__5278_SHARP_) {
                  return cljs.core.identity.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), p1__5278_SHARP_, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
                };
              }(probs, temp__4657__auto__, reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), probs);
            } else {
              return null;
            }
          }(), cljs.core.map.call(null, function(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(p__5315) {
              var vec__5316 = p__5315;
              var k = cljs.core.nth.call(null, vec__5316, 0, null);
              var v = cljs.core.nth.call(null, vec__5316, 1, null);
              if (cljs.core.truth_(function() {
                var or__3922__auto__ = !cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k));
                if (or__3922__auto__) {
                  return or__3922__auto__;
                } else {
                  return cljs.spec.alpha.pvalid_QMARK_.call(null, self__.keys__GT_specnames.call(null, k), v, k);
                }
              }())) {
                return null;
              } else {
                return cljs.spec.alpha.explain_1.call(null, self__.keys__GT_specnames.call(null, k), self__.keys__GT_specnames.call(null, k), cljs.core.conj.call(null, path, k), via, cljs.core.conj.call(null, in$, k), v);
              }
            };
          }(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), cljs.core.seq.call(null, x)));
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
          var gen = function(rmap__$1, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(k, s) {
              return cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k);
            };
          }(rmap__$1, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
          var ogen = function(rmap__$1, gen, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(k, s) {
              if (cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k))) {
                return null;
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, gen, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
                  return function() {
                    return cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k);
                  };
                }(rmap__$1, gen, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), null))], null);
              }
            };
          }(rmap__$1, gen, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
          var req_gens = cljs.core.map.call(null, gen, self__.req_keys, self__.req_specs);
          var opt_gens = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, ogen, self__.opt_keys, self__.opt_specs));
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.concat.call(null, req_gens, opt_gens))) {
            var reqs = cljs.core.zipmap.call(null, self__.req_keys, req_gens);
            var opts = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, opt_gens);
            return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.choose.call(null, 0, cljs.core.count.call(null, opts)), function(reqs, opts, rmap__$1, gen, ogen, req_gens, opt_gens, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
              return function(p1__5279_SHARP_) {
                var args = cljs.core.concat.call(null, cljs.core.seq.call(null, reqs), cljs.core.seq.call(null, opts) ? cljs.core.shuffle.call(null, cljs.core.seq.call(null, opts)) : null);
                return cljs.core.apply.call(null, cljs.spec.gen.alpha.hash_map, cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, p1__5279_SHARP_ + cljs.core.count.call(null, reqs), args)));
              };
            }(reqs, opts, rmap__$1, gen, ogen, req_gens, opt_gens, ___$1, k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms));
          } else {
            return null;
          }
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.map_spec_impl.call(null, cljs.core.assoc.call(null, self__.argm, new cljs.core.Keyword(null, "gfn", "gfn", 791517474), gfn__$1));
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "keys", "cljs.spec.alpha/keys", 1109346032, null), function() {
          var G__5319 = cljs.core.PersistentVector.EMPTY;
          var G__5319__$1 = cljs.core.truth_(self__.req) ? cljs.core.conj.call(null, G__5319, new cljs.core.Keyword(null, "req", "req", -326448303), self__.req) : G__5319;
          var G__5319__$2 = cljs.core.truth_(self__.opt) ? cljs.core.conj.call(null, G__5319__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369), self__.opt) : G__5319__$1;
          var G__5319__$3 = cljs.core.truth_(self__.req_un) ? cljs.core.conj.call(null, G__5319__$2, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008), self__.req_un) : G__5319__$2;
          if (cljs.core.truth_(self__.opt_un)) {
            return cljs.core.conj.call(null, G__5319__$3, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496), self__.opt_un);
          } else {
            return G__5319__$3;
          }
        }());
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.getBasis = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function() {
        return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys-\x3especnames", "keys-\x3especnames", 1791294693, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null), new cljs.core.Symbol(null, "req-un", "req-un", -1579864761, null), new cljs.core.Symbol(null, "opt-un", "opt-un", -1770993273, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "pred-exprs", "pred-exprs", -862164374, 
        null), new cljs.core.Symbol(null, "keys-pred", "keys-pred", -1795451030, null), new cljs.core.Symbol(null, "argm", "argm", -181546357, null), new cljs.core.Symbol(null, "opt-keys", "opt-keys", -1391747508, null), new cljs.core.Symbol(null, "req-specs", "req-specs", -2100473456, null), new cljs.core.Symbol(null, "req", "req", 1314083224, null), new cljs.core.Symbol(null, "p__5280", "p__5280", -1815457223, null), new cljs.core.Symbol(null, "map__5281", "map__5281", 1621875642, null), new cljs.core.Symbol(null, 
        "id", "id", 252129435, null), new cljs.core.Symbol(null, "req-keys", "req-keys", -2140116548, null), new cljs.core.Symbol(null, "opt-specs", "opt-specs", 1255626077, null), new cljs.core.Symbol(null, "k-\x3es", "k-\x3es", -1685112801, null), new cljs.core.Symbol(null, "pred-forms", "pred-forms", 1813143359, null), new cljs.core.Symbol(null, "meta5284", "meta5284", -1449149729, null)], null);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5283.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5283.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5283";
    cljs.spec.alpha.t_cljs$spec$alpha5283.cljs$lang$ctorPrWriter = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5283");
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5283 = function(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function cljs$spec$alpha$map_spec_impl_$___GT_t_cljs$spec$alpha5283(keys__GT_specnames__$1, opt__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, req__$1, p__5280__$1, map__5281__$2, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, pred_forms__$1, meta5284) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5283(keys__GT_specnames__$1, opt__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, req__$1, p__5280__$1, map__5281__$2, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, pred_forms__$1, meta5284);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5281, map__5281__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5283(keys__GT_specnames, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, req, p__5280, map__5281__$1, id, req_keys, opt_specs, k__GT_s, pred_forms, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.spec_impl = function cljs$spec$alpha$spec_impl(var_args) {
  var G__5329 = arguments.length;
  switch(G__5329) {
    case 4:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, gfn, cpred_QMARK_) {
  return cljs.spec.alpha.spec_impl.call(null, form, pred, gfn, cpred_QMARK_, null);
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5 = function(form, pred, gfn, cpred_QMARK_, unc) {
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred))) {
    var G__5330 = pred;
    if (cljs.core.truth_(gfn)) {
      return cljs.spec.alpha.with_gen.call(null, G__5330, gfn);
    } else {
      return G__5330;
    }
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, pred))) {
      return cljs.spec.alpha.regex_spec_impl.call(null, pred, gfn);
    } else {
      if (cljs.core.ident_QMARK_.call(null, pred)) {
        var G__5331 = cljs.spec.alpha.the_spec.call(null, pred);
        if (cljs.core.truth_(gfn)) {
          return cljs.spec.alpha.with_gen.call(null, G__5331, gfn);
        } else {
          return G__5331;
        }
      } else {
        if (typeof cljs.spec.alpha.t_cljs$spec$alpha5332 !== "undefined") {
        } else {
          cljs.spec.alpha.t_cljs$spec$alpha5332 = function(form, pred, gfn, cpred_QMARK_, unc, meta5333) {
            this.form = form;
            this.pred = pred;
            this.gfn = gfn;
            this.cpred_QMARK_ = cpred_QMARK_;
            this.unc = unc;
            this.meta5333 = meta5333;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5334, meta5333__$1) {
            var self__ = this;
            var _5334__$1 = this;
            return new cljs.spec.alpha.t_cljs$spec$alpha5332(self__.form, self__.pred, self__.gfn, self__.cpred_QMARK_, self__.unc, meta5333__$1);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5334) {
            var self__ = this;
            var _5334__$1 = this;
            return self__.meta5333;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            var ret = self__.pred.call(null, x);
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              return ret;
            } else {
              if (cljs.core.truth_(ret)) {
                return x;
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              if (cljs.core.truth_(self__.unc)) {
                return self__.unc.call(null, x);
              } else {
                throw new Error("no unform fn for conformer");
              }
            } else {
              return x;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, self__.pred, x, self__.form, self__.cpred_QMARK_)))) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
            } else {
              return null;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, ___$1, ___$2, ___$3) {
            var self__ = this;
            var ___$4 = this;
            if (cljs.core.truth_(self__.gfn)) {
              return self__.gfn.call(null);
            } else {
              return cljs.spec.gen.alpha.gen_for_pred.call(null, self__.pred);
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
            var self__ = this;
            var ___$1 = this;
            return cljs.spec.alpha.spec_impl.call(null, self__.form, self__.pred, gfn__$1, self__.cpred_QMARK_, self__.unc);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.form;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.getBasis = function() {
            return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "cpred?", "cpred?", 35589515, null), new cljs.core.Symbol(null, "unc", "unc", -465250751, null), new cljs.core.Symbol(null, "meta5333", "meta5333", -1907434251, null)], null);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5332.cljs$lang$type = true;
          cljs.spec.alpha.t_cljs$spec$alpha5332.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5332";
          cljs.spec.alpha.t_cljs$spec$alpha5332.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
            return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5332");
          };
          cljs.spec.alpha.__GT_t_cljs$spec$alpha5332 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha5332(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta5333) {
            return new cljs.spec.alpha.t_cljs$spec$alpha5332(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta5333);
          };
        }
        return new cljs.spec.alpha.t_cljs$spec$alpha5332(form, pred, gfn, cpred_QMARK_, unc, cljs.core.PersistentArrayMap.EMPTY);
      }
    }
  }
};
cljs.spec.alpha.spec_impl.cljs$lang$maxFixedArity = 5;
cljs.spec.alpha.multi_spec_impl = function cljs$spec$alpha$multi_spec_impl(var_args) {
  var G__5342 = arguments.length;
  switch(G__5342) {
    case 3:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3 = function(form, mmvar, retag) {
  return cljs.spec.alpha.multi_spec_impl.call(null, form, mmvar, retag, null);
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, mmvar, retag, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var predx = function(id) {
    return function(p1__5336_SHARP_) {
      var mm = cljs.core.deref.call(null, mmvar);
      var and__3911__auto__ = cljs.core._get_method.call(null, mm, cljs.core._dispatch_fn.call(null, mm).call(null, p1__5336_SHARP_));
      if (cljs.core.truth_(and__3911__auto__)) {
        return mm.call(null, p1__5336_SHARP_);
      } else {
        return and__3911__auto__;
      }
    };
  }(id);
  var dval = function(id, predx) {
    return function(p1__5337_SHARP_) {
      return cljs.core._dispatch_fn.call(null, cljs.core.deref.call(null, mmvar)).call(null, p1__5337_SHARP_);
    };
  }(id, predx);
  var tag = retag instanceof cljs.core.Keyword ? function(id, predx, dval) {
    return function(p1__5338_SHARP_, p2__5339_SHARP_) {
      return cljs.core.assoc.call(null, p1__5338_SHARP_, retag, p2__5339_SHARP_);
    };
  }(id, predx, dval) : retag;
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5343 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5343 = function(form, mmvar, retag, gfn, id, predx, dval, tag, meta5344) {
      this.form = form;
      this.mmvar = mmvar;
      this.retag = retag;
      this.gfn = gfn;
      this.id = id;
      this.predx = predx;
      this.dval = dval;
      this.tag = tag;
      this.meta5344 = meta5344;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(id, predx, dval, tag) {
      return function(_5345, meta5344__$1) {
        var self__ = this;
        var _5345__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5343(self__.form, self__.mmvar, self__.retag, self__.gfn, self__.id, self__.predx, self__.dval, self__.tag, meta5344__$1);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$core$IMeta$_meta$arity$1 = function(id, predx, dval, tag) {
      return function(_5345) {
        var self__ = this;
        var _5345__$1 = this;
        return self__.meta5344;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(id, predx, dval, tag) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var temp__4655__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var pred = temp__4655__auto__;
          return cljs.spec.alpha.dt.call(null, pred, x, self__.form);
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var temp__4655__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var pred = temp__4655__auto__;
          return cljs.spec.alpha.unform.call(null, pred, x);
        } else {
          throw new Error(["No method of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.form), " for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.dval.call(null, x))].join(""));
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(id, predx, dval, tag) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        var dv = self__.dval.call(null, x);
        var path__$1 = cljs.core.conj.call(null, path, dv);
        var temp__4655__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var pred = temp__4655__auto__;
          return cljs.spec.alpha.explain_1.call(null, self__.form, pred, path__$1, via, in$, x);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "no method", new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, 
          "in", "in", -1531184865), in$], null)], null);
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(id, predx, dval, tag) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, id, predx, dval, tag) {
            return function(p__5346) {
              var vec__5347 = p__5346;
              var k = cljs.core.nth.call(null, vec__5347, 0, null);
              var f = cljs.core.nth.call(null, vec__5347, 1, null);
              var p = f.call(null, null);
              var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
              if (cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k))) {
                return null;
              } else {
                return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, p, vec__5347, k, f, ___$1, id, predx, dval, tag) {
                  return function() {
                    return cljs.spec.gen.alpha.fmap.call(null, function(rmap__$1, p, vec__5347, k, f, ___$1, id, predx, dval, tag) {
                      return function(p1__5340_SHARP_) {
                        return self__.tag.call(null, p1__5340_SHARP_, k);
                      };
                    }(rmap__$1, p, vec__5347, k, f, ___$1, id, predx, dval, tag), cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, new cljs.core.List(null, new cljs.core.Symbol(null, "method", "method", 1696235119, null), new cljs.core.List(null, self__.form, new cljs.core.List(null, k, null, 1, null), 2, null), 3, null)));
                  };
                }(rmap__$1, p, vec__5347, k, f, ___$1, id, predx, dval, tag), null));
              }
            };
          }(___$1, id, predx, dval, tag);
          var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, cljs.core.remove.call(null, function(gen, ___$1, id, predx, dval, tag) {
            return function(p__5350) {
              var vec__5351 = p__5350;
              var k = cljs.core.nth.call(null, vec__5351, 0, null);
              return cljs.spec.alpha.invalid_QMARK_.call(null, k);
            };
          }(gen, ___$1, id, predx, dval, tag), cljs.core.methods$.call(null, cljs.core.deref.call(null, self__.mmvar)))));
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
            return cljs.spec.gen.alpha.one_of.call(null, gs);
          } else {
            return null;
          }
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.multi_spec_impl.call(null, self__.form, self__.mmvar, self__.retag, gfn__$1);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(id, predx, dval, tag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "multi-spec", "cljs.spec.alpha/multi-spec", 175821274, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), new cljs.core.List(null, self__.retag, null, 1, null))));
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.getBasis = function(id, predx, dval, tag) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "mmvar", "mmvar", -1714325675, null), new cljs.core.Symbol(null, "retag", "retag", 528972725, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "predx", "predx", 2063470948, null), new cljs.core.Symbol(null, "dval", 
        "dval", 835211877, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "meta5344", "meta5344", -1618230200, null)], null);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5343.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5343.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5343";
    cljs.spec.alpha.t_cljs$spec$alpha5343.cljs$lang$ctorPrWriter = function(id, predx, dval, tag) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5343");
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5343 = function(id, predx, dval, tag) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5343(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta5344) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5343(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta5344);
      };
    }(id, predx, dval, tag);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5343(form, mmvar, retag, gfn, id, predx, dval, tag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.multi_spec_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.tuple_impl = function cljs$spec$alpha$tuple_impl(var_args) {
  var G__5356 = arguments.length;
  switch(G__5356) {
    case 2:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2 = function(forms, preds) {
  return cljs.spec.alpha.tuple_impl.call(null, forms, preds, null);
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3 = function(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cnt = cljs.core.count.call(null, preds);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5357 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5357 = function(forms, preds, gfn, specs, cnt, meta5358) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cnt = cnt;
      this.meta5358 = meta5358;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs, cnt) {
      return function(_5359, meta5358__$1) {
        var self__ = this;
        var _5359__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5357(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cnt, meta5358__$1);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs, cnt) {
      return function(_5359) {
        var self__ = this;
        var _5359__$1 = this;
        return self__.meta5358;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs, cnt) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs, cnt) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs, cnt) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var specs__$1 = cljs.core.deref.call(null, self__.specs);
        if (!(cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), self__.cnt))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          var ret = x;
          var i = 0;
          while (true) {
            if (cljs.core._EQ_.call(null, i, self__.cnt)) {
              return ret;
            } else {
              var v = x.call(null, i);
              var cv = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), v);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cv))) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                var G__5361 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, cv);
                var G__5362 = i + 1;
                ret = G__5361;
                i = G__5362;
                continue;
              }
            }
            break;
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs, cnt) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
        } else {
          throw new Error("Assert failed: (c/and (vector? x) (\x3d (count x) (count preds)))");
        }
        var ret = x;
        var i = 0;
        while (true) {
          if (cljs.core._EQ_.call(null, i, cljs.core.count.call(null, x))) {
            return ret;
          } else {
            var cv = x.call(null, i);
            var v = cljs.spec.alpha.unform.call(null, self__.preds.call(null, i), cv);
            var G__5363 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, v);
            var G__5364 = i + 1;
            ret = G__5363;
            i = G__5364;
            continue;
          }
          break;
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs, cnt) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (!cljs.core.vector_QMARK_.call(null, x)) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), 
          in$], null)], null);
        } else {
          if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
            cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.count.call(null, self__.preds), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
          } else {
            return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(___$1, specs, cnt) {
              return function(i, form, pred) {
                var v = x.call(null, i);
                if (cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, pred, v))) {
                  return null;
                } else {
                  return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, i), via, cljs.core.conj.call(null, in$, i), v);
                }
              };
            }(___$1, specs, cnt), cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.forms, self__.preds));
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs, cnt) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, specs, cnt) {
            return function(i, p, f) {
              return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, i), rmap, f);
            };
          }(___$1, specs, cnt);
          var gs = cljs.core.map.call(null, gen, cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.preds, self__.forms);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
            return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gs);
          } else {
            return null;
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs, cnt) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.tuple_impl.call(null, self__.forms, self__.preds, gfn__$1);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs, cnt) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "tuple", "cljs.spec.alpha/tuple", -415901908, null), null, 1, null), self__.forms)));
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.getBasis = function(specs, cnt) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta5358", "meta5358", -1585512855, null)], null);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5357.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5357.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5357";
    cljs.spec.alpha.t_cljs$spec$alpha5357.cljs$lang$ctorPrWriter = function(specs, cnt) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5357");
      };
    }(specs, cnt);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5357 = function(specs, cnt) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5357(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta5358) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5357(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta5358);
      };
    }(specs, cnt);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5357(forms, preds, gfn, specs, cnt, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.tuple_impl.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.tagged_ret = function cljs$spec$alpha$tagged_ret(tag, ret) {
  return new cljs.core.MapEntry(tag, ret, null);
};
cljs.spec.alpha.or_spec_impl = function cljs$spec$alpha$or_spec_impl(keys, forms, preds, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var kps = cljs.core.zipmap.call(null, keys, preds);
  var specs = new cljs.core.Delay(function(id, kps) {
    return function() {
      return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
    };
  }(id, kps), null);
  var cform = function() {
    var G__5365 = cljs.core.count.call(null, preds);
    switch(G__5365) {
      case 2:
        return function(G__5365, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1))) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
              }
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
            }
          };
        }(G__5365, id, kps, specs);
        break;
      case 3:
        return function(G__5365, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1))) {
                var ret__$2 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), x);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$2))) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 2), ret__$2);
                }
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
              }
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
            }
          };
        }(G__5365, id, kps, specs);
        break;
      default:
        return function(G__5365, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var i = 0;
            while (true) {
              if (i < cljs.core.count.call(null, specs__$1)) {
                var spec = specs__$1.call(null, i);
                var ret = cljs.spec.alpha.conform_STAR_.call(null, spec, x);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
                  var G__5374 = i + 1;
                  i = G__5374;
                  continue;
                } else {
                  return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, i), ret);
                }
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
              break;
            }
          };
        }(G__5365, id, kps, specs);
    }
  }();
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5366 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5366 = function(keys, forms, preds, gfn, id, kps, specs, cform, meta5367) {
      this.keys = keys;
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.id = id;
      this.kps = kps;
      this.specs = specs;
      this.cform = cform;
      this.meta5367 = meta5367;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(id, kps, specs, cform) {
      return function(_5368, meta5367__$1) {
        var self__ = this;
        var _5368__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5366(self__.keys, self__.forms, self__.preds, self__.gfn, self__.id, self__.kps, self__.specs, self__.cform, meta5367__$1);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$core$IMeta$_meta$arity$1 = function(id, kps, specs, cform) {
      return function(_5368) {
        var self__ = this;
        var _5368__$1 = this;
        return self__.meta5367;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(id, kps, specs, cform) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return self__.cform.call(null, x);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, p__5369) {
        var self__ = this;
        var vec__5370 = p__5369;
        var k = cljs.core.nth.call(null, vec__5370, 0, null);
        var x = cljs.core.nth.call(null, vec__5370, 1, null);
        var ___$1 = this;
        return cljs.spec.alpha.unform.call(null, self__.kps.call(null, k), x);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(id, kps, specs, cform) {
      return function(this$, path, via, in$, x) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, this$__$1, x))) {
          return null;
        } else {
          return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(this$__$1, id, kps, specs, cform) {
            return function(k, form, pred) {
              if (cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x))) {
                return null;
              } else {
                return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, k), via, in$, x);
              }
            };
          }(this$__$1, id, kps, specs, cform), self__.keys, self__.forms, self__.preds));
        }
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(id, kps, specs, cform) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, id, kps, specs, cform) {
            return function(k, p, f) {
              var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
              if (cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k))) {
                return null;
              } else {
                return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, ___$1, id, kps, specs, cform) {
                  return function() {
                    return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, f);
                  };
                }(rmap__$1, ___$1, id, kps, specs, cform), null));
              }
            };
          }(___$1, id, kps, specs, cform);
          var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, self__.keys, self__.preds, self__.forms));
          if (cljs.core.empty_QMARK_.call(null, gs)) {
            return null;
          } else {
            return cljs.spec.gen.alpha.one_of.call(null, gs);
          }
        }
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.or_spec_impl.call(null, self__.keys, self__.forms, self__.preds, gfn__$1);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(id, kps, specs, cform) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "or", "cljs.spec.alpha/or", -831679639, null), null, 1, null), cljs.core.mapcat.call(null, cljs.core.vector, self__.keys, self__.forms))));
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.getBasis = function(id, kps, specs, cform) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "kps", "kps", -1157342767, null), new cljs.core.Symbol(null, "specs", 
        "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta5367", "meta5367", -794147781, null)], null);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5366.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5366.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5366";
    cljs.spec.alpha.t_cljs$spec$alpha5366.cljs$lang$ctorPrWriter = function(id, kps, specs, cform) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5366");
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5366 = function(id, kps, specs, cform) {
      return function cljs$spec$alpha$or_spec_impl_$___GT_t_cljs$spec$alpha5366(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta5367) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5366(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta5367);
      };
    }(id, kps, specs, cform);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5366(keys, forms, preds, gfn, id, kps, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.and_preds = function cljs$spec$alpha$and_preds(x, preds, forms) {
  var ret = x;
  var G__5381 = preds;
  var vec__5383 = G__5381;
  var seq__5384 = cljs.core.seq.call(null, vec__5383);
  var first__5385 = cljs.core.first.call(null, seq__5384);
  var seq__5384__$1 = cljs.core.next.call(null, seq__5384);
  var pred = first__5385;
  var preds__$1 = seq__5384__$1;
  var G__5382 = forms;
  var vec__5386 = G__5382;
  var seq__5387 = cljs.core.seq.call(null, vec__5386);
  var first__5388 = cljs.core.first.call(null, seq__5387);
  var seq__5387__$1 = cljs.core.next.call(null, seq__5387);
  var form = first__5388;
  var forms__$1 = seq__5387__$1;
  var ret__$1 = ret;
  var G__5381__$1 = G__5381;
  var G__5382__$1 = G__5382;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__5389 = G__5381__$1;
    var seq__5390 = cljs.core.seq.call(null, vec__5389);
    var first__5391 = cljs.core.first.call(null, seq__5390);
    var seq__5390__$1 = cljs.core.next.call(null, seq__5390);
    var pred__$1 = first__5391;
    var preds__$2 = seq__5390__$1;
    var vec__5392 = G__5382__$1;
    var seq__5393 = cljs.core.seq.call(null, vec__5392);
    var first__5394 = cljs.core.first.call(null, seq__5393);
    var seq__5393__$1 = cljs.core.next.call(null, seq__5393);
    var form__$1 = first__5394;
    var forms__$2 = seq__5393__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, nret))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        var G__5395 = nret;
        var G__5396 = preds__$2;
        var G__5397 = forms__$2;
        ret__$1 = G__5395;
        G__5381__$1 = G__5396;
        G__5382__$1 = G__5397;
        continue;
      }
    } else {
      return ret__$2;
    }
    break;
  }
};
cljs.spec.alpha.explain_pred_list = function cljs$spec$alpha$explain_pred_list(forms, preds, path, via, in$, x) {
  var ret = x;
  var G__5404 = forms;
  var vec__5406 = G__5404;
  var seq__5407 = cljs.core.seq.call(null, vec__5406);
  var first__5408 = cljs.core.first.call(null, seq__5407);
  var seq__5407__$1 = cljs.core.next.call(null, seq__5407);
  var form = first__5408;
  var forms__$1 = seq__5407__$1;
  var G__5405 = preds;
  var vec__5409 = G__5405;
  var seq__5410 = cljs.core.seq.call(null, vec__5409);
  var first__5411 = cljs.core.first.call(null, seq__5410);
  var seq__5410__$1 = cljs.core.next.call(null, seq__5410);
  var pred = first__5411;
  var preds__$1 = seq__5410__$1;
  var ret__$1 = ret;
  var G__5404__$1 = G__5404;
  var G__5405__$1 = G__5405;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__5412 = G__5404__$1;
    var seq__5413 = cljs.core.seq.call(null, vec__5412);
    var first__5414 = cljs.core.first.call(null, seq__5413);
    var seq__5413__$1 = cljs.core.next.call(null, seq__5413);
    var form__$1 = first__5414;
    var forms__$2 = seq__5413__$1;
    var vec__5415 = G__5405__$1;
    var seq__5416 = cljs.core.seq.call(null, vec__5415);
    var first__5417 = cljs.core.first.call(null, seq__5416);
    var seq__5416__$1 = cljs.core.next.call(null, seq__5416);
    var pred__$1 = first__5417;
    var preds__$2 = seq__5416__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, nret))) {
        return cljs.spec.alpha.explain_1.call(null, form__$1, pred__$1, path, via, in$, ret__$2);
      } else {
        var G__5418 = nret;
        var G__5419 = forms__$2;
        var G__5420 = preds__$2;
        ret__$1 = G__5418;
        G__5404__$1 = G__5419;
        G__5405__$1 = G__5420;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.spec.alpha.and_spec_impl = function cljs$spec$alpha$and_spec_impl(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cform = function() {
    var G__5423 = cljs.core.count.call(null, preds);
    switch(G__5423) {
      case 2:
        return function(G__5423, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
            }
          };
        }(G__5423, specs);
        break;
      case 3:
        return function(G__5423, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1))) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), ret__$1);
              }
            }
          };
        }(G__5423, specs);
        break;
      default:
        return function(G__5423, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = x;
            var i = 0;
            while (true) {
              if (i < cljs.core.count.call(null, specs__$1)) {
                var nret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), ret);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, nret))) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5428 = nret;
                  var G__5429 = i + 1;
                  ret = G__5428;
                  i = G__5429;
                  continue;
                }
              } else {
                return ret;
              }
              break;
            }
          };
        }(G__5423, specs);
    }
  }();
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5424 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5424 = function(forms, preds, gfn, specs, cform, meta5425) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cform = cform;
      this.meta5425 = meta5425;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs, cform) {
      return function(_5426, meta5425__$1) {
        var self__ = this;
        var _5426__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5424(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cform, meta5425__$1);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs, cform) {
      return function(_5426) {
        var self__ = this;
        var _5426__$1 = this;
        return self__.meta5425;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs, cform) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs, cform) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return self__.cform.call(null, x);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.reduce.call(null, function(___$1, specs, cform) {
          return function(p1__5422_SHARP_, p2__5421_SHARP_) {
            return cljs.spec.alpha.unform.call(null, p2__5421_SHARP_, p1__5422_SHARP_);
          };
        }(___$1, specs, cform), x, cljs.core.reverse.call(null, self__.preds));
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs, cform) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.explain_pred_list.call(null, self__.forms, self__.preds, path, via, in$, x);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs, cform) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.alpha.gensub.call(null, cljs.core.first.call(null, self__.preds), overrides, path, rmap, cljs.core.first.call(null, self__.forms));
        }
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs, cform) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.and_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs, cform) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "and", "cljs.spec.alpha/and", -2060279705, null), null, 1, null), self__.forms)));
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.getBasis = function(specs, cform) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta5425", "meta5425", -1927586039, null)], null);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5424.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5424.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5424";
    cljs.spec.alpha.t_cljs$spec$alpha5424.cljs$lang$ctorPrWriter = function(specs, cform) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5424");
      };
    }(specs, cform);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5424 = function(specs, cform) {
      return function cljs$spec$alpha$and_spec_impl_$___GT_t_cljs$spec$alpha5424(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta5425) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5424(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta5425);
      };
    }(specs, cform);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5424(forms, preds, gfn, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.coll_prob = function cljs$spec$alpha$coll_prob(x, kfn, kform, distinct, count, min_count, max_count, path, via, in$) {
  var pred = function() {
    var or__3922__auto__ = kfn;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.core.coll_QMARK_;
    }
  }();
  var kform__$1 = function() {
    var or__3922__auto__ = kform;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null);
    }
  }();
  if (cljs.core.not.call(null, cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x))) {
    return cljs.spec.alpha.explain_1.call(null, kform__$1, pred, path, via, in$, x);
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = count;
      if (cljs.core.truth_(and__3911__auto__)) {
        return cljs.core.not_EQ_.call(null, count, cljs.core.bounded_count.call(null, count, x));
      } else {
        return and__3911__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, count, null, 
      1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), in$], null)], null);
    } else {
      if (cljs.core.truth_(function() {
        var and__3911__auto__ = function() {
          var or__3922__auto__ = min_count;
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return max_count;
          }
        }();
        if (cljs.core.truth_(and__3911__auto__)) {
          return !(function() {
            var or__3922__auto__ = min_count;
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return 0;
            }
          }() <= cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) && cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) <= function() {
            var or__3922__auto__ = max_count;
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return 9007199254740991;
            }
          }());
        } else {
          return and__3911__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null), null, 1, null), new cljs.core.List(null, function() {
          var or__3922__auto__ = min_count;
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return 0;
          }
        }(), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, function() {
          var or__3922__auto__ = max_count;
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return 9007199254740991;
          }
        }(), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      } else {
        if (cljs.core.truth_(function() {
          var and__3911__auto__ = distinct;
          if (cljs.core.truth_(and__3911__auto__)) {
            return !cljs.core.empty_QMARK_.call(null, x) && cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core.distinct_QMARK_, x));
          } else {
            return and__3911__auto__;
          }
        }())) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "distinct?", "distinct?", -1684357959, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), 
          in$], null)], null);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.spec.alpha.merge_spec_impl = function cljs$spec$alpha$merge_spec_impl(forms, preds, gfn) {
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5438 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5438 = function(forms, preds, gfn, meta5439) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.meta5439 = meta5439;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5440, meta5439__$1) {
      var self__ = this;
      var _5440__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha5438(self__.forms, self__.preds, self__.gfn, meta5439__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5440) {
      var self__ = this;
      var _5440__$1 = this;
      return self__.meta5439;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var ms = cljs.core.map.call(null, function(___$1) {
        return function(p1__5430_SHARP_, p2__5431_SHARP_) {
          return cljs.spec.alpha.dt.call(null, p1__5430_SHARP_, x, p2__5431_SHARP_);
        };
      }(___$1), self__.preds, self__.forms);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.spec.alpha.invalid_QMARK_, ms))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        return cljs.core.apply.call(null, cljs.core.merge, ms);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, function(___$1) {
        return function(p1__5432_SHARP_) {
          return cljs.spec.alpha.unform.call(null, p1__5432_SHARP_, x);
        };
      }(___$1), cljs.core.reverse.call(null, self__.preds)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(___$1) {
        return function(p1__5433_SHARP_, p2__5434_SHARP_) {
          return cljs.spec.alpha.explain_1.call(null, p1__5433_SHARP_, p2__5434_SHARP_, path, via, in$, x);
        };
      }(___$1), self__.forms, self__.preds));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.gen.alpha.fmap.call(null, function(___$1) {
          return function(p1__5435_SHARP_) {
            return cljs.core.apply.call(null, cljs.core.merge, p1__5435_SHARP_);
          };
        }(___$1), cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, function(___$1) {
          return function(p1__5436_SHARP_, p2__5437_SHARP_) {
            return cljs.spec.alpha.gensub.call(null, p1__5436_SHARP_, overrides, path, rmap, p2__5437_SHARP_);
          };
        }(___$1), self__.preds, self__.forms)));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.merge_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "merge", "cljs.spec.alpha/merge", 1420080689, null), null, 1, null), self__.forms)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta5439", "meta5439", 1870297618, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5438.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5438.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5438";
    cljs.spec.alpha.t_cljs$spec$alpha5438.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5438");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5438 = function cljs$spec$alpha$merge_spec_impl_$___GT_t_cljs$spec$alpha5438(forms__$1, preds__$1, gfn__$1, meta5439) {
      return new cljs.spec.alpha.t_cljs$spec$alpha5438(forms__$1, preds__$1, gfn__$1, meta5439);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5438(forms, preds, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl = function cljs$spec$alpha$every_impl(var_args) {
  var G__5446 = arguments.length;
  switch(G__5446) {
    case 3:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3 = function(form, pred, opts) {
  return cljs.spec.alpha.every_impl.call(null, form, pred, opts, null);
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, p__5447, gfn) {
  var map__5448 = p__5447;
  var map__5448__$1 = (!(map__5448 == null) ? map__5448.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5448.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5448) : map__5448;
  var opts = map__5448__$1;
  var max_count = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "max-count", "max-count", 1539185305));
  var kind_form = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword("cljs.spec.alpha", "kind-form", "cljs.spec.alpha/kind-form", -1047104697));
  var gen_max = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "gen-max", "gen-max", -793680445), 20);
  var cpred = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword("cljs.spec.alpha", "cpred", "cljs.spec.alpha/cpred", -693471218));
  var conform_keys = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "conform-keys", "conform-keys", -1800041814));
  var describe_form = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword("cljs.spec.alpha", "describe", "cljs.spec.alpha/describe", 1883026911));
  var distinct = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "distinct", "distinct", -1788879121));
  var kfn = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword("cljs.spec.alpha", "kfn", "cljs.spec.alpha/kfn", 672643897));
  var gen_into = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "into", "into", -150836029));
  var count = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  var min_count = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "min-count", "min-count", 1594709013));
  var kind = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword(null, "kind", "kind", -717265803));
  var conform_all = cljs.core.get.call(null, map__5448__$1, new cljs.core.Keyword("cljs.spec.alpha", "conform-all", "cljs.spec.alpha/conform-all", 45201917));
  var conform_into = gen_into;
  var spec = new cljs.core.Delay(function(conform_into, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
    return function() {
      return cljs.spec.alpha.specize.call(null, pred);
    };
  }(conform_into, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), null);
  var check_QMARK_ = function(conform_into, spec, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
    return function(p1__5441_SHARP_) {
      return cljs.spec.alpha.valid_QMARK_.call(null, cljs.core.deref.call(null, spec), p1__5441_SHARP_);
    };
  }(conform_into, spec, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
  var kfn__$1 = function() {
    var or__3922__auto__ = kfn;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return function(or__3922__auto__, conform_into, spec, check_QMARK_, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
        return function(i, v) {
          return i;
        };
      }(or__3922__auto__, conform_into, spec, check_QMARK_, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    }
  }();
  var addcv = function(conform_into, spec, check_QMARK_, kfn__$1, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
    return function(ret, i, v, cv) {
      return cljs.core.conj.call(null, ret, cv);
    };
  }(conform_into, spec, check_QMARK_, kfn__$1, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
  var cfns = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
    return function(x) {
      if (cljs.core.vector_QMARK_.call(null, x) && (cljs.core.not.call(null, conform_into) || cljs.core.vector_QMARK_.call(null, conform_into))) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.identity, function(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
          return function(ret, i, v, cv) {
            if (v === cv) {
              return ret;
            } else {
              return cljs.core.assoc.call(null, ret, i, cv);
            }
          };
        }(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), cljs.core.identity], null);
      } else {
        if (cljs.core.truth_(function() {
          var and__3911__auto__ = cljs.core.map_QMARK_.call(null, x);
          if (and__3911__auto__) {
            var or__3922__auto__ = function() {
              var and__3911__auto____$1 = kind;
              if (cljs.core.truth_(and__3911__auto____$1)) {
                return cljs.core.not.call(null, conform_into);
              } else {
                return and__3911__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return cljs.core.map_QMARK_.call(null, conform_into);
            }
          } else {
            return and__3911__auto__;
          }
        }())) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(conform_keys) ? cljs.core.empty : cljs.core.identity, function(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
            return function(ret, i, v, cv) {
              if (v === cv && cljs.core.not.call(null, conform_keys)) {
                return ret;
              } else {
                return cljs.core.assoc.call(null, ret, cljs.core.nth.call(null, cljs.core.truth_(conform_keys) ? cv : v, 0), cljs.core.nth.call(null, cv, 1));
              }
            };
          }(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), cljs.core.identity], null);
        } else {
          if (cljs.core.list_QMARK_.call(null, conform_into) || cljs.core.seq_QMARK_.call(null, conform_into) || cljs.core.not.call(null, conform_into) && (cljs.core.list_QMARK_.call(null, x) || cljs.core.seq_QMARK_.call(null, x))) {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.empty, addcv, cljs.core.reverse], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
              return function(p1__5442_SHARP_) {
                return cljs.core.empty.call(null, function() {
                  var or__3922__auto__ = conform_into;
                  if (cljs.core.truth_(or__3922__auto__)) {
                    return or__3922__auto__;
                  } else {
                    return p1__5442_SHARP_;
                  }
                }());
              };
            }(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), addcv, cljs.core.identity], null);
          }
        }
      }
    };
  }(conform_into, spec, check_QMARK_, kfn__$1, addcv, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5450 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5450 = function(form, max_count, check_QMARK_, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, p__5447, map__5448, spec, kfn, gen_into, count, min_count, opts, kind, conform_all, conform_into, meta5451) {
      this.form = form;
      this.max_count = max_count;
      this.check_QMARK_ = check_QMARK_;
      this.gfn = gfn;
      this.gen_max = gen_max;
      this.pred = pred;
      this.cpred = cpred;
      this.conform_keys = conform_keys;
      this.kind_form = kind_form;
      this.addcv = addcv;
      this.cfns = cfns;
      this.describe_form = describe_form;
      this.distinct = distinct;
      this.p__5447 = p__5447;
      this.map__5448 = map__5448;
      this.spec = spec;
      this.kfn = kfn;
      this.gen_into = gen_into;
      this.count = count;
      this.min_count = min_count;
      this.opts = opts;
      this.kind = kind;
      this.conform_all = conform_all;
      this.conform_into = conform_into;
      this.meta5451 = meta5451;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_5452, meta5451__$1) {
        var self__ = this;
        var _5452__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5450(self__.form, self__.max_count, self__.check_QMARK_, self__.gfn, self__.gen_max, self__.pred, self__.cpred, self__.conform_keys, self__.kind_form, self__.addcv, self__.cfns, self__.describe_form, self__.distinct, self__.p__5447, self__.map__5448, self__.spec, self__.kfn, self__.gen_into, self__.count, self__.min_count, self__.opts, self__.kind, self__.conform_all, self__.conform_into, meta5451__$1);
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$core$IMeta$_meta$arity$1 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_5452) {
        var self__ = this;
        var _5452__$1 = this;
        return self__.meta5451;
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var spec__$1 = cljs.core.deref.call(null, self__.spec);
        if (cljs.core.not.call(null, self__.cpred.call(null, x))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          if (cljs.core.truth_(self__.conform_all)) {
            var vec__5453 = self__.cfns.call(null, x);
            var init = cljs.core.nth.call(null, vec__5453, 0, null);
            var add = cljs.core.nth.call(null, vec__5453, 1, null);
            var complete = cljs.core.nth.call(null, vec__5453, 2, null);
            var ret = init.call(null, x);
            var i = 0;
            var G__5459 = cljs.core.seq.call(null, x);
            var vec__5460 = G__5459;
            var seq__5461 = cljs.core.seq.call(null, vec__5460);
            var first__5462 = cljs.core.first.call(null, seq__5461);
            var seq__5461__$1 = cljs.core.next.call(null, seq__5461);
            var v = first__5462;
            var vs = seq__5461__$1;
            var vseq = vec__5460;
            var ret__$1 = ret;
            var i__$1 = i;
            var G__5459__$1 = G__5459;
            while (true) {
              var ret__$2 = ret__$1;
              var i__$2 = i__$1;
              var vec__5463 = G__5459__$1;
              var seq__5464 = cljs.core.seq.call(null, vec__5463);
              var first__5465 = cljs.core.first.call(null, seq__5464);
              var seq__5464__$1 = cljs.core.next.call(null, seq__5464);
              var v__$1 = first__5465;
              var vs__$1 = seq__5464__$1;
              var vseq__$1 = vec__5463;
              if (vseq__$1) {
                var cv = cljs.spec.alpha.conform_STAR_.call(null, spec__$1, v__$1);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cv))) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5490 = add.call(null, ret__$2, i__$2, v__$1, cv);
                  var G__5491 = i__$2 + 1;
                  var G__5492 = vs__$1;
                  ret__$1 = G__5490;
                  i__$1 = G__5491;
                  G__5459__$1 = G__5492;
                  continue;
                }
              } else {
                return complete.call(null, ret__$2);
              }
              break;
            }
          } else {
            if (cljs.core.indexed_QMARK_.call(null, x)) {
              var step = function() {
                var x__4006__auto__ = 1;
                var y__4007__auto__ = cljs.core.long$.call(null, cljs.core.count.call(null, x) / cljs.spec.alpha._STAR_coll_check_limit_STAR_);
                return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
              }();
              var i = 0;
              while (true) {
                if (i >= cljs.core.count.call(null, x)) {
                  return x;
                } else {
                  if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, cljs.core.nth.call(null, x, i)))) {
                    var G__5493 = i + step;
                    i = G__5493;
                    continue;
                  } else {
                    return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                  }
                }
                break;
              }
            } else {
              var limit = cljs.spec.alpha._STAR_coll_check_limit_STAR_;
              var i = 0;
              var G__5469 = cljs.core.seq.call(null, x);
              var vec__5470 = G__5469;
              var seq__5471 = cljs.core.seq.call(null, vec__5470);
              var first__5472 = cljs.core.first.call(null, seq__5471);
              var seq__5471__$1 = cljs.core.next.call(null, seq__5471);
              var v = first__5472;
              var vs = seq__5471__$1;
              var vseq = vec__5470;
              var i__$1 = i;
              var G__5469__$1 = G__5469;
              while (true) {
                var i__$2 = i__$1;
                var vec__5473 = G__5469__$1;
                var seq__5474 = cljs.core.seq.call(null, vec__5473);
                var first__5475 = cljs.core.first.call(null, seq__5474);
                var seq__5474__$1 = cljs.core.next.call(null, seq__5474);
                var v__$1 = first__5475;
                var vs__$1 = seq__5474__$1;
                var vseq__$1 = vec__5473;
                if (vseq__$1 == null || cljs.core._EQ_.call(null, i__$2, limit)) {
                  return x;
                } else {
                  if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, v__$1))) {
                    var G__5494 = i__$2 + 1;
                    var G__5495 = vs__$1;
                    i__$1 = G__5494;
                    G__5469__$1 = G__5495;
                    continue;
                  } else {
                    return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                  }
                }
                break;
              }
            }
          }
        }
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.conform_all)) {
          var spec__$1 = cljs.core.deref.call(null, self__.spec);
          var vec__5476 = self__.cfns.call(null, x);
          var init = cljs.core.nth.call(null, vec__5476, 0, null);
          var add = cljs.core.nth.call(null, vec__5476, 1, null);
          var complete = cljs.core.nth.call(null, vec__5476, 2, null);
          var ret = init.call(null, x);
          var i = 0;
          var G__5482 = cljs.core.seq.call(null, x);
          var vec__5483 = G__5482;
          var seq__5484 = cljs.core.seq.call(null, vec__5483);
          var first__5485 = cljs.core.first.call(null, seq__5484);
          var seq__5484__$1 = cljs.core.next.call(null, seq__5484);
          var v = first__5485;
          var vs = seq__5484__$1;
          var vseq = vec__5483;
          var ret__$1 = ret;
          var i__$1 = i;
          var G__5482__$1 = G__5482;
          while (true) {
            var ret__$2 = ret__$1;
            var i__$2 = i__$1;
            var vec__5486 = G__5482__$1;
            var seq__5487 = cljs.core.seq.call(null, vec__5486);
            var first__5488 = cljs.core.first.call(null, seq__5487);
            var seq__5487__$1 = cljs.core.next.call(null, seq__5487);
            var v__$1 = first__5488;
            var vs__$1 = seq__5487__$1;
            var vseq__$1 = vec__5486;
            if (i__$2 >= cljs.core.count.call(null, x)) {
              return complete.call(null, ret__$2);
            } else {
              var G__5496 = add.call(null, ret__$2, i__$2, v__$1, cljs.spec.alpha.unform_STAR_.call(null, spec__$1, v__$1));
              var G__5497 = i__$2 + 1;
              var G__5498 = vs__$1;
              ret__$1 = G__5496;
              i__$1 = G__5497;
              G__5482__$1 = G__5498;
              continue;
            }
            break;
          }
        } else {
          return x;
        }
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        var or__3922__auto__ = cljs.spec.alpha.coll_prob.call(null, x, self__.kind, self__.kind_form, self__.distinct, self__.count, self__.min_count, self__.max_count, path, via, in$);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.apply.call(null, cljs.core.concat, (cljs.core.truth_(self__.conform_all) ? cljs.core.identity : cljs.core.partial.call(null, cljs.core.take, cljs.spec.alpha._STAR_coll_error_limit_STAR_)).call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(or__3922__auto__, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, 
          gen_into, count, min_count, kind, conform_all) {
            return function(i, v) {
              var k = self__.kfn.call(null, i, v);
              if (cljs.core.truth_(self__.check_QMARK_.call(null, v))) {
                return null;
              } else {
                var prob = cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, path, via, cljs.core.conj.call(null, in$, k), v);
                return prob;
              }
            };
          }(or__3922__auto__, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), cljs.core.range.call(null), x))));
        }
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var pgen = cljs.spec.alpha.gensub.call(null, self__.pred, overrides, path, rmap, self__.form);
          return cljs.spec.gen.alpha.bind.call(null, cljs.core.truth_(self__.gen_into) ? cljs.spec.gen.alpha.return$.call(null, cljs.core.empty.call(null, self__.gen_into)) : cljs.core.truth_(self__.kind) ? cljs.spec.gen.alpha.fmap.call(null, function(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
            return function(p1__5443_SHARP_) {
              if (cljs.core.empty_QMARK_.call(null, p1__5443_SHARP_)) {
                return p1__5443_SHARP_;
              } else {
                return cljs.core.empty.call(null, p1__5443_SHARP_);
              }
            };
          }(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), cljs.spec.alpha.gensub.call(null, self__.kind, overrides, path, rmap, self__.form)) : cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY), function(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, 
          opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
            return function(init) {
              return cljs.spec.gen.alpha.fmap.call(null, function(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
                return function(p1__5444_SHARP_) {
                  if (cljs.core.vector_QMARK_.call(null, init)) {
                    return p1__5444_SHARP_;
                  } else {
                    return cljs.core.into.call(null, init, p1__5444_SHARP_);
                  }
                };
              }(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all), cljs.core.truth_(self__.distinct) ? cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "num-elements", "num-elements", 1960422107), self__.count, new cljs.core.Keyword(null, 
              "max-tries", "max-tries", -1824441792), 100], null)) : cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "min-elements", "min-elements", 949370780), function() {
                var or__3922__auto__ = self__.min_count;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  return 0;
                }
              }(), new cljs.core.Keyword(null, "max-elements", "max-elements", 433034073), function() {
                var or__3922__auto__ = self__.max_count;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  var x__4006__auto__ = self__.gen_max;
                  var y__4007__auto__ = 2 * function() {
                    var or__3922__auto____$1 = self__.min_count;
                    if (cljs.core.truth_(or__3922__auto____$1)) {
                      return or__3922__auto____$1;
                    } else {
                      return 0;
                    }
                  }();
                  return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
                }
              }(), new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector.call(null, pgen, self__.count) : cljs.core.truth_(function() {
                var or__3922__auto__ = self__.min_count;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  return self__.max_count;
                }
              }()) ? cljs.spec.gen.alpha.vector.call(null, pgen, function() {
                var or__3922__auto__ = self__.min_count;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  return 0;
                }
              }(), function() {
                var or__3922__auto__ = self__.max_count;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  var x__4006__auto__ = self__.gen_max;
                  var y__4007__auto__ = 2 * function() {
                    var or__3922__auto____$1 = self__.min_count;
                    if (cljs.core.truth_(or__3922__auto____$1)) {
                      return or__3922__auto____$1;
                    } else {
                      return 0;
                    }
                  }();
                  return x__4006__auto__ > y__4007__auto__ ? x__4006__auto__ : y__4007__auto__;
                }
              }()) : cljs.spec.gen.alpha.vector.call(null, pgen, 0, self__.gen_max));
            };
          }(pgen, ___$1, conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all));
        }
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.every_impl.call(null, self__.form, self__.pred, self__.opts, gfn__$1);
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var or__3922__auto__ = self__.describe_form;
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "every", "cljs.spec.alpha/every", 123912744, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), cljs.core.mapcat.call(null, cljs.core.identity, self__.opts))));
        }
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.getBasis = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function() {
        return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "max-count", "max-count", -1115250464, null), new cljs.core.Symbol(null, "check?", "check?", 409539557, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "gen-max", "gen-max", 846851082, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, 
        "cpred", "cpred", -540353554, null), new cljs.core.Symbol(null, "conform-keys", "conform-keys", -159510287, null), new cljs.core.Symbol(null, "kind-form", "kind-form", 1155997457, null), new cljs.core.Symbol(null, "addcv", "addcv", -1552991247, null), new cljs.core.Symbol(null, "cfns", "cfns", 1335482066, null), new cljs.core.Symbol(null, "describe-form", "describe-form", -1410156588, null), new cljs.core.Symbol(null, "distinct", "distinct", -148347594, null), new cljs.core.Symbol(null, "p__5447", 
        "p__5447", 690763607, null), new cljs.core.Symbol(null, "map__5448", "map__5448", 1418942968, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "kfn", "kfn", 729311001, null), new cljs.core.Symbol(null, "gen-into", "gen-into", 592640985, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "min-count", "min-count", -1059726756, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, 
        "kind", "kind", 923265724, null), new cljs.core.Symbol(null, "conform-all", "conform-all", -980179459, null), new cljs.core.Symbol(null, "conform-into", "conform-into", -1039113729, null), new cljs.core.Symbol(null, "meta5451", "meta5451", 381718230, null)], null);
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.t_cljs$spec$alpha5450.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5450.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5450";
    cljs.spec.alpha.t_cljs$spec$alpha5450.cljs$lang$ctorPrWriter = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5450");
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5450 = function(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5450(form__$1, max_count__$1, check_QMARK___$1, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, p__5447__$1, map__5448__$2, spec__$1, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta5451) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5450(form__$1, max_count__$1, check_QMARK___$1, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, p__5447__$1, map__5448__$2, spec__$1, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta5451);
      };
    }(conform_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5448, map__5448__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, gen_into, count, min_count, kind, conform_all);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5450(form, max_count, check_QMARK_, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, p__5447, map__5448__$1, spec, kfn__$1, gen_into, count, min_count, opts, kind, conform_all, conform_into, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.accept = function cljs$spec$alpha$accept(x) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), new cljs.core.Keyword(null, "ret", "ret", -468222814), x], null);
};
cljs.spec.alpha.accept_QMARK_ = function cljs$spec$alpha$accept_QMARK_(p__5499) {
  var map__5500 = p__5499;
  var map__5500__$1 = (!(map__5500 == null) ? map__5500.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5500.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5500) : map__5500;
  var op = cljs.core.get.call(null, map__5500__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), op);
};
cljs.spec.alpha.pcat_STAR_ = function cljs$spec$alpha$pcat_STAR_(p__5502) {
  var map__5503 = p__5502;
  var map__5503__$1 = (!(map__5503 == null) ? map__5503.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5503.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5503) : map__5503;
  var vec__5504 = cljs.core.get.call(null, map__5503__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__5505 = cljs.core.seq.call(null, vec__5504);
  var first__5506 = cljs.core.first.call(null, seq__5505);
  var seq__5505__$1 = cljs.core.next.call(null, seq__5505);
  var p1 = first__5506;
  var pr = seq__5505__$1;
  var ps = vec__5504;
  var vec__5507 = cljs.core.get.call(null, map__5503__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__5508 = cljs.core.seq.call(null, vec__5507);
  var first__5509 = cljs.core.first.call(null, seq__5508);
  var seq__5508__$1 = cljs.core.next.call(null, seq__5508);
  var k1 = first__5509;
  var kr = seq__5508__$1;
  var ks = vec__5507;
  var vec__5510 = cljs.core.get.call(null, map__5503__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var seq__5511 = cljs.core.seq.call(null, vec__5510);
  var first__5512 = cljs.core.first.call(null, seq__5511);
  var seq__5511__$1 = cljs.core.next.call(null, seq__5511);
  var f1 = first__5512;
  var fr = seq__5511__$1;
  var forms = vec__5510;
  var ret = cljs.core.get.call(null, map__5503__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var rep_PLUS_ = cljs.core.get.call(null, map__5503__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ps)) {
    if (cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, p1))) {
      var rp = (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1);
      var ret__$1 = cljs.core.conj.call(null, ret, cljs.core.truth_(ks) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k1, rp]) : rp);
      if (pr) {
        return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), fr, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret__$1], null));
      } else {
        return cljs.spec.alpha.accept.call(null, ret__$1);
      }
    } else {
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "rep+", "rep+", 
      -281382396), rep_PLUS_], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.pcat = function cljs$spec$alpha$pcat(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___5515 = arguments.length;
  var i__4500__auto___5516 = 0;
  while (true) {
    if (i__4500__auto___5516 < len__4499__auto___5515) {
      args__4502__auto__.push(arguments[i__4500__auto___5516]);
      var G__5517 = i__4500__auto___5516 + 1;
      i__4500__auto___5516 = G__5517;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY], null));
};
cljs.spec.alpha.pcat.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.pcat.cljs$lang$applyTo = function(seq5514) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5514));
};
cljs.spec.alpha.cat_impl = function cljs$spec$alpha$cat_impl(ks, ps, forms) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.spec.alpha.rep_STAR_ = function cljs$spec$alpha$rep_STAR_(p1, p2, ret, splice, form) {
  if (cljs.core.truth_(p1)) {
    var r = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), new cljs.core.Keyword(null, "p2", "p2", 905500641), p2, new cljs.core.Keyword(null, "splice", "splice", 449588165), splice, new cljs.core.Keyword(null, "forms", "forms", 2045992350), form, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null)], null);
    if (cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, p1))) {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p2, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.conj.call(null, ret, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
    } else {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p1, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.rep_impl = function cljs$spec$alpha$rep_impl(form, p) {
  return cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, false, form);
};
cljs.spec.alpha.rep_PLUS_impl = function cljs$spec$alpha$rep_PLUS_impl(form, p) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, true, form)], null), new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
  form, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), null, 1, null), new cljs.core.List(null, form, null, 1, null)))), null, 1, null))))), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "rep+", "rep+", -281382396), form], null));
};
cljs.spec.alpha.amp_impl = function cljs$spec$alpha$amp_impl(re, preds, pred_forms) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), new cljs.core.Keyword(null, "p1", "p1", -936759954), re, new cljs.core.Keyword(null, "ps", "ps", 292358046), preds, new cljs.core.Keyword(null, "forms", "forms", 2045992350), pred_forms], null);
};
cljs.spec.alpha.filter_alt = function cljs$spec$alpha$filter_alt(ps, ks, forms, f) {
  if (cljs.core.truth_(function() {
    var or__3922__auto__ = ks;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return forms;
    }
  }())) {
    var pks = cljs.core.filter.call(null, function(p1__5518_SHARP_) {
      return f.call(null, cljs.core.first.call(null, p1__5518_SHARP_));
    }, cljs.core.map.call(null, cljs.core.vector, ps, function() {
      var or__3922__auto__ = cljs.core.seq.call(null, ks);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }(), function() {
      var or__3922__auto__ = cljs.core.seq.call(null, forms);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }()));
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, pks)), cljs.core.truth_(ks) ? cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, pks)) : null, cljs.core.truth_(forms) ? cljs.core.seq.call(null, cljs.core.map.call(null, function(pks) {
      return function(p1__5519_SHARP_) {
        return cljs.core.nth.call(null, p1__5519_SHARP_, 2);
      };
    }(pks), pks)) : null], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.filter.call(null, f, ps)), ks, forms], null);
  }
};
cljs.spec.alpha.alt_STAR_ = function cljs$spec$alpha$alt_STAR_(ps, ks, forms) {
  var vec__5520 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.core.identity);
  var vec__5523 = cljs.core.nth.call(null, vec__5520, 0, null);
  var seq__5524 = cljs.core.seq.call(null, vec__5523);
  var first__5525 = cljs.core.first.call(null, seq__5524);
  var seq__5524__$1 = cljs.core.next.call(null, seq__5524);
  var p1 = first__5525;
  var pr = seq__5524__$1;
  var ps__$1 = vec__5523;
  var vec__5526 = cljs.core.nth.call(null, vec__5520, 1, null);
  var k1 = cljs.core.nth.call(null, vec__5526, 0, null);
  var ks__$1 = vec__5526;
  var forms__$1 = cljs.core.nth.call(null, vec__5520, 2, null);
  if (cljs.core.truth_(ps__$1)) {
    var ret = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms__$1], null);
    if (pr == null) {
      if (cljs.core.truth_(k1)) {
        if (cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, p1))) {
          return cljs.spec.alpha.accept.call(null, cljs.spec.alpha.tagged_ret.call(null, k1, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
        } else {
          return ret;
        }
      } else {
        return p1;
      }
    } else {
      return ret;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.alts = function cljs$spec$alpha$alts(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___5530 = arguments.length;
  var i__4500__auto___5531 = 0;
  while (true) {
    if (i__4500__auto___5531 < len__4499__auto___5530) {
      args__4502__auto__.push(arguments[i__4500__auto___5531]);
      var G__5532 = i__4500__auto___5531 + 1;
      i__4500__auto___5531 = G__5532;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.alt_STAR_.call(null, ps, null, null);
};
cljs.spec.alpha.alts.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.alts.cljs$lang$applyTo = function(seq5529) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5529));
};
cljs.spec.alpha.alt2 = function cljs$spec$alpha$alt2(p1, p2) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = p1;
    if (cljs.core.truth_(and__3911__auto__)) {
      return p2;
    } else {
      return and__3911__auto__;
    }
  }())) {
    return cljs.spec.alpha.alts.call(null, p1, p2);
  } else {
    var or__3922__auto__ = p1;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return p2;
    }
  }
};
cljs.spec.alpha.alt_impl = function cljs$spec$alpha$alt_impl(ks, ps, forms) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, ps, ks, forms), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null));
};
cljs.spec.alpha.maybe_impl = function cljs$spec$alpha$maybe_impl(p, form) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.accept.call(null, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))], null), null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [form, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)], null)), new cljs.core.Keyword(null, 
  "maybe", "maybe", -314397560), form);
};
cljs.spec.alpha.noret_QMARK_ = function cljs$spec$alpha$noret_QMARK_(p1, pret) {
  var or__3922__auto__ = cljs.core._EQ_.call(null, pret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950));
  if (or__3922__auto__) {
    return or__3922__auto__;
  } else {
    var or__3922__auto____$1 = function() {
      var and__3911__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), null], null), null)).call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.reg_resolve_BANG_.call(null, p1)));
      if (cljs.core.truth_(and__3911__auto__)) {
        return cljs.core.empty_QMARK_.call(null, pret);
      } else {
        return and__3911__auto__;
      }
    }();
    if (cljs.core.truth_(or__3922__auto____$1)) {
      return or__3922__auto____$1;
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.accept_nil_QMARK_ = function cljs$spec$alpha$accept_nil_QMARK_(p) {
  var map__5533 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5533__$1 = (!(map__5533 == null) ? map__5533.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5533.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5533) : map__5533;
  var p__$1 = map__5533__$1;
  var op = cljs.core.get.call(null, map__5533__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__5533__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var p1 = cljs.core.get.call(null, map__5533__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__5533__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var forms = cljs.core.get.call(null, map__5533__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__5535 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5535)) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, null, G__5535)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5535)) {
        var and__3911__auto__ = cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
        if (cljs.core.truth_(and__3911__auto__)) {
          var or__3922__auto__ = cljs.spec.alpha.noret_QMARK_.call(null, p1, cljs.spec.alpha.preturn.call(null, p1));
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            var ret = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1), ps, cljs.core.next.call(null, forms));
            return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, ret));
          }
        } else {
          return and__3911__auto__;
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5535)) {
          var or__3922__auto__ = p1 === p2;
          if (or__3922__auto__) {
            return or__3922__auto__;
          } else {
            return cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5535)) {
            return cljs.core.every_QMARK_.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5535)) {
              return cljs.core.some.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5535)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.preturn = function cljs$spec$alpha$preturn(p) {
  var map__5536 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5536__$1 = (!(map__5536 == null) ? map__5536.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5536.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5536) : map__5536;
  var p__$1 = map__5536__$1;
  var vec__5537 = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__5538 = cljs.core.seq.call(null, vec__5537);
  var first__5539 = cljs.core.first.call(null, seq__5538);
  var seq__5538__$1 = cljs.core.next.call(null, seq__5538);
  var p0 = first__5539;
  var pr = seq__5538__$1;
  var ps = vec__5537;
  var vec__5540 = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__5540, 0, null);
  var ks = vec__5540;
  var op = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__5536__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__5544 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5544)) {
    return ret;
  } else {
    if (cljs.core._EQ_.call(null, null, G__5544)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5544)) {
        var pret = cljs.spec.alpha.preturn.call(null, p1);
        if (cljs.core.truth_(cljs.spec.alpha.noret_QMARK_.call(null, p1, pret))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950);
        } else {
          return cljs.spec.alpha.and_preds.call(null, pret, ps, forms);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5544)) {
          return cljs.spec.alpha.add_ret.call(null, p1, ret, k);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5544)) {
            return cljs.spec.alpha.add_ret.call(null, p0, ret, k);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5544)) {
              var vec__5545 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.spec.alpha.accept_nil_QMARK_);
              var vec__5548 = cljs.core.nth.call(null, vec__5545, 0, null);
              var p0__$1 = cljs.core.nth.call(null, vec__5548, 0, null);
              var vec__5551 = cljs.core.nth.call(null, vec__5545, 1, null);
              var k0 = cljs.core.nth.call(null, vec__5551, 0, null);
              var r = p0__$1 == null ? new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950) : cljs.spec.alpha.preturn.call(null, p0__$1);
              if (cljs.core.truth_(k0)) {
                return cljs.spec.alpha.tagged_ret.call(null, k0, r);
              } else {
                return r;
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5544)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.op_unform = function cljs$spec$alpha$op_unform(p, x) {
  var map__5558 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5558__$1 = (!(map__5558 == null) ? map__5558.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5558.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5558) : map__5558;
  var p__$1 = map__5558__$1;
  var vec__5559 = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__5560 = cljs.core.seq.call(null, vec__5559);
  var first__5561 = cljs.core.first.call(null, seq__5560);
  var seq__5560__$1 = cljs.core.next.call(null, seq__5560);
  var p0 = first__5561;
  var pr = seq__5560__$1;
  var ps = vec__5559;
  var vec__5562 = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__5562, 0, null);
  var ks = vec__5562;
  var op = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var rep_PLUS_ = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var maybe = cljs.core.get.call(null, map__5558__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  var kps = cljs.core.zipmap.call(null, ks, ps);
  var G__5566 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5566)) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null);
  } else {
    if (cljs.core._EQ_.call(null, null, G__5566)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p__$1, x)], null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5566)) {
        var px = cljs.core.reduce.call(null, function(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
          return function(p1__5555_SHARP_, p2__5554_SHARP_) {
            return cljs.spec.alpha.unform.call(null, p2__5554_SHARP_, p1__5555_SHARP_);
          };
        }(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x, cljs.core.reverse.call(null, ps));
        return cljs.spec.alpha.op_unform.call(null, p1, px);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5566)) {
          return cljs.core.mapcat.call(null, function(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
            return function(p1__5556_SHARP_) {
              return cljs.spec.alpha.op_unform.call(null, p1, p1__5556_SHARP_);
            };
          }(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5566)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return cljs.core.mapcat.call(null, function(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
                return function(p1__5557_SHARP_) {
                  return cljs.spec.alpha.op_unform.call(null, p0, p1__5557_SHARP_);
                };
              }(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x);
            } else {
              return cljs.core.mapcat.call(null, function(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
                return function(k__$1) {
                  if (cljs.core.contains_QMARK_.call(null, x, k__$1)) {
                    return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), cljs.core.get.call(null, x, k__$1));
                  } else {
                    return null;
                  }
                };
              }(G__5566, map__5558, map__5558__$1, p__$1, vec__5559, seq__5560, first__5561, seq__5560__$1, p0, pr, ps, vec__5562, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), ks);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5566)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p0, x)], null);
              } else {
                var vec__5567 = x;
                var k__$1 = cljs.core.nth.call(null, vec__5567, 0, null);
                var v = cljs.core.nth.call(null, vec__5567, 1, null);
                return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), v);
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5566)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.add_ret = function cljs$spec$alpha$add_ret(p, r, k) {
  var map__5570 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5570__$1 = (!(map__5570 == null) ? map__5570.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5570.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5570) : map__5570;
  var p__$1 = map__5570__$1;
  var op = cljs.core.get.call(null, map__5570__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__5570__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var splice = cljs.core.get.call(null, map__5570__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var prop = function(map__5570, map__5570__$1, p__$1, op, ps, splice) {
    return function() {
      var ret = cljs.spec.alpha.preturn.call(null, p__$1);
      if (cljs.core.empty_QMARK_.call(null, ret)) {
        return r;
      } else {
        return (cljs.core.truth_(splice) ? cljs.core.into : cljs.core.conj).call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
      }
    };
  }(map__5570, map__5570__$1, p__$1, op, ps, splice);
  var G__5572 = op;
  if (cljs.core._EQ_.call(null, null, G__5572)) {
    return r;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5572)) {
      var ret = cljs.spec.alpha.preturn.call(null, p__$1);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
        return r;
      } else {
        return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
      }
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5572)) {
        var ret = cljs.spec.alpha.preturn.call(null, p__$1);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return r;
        } else {
          return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5572)) {
          var ret = cljs.spec.alpha.preturn.call(null, p__$1);
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return r;
          } else {
            return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5572)) {
            return prop.call(null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5572)) {
              return prop.call(null);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5572)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.deriv = function cljs$spec$alpha$deriv(p, x) {
  var map__5574 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5574__$1 = (!(map__5574 == null) ? map__5574.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5574.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5574) : map__5574;
  var p__$1 = map__5574__$1;
  var vec__5575 = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__5576 = cljs.core.seq.call(null, vec__5575);
  var first__5577 = cljs.core.first.call(null, seq__5576);
  var seq__5576__$1 = cljs.core.next.call(null, seq__5576);
  var p0 = first__5577;
  var pr = seq__5576__$1;
  var ps = vec__5575;
  var vec__5578 = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__5579 = cljs.core.seq.call(null, vec__5578);
  var first__5580 = cljs.core.first.call(null, seq__5579);
  var seq__5579__$1 = cljs.core.next.call(null, seq__5579);
  var k0 = first__5580;
  var kr = seq__5579__$1;
  var ks = vec__5578;
  var op = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var ret = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var splice = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var forms = cljs.core.get.call(null, map__5574__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  if (cljs.core.truth_(p__$1)) {
    var G__5582 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5582)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__5582)) {
        var ret__$1 = cljs.spec.alpha.dt.call(null, p__$1, x, p__$1);
        if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1))) {
          return null;
        } else {
          return cljs.spec.alpha.accept.call(null, ret__$1);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5582)) {
          var temp__4657__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var p1__$1 = temp__4657__auto__;
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p1__$1))) {
              var ret__$1 = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1__$1), ps, cljs.core.next.call(null, forms));
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1))) {
                return null;
              } else {
                return cljs.spec.alpha.accept.call(null, ret__$1);
              }
            } else {
              return cljs.spec.alpha.amp_impl.call(null, p1__$1, ps, forms);
            }
          } else {
            return null;
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5582)) {
            return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), cljs.core.cons.call(null, cljs.spec.alpha.deriv.call(null, p0, x), pr), new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret], null)), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, 
            p0)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.next.call(null, forms), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.spec.alpha.add_ret.call(null, p0, ret, k0)], null)), x) : null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5582)) {
              return cljs.spec.alpha.alt_STAR_.call(null, cljs.core.map.call(null, function(G__5582, map__5574, map__5574__$1, p__$1, vec__5575, seq__5576, first__5577, seq__5576__$1, p0, pr, ps, vec__5578, seq__5579, first__5580, seq__5579__$1, k0, kr, ks, op, p1, p2, ret, splice, forms) {
                return function(p1__5573_SHARP_) {
                  return cljs.spec.alpha.deriv.call(null, p1__5573_SHARP_, x);
                };
              }(G__5582, map__5574, map__5574__$1, p__$1, vec__5575, seq__5576, first__5577, seq__5576__$1, p0, pr, ps, vec__5578, seq__5579, first__5580, seq__5579__$1, k0, kr, ks, op, p1, p2, ret, splice, forms), ps), ks, forms);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5582)) {
                return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.rep_STAR_.call(null, cljs.spec.alpha.deriv.call(null, p1, x), p2, ret, splice, forms), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.rep_STAR_.call(null, p2, p2, cljs.spec.alpha.add_ret.call(null, p1, ret, null), splice, forms), x) : null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5582)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_describe = function cljs$spec$alpha$op_describe(p) {
  var map__5583 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5583__$1 = (!(map__5583 == null) ? map__5583.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5583.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5583) : map__5583;
  var p__$1 = map__5583__$1;
  var op = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var ks = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var forms = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var splice = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var p1 = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var rep_PLUS_ = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var maybe = cljs.core.get.call(null, map__5583__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  if (cljs.core.truth_(p__$1)) {
    var G__5585 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5585)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__5585)) {
        return p__$1;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5585)) {
          return cljs.core.list_STAR_.call(null, new cljs.core.Symbol("cljs.spec.alpha", "\x26", "cljs.spec.alpha/\x26", 1635809823, null), cljs.spec.alpha.op_describe.call(null, p1), forms);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5585)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null), new cljs.core.List(null, rep_PLUS_, null, 1, null), 2, null);
            } else {
              return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), cljs.core.mapcat.call(null, cljs.core.vector, function() {
                var or__3922__auto__ = cljs.core.seq.call(null, ks);
                if (or__3922__auto__) {
                  return or__3922__auto__;
                } else {
                  return cljs.core.repeat.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199));
                }
              }(), forms));
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5585)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "?", "cljs.spec.alpha/?", 1605136319, null), new cljs.core.List(null, maybe, null, 1, null), 2, null);
              } else {
                return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", -2130750332, null), cljs.core.mapcat.call(null, cljs.core.vector, ks, forms));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5585)) {
                return new cljs.core.List(null, cljs.core.truth_(splice) ? new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null) : new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), new cljs.core.List(null, forms, null, 1, null), 2, null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5585)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_explain = function cljs$spec$alpha$op_explain(form, p, path, via, in$, input) {
  var vec__5586 = input;
  var x = cljs.core.nth.call(null, vec__5586, 0, null);
  var input__$1 = vec__5586;
  var map__5589 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5589__$1 = (!(map__5589 == null) ? map__5589.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5589.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5589) : map__5589;
  var p__$1 = map__5589__$1;
  var op = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var ks = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var forms = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var splice = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var p1 = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__5589__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var via__$1 = function() {
    var temp__4655__auto__ = cljs.spec.alpha.spec_name.call(null, p__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var name = temp__4655__auto__;
      return cljs.core.conj.call(null, via, name);
    } else {
      return via;
    }
  }();
  var insufficient = function(vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1) {
    return function(path__$1, form__$1) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Insufficient input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), form__$1, new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "via", "via", -1904457336), via__$1, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), in$], null)], null);
    };
  }(vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1);
  if (cljs.core.truth_(p__$1)) {
    var G__5591 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5591)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__5591)) {
        if (cljs.core.empty_QMARK_.call(null, input__$1)) {
          return insufficient.call(null, path, form);
        } else {
          return cljs.spec.alpha.explain_1.call(null, form, p__$1, path, via__$1, in$, x);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5591)) {
          if (cljs.core.empty_QMARK_.call(null, input__$1)) {
            if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1))) {
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1));
            } else {
              return insufficient.call(null, path, cljs.spec.alpha.op_describe.call(null, p1));
            }
          } else {
            var temp__4655__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
            if (cljs.core.truth_(temp__4655__auto__)) {
              var p1__$1 = temp__4655__auto__;
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1__$1));
            } else {
              return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p1), p1, path, via__$1, in$, input__$1);
            }
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5591)) {
            var pkfs = cljs.core.map.call(null, cljs.core.vector, ps, function() {
              var or__3922__auto__ = cljs.core.seq.call(null, ks);
              if (or__3922__auto__) {
                return or__3922__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }(), function() {
              var or__3922__auto__ = cljs.core.seq.call(null, forms);
              if (or__3922__auto__) {
                return or__3922__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }());
            var vec__5592 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, pkfs)) ? cljs.core.first.call(null, pkfs) : cljs.core.first.call(null, cljs.core.remove.call(null, function(pkfs, G__5591, vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient) {
              return function(p__5595) {
                var vec__5596 = p__5595;
                var p__$2 = cljs.core.nth.call(null, vec__5596, 0, null);
                return cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2);
              };
            }(pkfs, G__5591, vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient), pkfs));
            var pred = cljs.core.nth.call(null, vec__5592, 0, null);
            var k = cljs.core.nth.call(null, vec__5592, 1, null);
            var form__$1 = cljs.core.nth.call(null, vec__5592, 2, null);
            var path__$1 = cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path;
            var form__$2 = function() {
              var or__3922__auto__ = form__$1;
              if (cljs.core.truth_(or__3922__auto__)) {
                return or__3922__auto__;
              } else {
                return cljs.spec.alpha.op_describe.call(null, pred);
              }
            }();
            if (cljs.core.empty_QMARK_.call(null, input__$1) && cljs.core.not.call(null, pred)) {
              return insufficient.call(null, path__$1, form__$2);
            } else {
              return cljs.spec.alpha.op_explain.call(null, form__$2, pred, path__$1, via__$1, in$, input__$1);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5591)) {
              if (cljs.core.empty_QMARK_.call(null, input__$1)) {
                return insufficient.call(null, path, cljs.spec.alpha.op_describe.call(null, p__$1));
              } else {
                return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(G__5591, vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient) {
                  return function(k, form__$1, pred) {
                    return cljs.spec.alpha.op_explain.call(null, function() {
                      var or__3922__auto__ = form__$1;
                      if (cljs.core.truth_(or__3922__auto__)) {
                        return or__3922__auto__;
                      } else {
                        return cljs.spec.alpha.op_describe.call(null, pred);
                      }
                    }(), pred, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, via__$1, in$, input__$1);
                  };
                }(G__5591, vec__5586, x, input__$1, map__5589, map__5589__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient), function() {
                  var or__3922__auto__ = cljs.core.seq.call(null, ks);
                  if (or__3922__auto__) {
                    return or__3922__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), function() {
                  var or__3922__auto__ = cljs.core.seq.call(null, forms);
                  if (or__3922__auto__) {
                    return or__3922__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), ps));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5591)) {
                return cljs.spec.alpha.op_explain.call(null, p1 === p2 ? forms : cljs.spec.alpha.op_describe.call(null, p1), p1, path, via__$1, in$, input__$1);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5591)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.re_gen = function cljs$spec$alpha$re_gen(p, overrides, path, rmap, f) {
  var map__5600 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__5600__$1 = (!(map__5600 == null) ? map__5600.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5600.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5600) : map__5600;
  var p__$1 = map__5600__$1;
  var ps = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var forms = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var p2 = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var ret = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var gfn = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375));
  var op = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var ks = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var p1 = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var id = cljs.core.get.call(null, map__5600__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var rmap__$1 = cljs.core.truth_(id) ? cljs.spec.alpha.inck.call(null, rmap, id) : rmap;
  var ggens = function(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
    return function(ps__$1, ks__$1, forms__$1) {
      var gen = function(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
        return function(p__$2, k, f__$1) {
          if (cljs.core.truth_(function() {
            var and__3911__auto__ = rmap__$1;
            if (cljs.core.truth_(and__3911__auto__)) {
              var and__3911__auto____$1 = id;
              if (cljs.core.truth_(and__3911__auto____$1)) {
                var and__3911__auto____$2 = k;
                if (cljs.core.truth_(and__3911__auto____$2)) {
                  return cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, path, k);
                } else {
                  return and__3911__auto____$2;
                }
              } else {
                return and__3911__auto____$1;
              }
            } else {
              return and__3911__auto__;
            }
          }())) {
            return null;
          } else {
            if (cljs.core.truth_(id)) {
              return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
                return function() {
                  return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
                    var or__3922__auto__ = f__$1;
                    if (cljs.core.truth_(or__3922__auto__)) {
                      return or__3922__auto__;
                    } else {
                      return p__$2;
                    }
                  }());
                };
              }(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1), null));
            } else {
              return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
                var or__3922__auto__ = f__$1;
                if (cljs.core.truth_(or__3922__auto__)) {
                  return or__3922__auto__;
                } else {
                  return p__$2;
                }
              }());
            }
          }
        };
      }(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1);
      return cljs.core.map.call(null, gen, ps__$1, function() {
        var or__3922__auto__ = cljs.core.seq.call(null, ks__$1);
        if (or__3922__auto__) {
          return or__3922__auto__;
        } else {
          return cljs.core.repeat.call(null, null);
        }
      }(), function() {
        var or__3922__auto__ = cljs.core.seq.call(null, forms__$1);
        if (or__3922__auto__) {
          return or__3922__auto__;
        } else {
          return cljs.core.repeat.call(null, null);
        }
      }());
    };
  }(map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1);
  var or__3922__auto__ = function() {
    var temp__4657__auto__ = cljs.core.get.call(null, overrides, path);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var g = temp__4657__auto__;
      var G__5603 = op;
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "accept", "accept", 1874130431), G__5603)) {
        return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
      } else {
        if (cljs.core._EQ_.call(null, null, G__5603)) {
          return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
        } else {
          return g;
        }
      }
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    var or__3922__auto____$1 = cljs.core.truth_(gfn) ? gfn.call(null) : null;
    if (cljs.core.truth_(or__3922__auto____$1)) {
      return or__3922__auto____$1;
    } else {
      if (cljs.core.truth_(p__$1)) {
        var G__5604 = op;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__5604)) {
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
          } else {
            return cljs.spec.gen.alpha.return$.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null));
          }
        } else {
          if (cljs.core._EQ_.call(null, null, G__5604)) {
            var temp__4657__auto__ = cljs.spec.alpha.gensub.call(null, p__$1, overrides, path, rmap__$1, f);
            if (cljs.core.truth_(temp__4657__auto__)) {
              var g = temp__4657__auto__;
              return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
            } else {
              return null;
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__5604)) {
              return cljs.spec.alpha.re_gen.call(null, p1, overrides, path, rmap__$1, cljs.spec.alpha.op_describe.call(null, p1));
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__5604)) {
                var gens = ggens.call(null, ps, ks, forms);
                if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gens)) {
                  return cljs.core.apply.call(null, cljs.spec.gen.alpha.cat, gens);
                } else {
                  return null;
                }
              } else {
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__5604)) {
                  var gens = cljs.core.remove.call(null, cljs.core.nil_QMARK_, ggens.call(null, ps, ks, forms));
                  if (cljs.core.empty_QMARK_.call(null, gens)) {
                    return null;
                  } else {
                    return cljs.spec.gen.alpha.one_of.call(null, gens);
                  }
                } else {
                  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__5604)) {
                    if (cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [id], null), id))) {
                      return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
                    } else {
                      var temp__4657__auto__ = cljs.spec.alpha.re_gen.call(null, p2, overrides, path, rmap__$1, forms);
                      if (cljs.core.truth_(temp__4657__auto__)) {
                        var g = temp__4657__auto__;
                        return cljs.spec.gen.alpha.fmap.call(null, function(g, temp__4657__auto__, G__5604, or__3922__auto____$1, or__3922__auto__, map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1, ggens) {
                          return function(p1__5599_SHARP_) {
                            return cljs.core.apply.call(null, cljs.core.concat, p1__5599_SHARP_);
                          };
                        }(g, temp__4657__auto__, G__5604, or__3922__auto____$1, or__3922__auto__, map__5600, map__5600__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1, ggens), cljs.spec.gen.alpha.vector.call(null, g));
                      } else {
                        return null;
                      }
                    }
                  } else {
                    throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5604)].join(""));
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.re_conform = function cljs$spec$alpha$re_conform(p, p__5605) {
  while (true) {
    var vec__5606 = p__5605;
    var seq__5607 = cljs.core.seq.call(null, vec__5606);
    var first__5608 = cljs.core.first.call(null, seq__5607);
    var seq__5607__$1 = cljs.core.next.call(null, seq__5607);
    var x = first__5608;
    var xs = seq__5607__$1;
    var data = vec__5606;
    if (cljs.core.empty_QMARK_.call(null, data)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p))) {
        var ret = cljs.spec.alpha.preturn.call(null, p);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return null;
        } else {
          return ret;
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    } else {
      var temp__4655__auto__ = cljs.spec.alpha.deriv.call(null, p, x);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var dp = temp__4655__auto__;
        var G__5609 = dp;
        var G__5610 = xs;
        p = G__5609;
        p__5605 = G__5610;
        continue;
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    }
    break;
  }
};
cljs.spec.alpha.re_explain = function cljs$spec$alpha$re_explain(path, via, in$, re, input) {
  var p = re;
  var G__5614 = input;
  var vec__5615 = G__5614;
  var seq__5616 = cljs.core.seq.call(null, vec__5615);
  var first__5617 = cljs.core.first.call(null, seq__5616);
  var seq__5616__$1 = cljs.core.next.call(null, seq__5616);
  var x = first__5617;
  var xs = seq__5616__$1;
  var data = vec__5615;
  var i = 0;
  var p__$1 = p;
  var G__5614__$1 = G__5614;
  var i__$1 = i;
  while (true) {
    var p__$2 = p__$1;
    var vec__5618 = G__5614__$1;
    var seq__5619 = cljs.core.seq.call(null, vec__5618);
    var first__5620 = cljs.core.first.call(null, seq__5619);
    var seq__5619__$1 = cljs.core.next.call(null, seq__5619);
    var x__$1 = first__5620;
    var xs__$1 = seq__5619__$1;
    var data__$1 = vec__5618;
    var i__$2 = i__$1;
    if (cljs.core.empty_QMARK_.call(null, data__$1)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2))) {
        return null;
      } else {
        return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, in$, null);
      }
    } else {
      var temp__4655__auto__ = cljs.spec.alpha.deriv.call(null, p__$2, x__$1);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var dp = temp__4655__auto__;
        var G__5621 = dp;
        var G__5622 = xs__$1;
        var G__5623 = i__$2 + 1;
        p__$1 = G__5621;
        G__5614__$1 = G__5622;
        i__$1 = G__5623;
        continue;
      } else {
        if (cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, p__$2))) {
          if (cljs.core._EQ_.call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p__$2), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623))) {
            return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, re), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        } else {
          var or__3922__auto__ = cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, p__$2), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        }
      }
    }
    break;
  }
};
cljs.spec.alpha.regex_spec_impl = function cljs$spec$alpha$regex_spec_impl(re, gfn) {
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5624 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5624 = function(re, gfn, meta5625) {
      this.re = re;
      this.gfn = gfn;
      this.meta5625 = meta5625;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5626, meta5625__$1) {
      var self__ = this;
      var _5626__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha5624(self__.re, self__.gfn, meta5625__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5626) {
      var self__ = this;
      var _5626__$1 = this;
      return self__.meta5625;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.coll_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_conform.call(null, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_unform.call(null, self__.re, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.coll_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_explain.call(null, path, via, in$, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, self__.re), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.alpha.re_gen.call(null, self__.re, overrides, path, rmap, cljs.spec.alpha.op_describe.call(null, self__.re));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.regex_spec_impl.call(null, self__.re, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_describe.call(null, self__.re);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta5625", "meta5625", -1346990749, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5624.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5624.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5624";
    cljs.spec.alpha.t_cljs$spec$alpha5624.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5624");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5624 = function cljs$spec$alpha$regex_spec_impl_$___GT_t_cljs$spec$alpha5624(re__$1, gfn__$1, meta5625) {
      return new cljs.spec.alpha.t_cljs$spec$alpha5624(re__$1, gfn__$1, meta5625);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5624(re, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.call_valid_QMARK_ = function cljs$spec$alpha$call_valid_QMARK_(f, specs, args) {
  var cargs = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs), args);
  if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cargs))) {
    return null;
  } else {
    var ret = cljs.core.apply.call(null, f, args);
    var cret = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(specs), ret);
    var and__3911__auto__ = cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cret));
    if (and__3911__auto__) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs))) {
        return cljs.spec.alpha.pvalid_QMARK_.call(null, (new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
      } else {
        return true;
      }
    } else {
      return and__3911__auto__;
    }
  }
};
cljs.spec.alpha.validate_fn = function cljs$spec$alpha$validate_fn(f, specs, iters) {
  var g = cljs.spec.alpha.gen.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs));
  var prop = cljs.spec.gen.alpha.for_all_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null), function(g) {
    return function(p1__5627_SHARP_) {
      return cljs.spec.alpha.call_valid_QMARK_.call(null, f, specs, p1__5627_SHARP_);
    };
  }(g));
  var ret = cljs.spec.gen.alpha.quick_check.call(null, iters, prop);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "smallest", "smallest", -152623883)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "shrunk", "shrunk", -2041664412)).cljs$core$IFn$_invoke$arity$1(ret));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var vec__5628 = temp__4655__auto__;
    var smallest = cljs.core.nth.call(null, vec__5628, 0, null);
    return smallest;
  } else {
    return f;
  }
};
cljs.spec.alpha.fspec_impl = function cljs$spec$alpha$fspec_impl(argspec, aform, retspec, rform, fnspec, fform, gfn) {
  var specs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "args", "args", 1315556576), argspec, new cljs.core.Keyword(null, "ret", "ret", -468222814), retspec, new cljs.core.Keyword(null, "fn", "fn", -1175266204), fnspec], null);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5631 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5631 = function(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, meta5632) {
      this.argspec = argspec;
      this.aform = aform;
      this.retspec = retspec;
      this.rform = rform;
      this.fnspec = fnspec;
      this.fform = fform;
      this.gfn = gfn;
      this.specs = specs;
      this.meta5632 = meta5632;
      this.cljs$lang$protocol_mask$partition0$ = 393472;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs) {
      return function(_5633, meta5632__$1) {
        var self__ = this;
        var _5633__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5631(self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, self__.gfn, self__.specs, meta5632__$1);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs) {
      return function(_5633) {
        var self__ = this;
        var _5633__$1 = this;
        return self__.meta5632;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$core$ILookup$_lookup$arity$2 = function(specs) {
      return function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return cljs.core.get.call(null, self__.specs, k);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$core$ILookup$_lookup$arity$3 = function(specs) {
      return function(_, k, not_found) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.get.call(null, self__.specs, k, not_found);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs) {
      return function(_, f) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.ifn_QMARK_.call(null, f)) {
          if (f === cljs.spec.alpha.validate_fn.call(null, f, self__.specs, cljs.spec.alpha._STAR_fspec_iterations_STAR_)) {
            return f;
          } else {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs) {
      return function(_, f) {
        var self__ = this;
        var ___$1 = this;
        return f;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs) {
      return function(_, path, via, in$, f) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.ifn_QMARK_.call(null, f)) {
          var args = cljs.spec.alpha.validate_fn.call(null, f, self__.specs, 100);
          if (f === args) {
            return null;
          } else {
            var ret = function() {
              try {
                return cljs.core.apply.call(null, f, args);
              } catch (e5634) {
                if (e5634 instanceof Error) {
                  var t = e5634;
                  return t;
                } else {
                  throw e5634;
                }
              }
            }();
            if (ret instanceof Error) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.list(new cljs.core.Symbol(null, "apply", "apply", -1334050276, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null)), new cljs.core.Keyword(null, "val", "val", 128701612), args, new cljs.core.Keyword(null, "reason", 
              "reason", -2070751759), ret.message, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
            } else {
              var cret = cljs.spec.alpha.dt.call(null, self__.retspec, ret, self__.rform);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cret))) {
                return cljs.spec.alpha.explain_1.call(null, self__.rform, self__.retspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "ret", "ret", -468222814)), via, in$, ret);
              } else {
                if (cljs.core.truth_(self__.fnspec)) {
                  var cargs = cljs.spec.alpha.conform.call(null, self__.argspec, args);
                  return cljs.spec.alpha.explain_1.call(null, self__.fform, self__.fnspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "fn", "fn", -1175266204)), via, in$, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
                } else {
                  return null;
                }
              }
            }
          }
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Keyword(null, "val", "val", 128701612), f, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], 
          null)], null);
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs) {
      return function(_, overrides, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.gen.alpha.return$.call(null, function(___$3, specs) {
            return function() {
              var G__5637__delegate = function(args) {
                if (cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, self__.argspec, args))) {
                } else {
                  throw new Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
                    var sb__4430__auto__ = new goog.string.StringBuffer;
                    var _STAR_print_newline_STAR_5635_5638 = cljs.core._STAR_print_newline_STAR_;
                    var _STAR_print_fn_STAR_5636_5639 = cljs.core._STAR_print_fn_STAR_;
                    cljs.core._STAR_print_newline_STAR_ = true;
                    cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_5635_5638, _STAR_print_fn_STAR_5636_5639, sb__4430__auto__, ___$3, specs) {
                      return function(x__4431__auto__) {
                        return sb__4430__auto__.append(x__4431__auto__);
                      };
                    }(_STAR_print_newline_STAR_5635_5638, _STAR_print_fn_STAR_5636_5639, sb__4430__auto__, ___$3, specs);
                    try {
                      cljs.spec.alpha.explain.call(null, self__.argspec, args);
                    } finally {
                      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5636_5639;
                      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_5635_5638;
                    }
                    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4430__auto__)].join("");
                  }()), "\n", "(pvalid? argspec args)"].join(""));
                }
                return cljs.spec.gen.alpha.generate.call(null, cljs.spec.alpha.gen.call(null, self__.retspec, overrides));
              };
              var G__5637 = function(var_args) {
                var args = null;
                if (arguments.length > 0) {
                  var G__5640__i = 0, G__5640__a = new Array(arguments.length - 0);
                  while (G__5640__i < G__5640__a.length) {
                    G__5640__a[G__5640__i] = arguments[G__5640__i + 0];
                    ++G__5640__i;
                  }
                  args = new cljs.core.IndexedSeq(G__5640__a, 0, null);
                }
                return G__5637__delegate.call(this, args);
              };
              G__5637.cljs$lang$maxFixedArity = 0;
              G__5637.cljs$lang$applyTo = function(arglist__5641) {
                var args = cljs.core.seq(arglist__5641);
                return G__5637__delegate(args);
              };
              G__5637.cljs$core$IFn$_invoke$arity$variadic = G__5637__delegate;
              return G__5637;
            }();
          }(___$3, specs));
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.fspec_impl.call(null, self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, gfn__$1);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "args", "args", 1315556576), null, 1, null), new cljs.core.List(null, self__.aform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "ret", "ret", -468222814), null, 1, null), new cljs.core.List(null, 
        self__.rform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, 1, null), new cljs.core.List(null, self__.fform, null, 1, null))));
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.getBasis = function(specs) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "argspec", "argspec", -1207762746, null), new cljs.core.Symbol(null, "aform", "aform", 531303525, null), new cljs.core.Symbol(null, "retspec", "retspec", -920025354, null), new cljs.core.Symbol(null, "rform", "rform", -1420499912, null), new cljs.core.Symbol(null, "fnspec", "fnspec", -1865712406, null), new cljs.core.Symbol(null, "fform", "fform", -176049972, null), new cljs.core.Symbol(null, 
        "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "meta5632", "meta5632", 27719554, null)], null);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha5631.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5631.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5631";
    cljs.spec.alpha.t_cljs$spec$alpha5631.cljs$lang$ctorPrWriter = function(specs) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5631");
      };
    }(specs);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5631 = function(specs) {
      return function cljs$spec$alpha$fspec_impl_$___GT_t_cljs$spec$alpha5631(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta5632) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5631(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta5632);
      };
    }(specs);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5631(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.def_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "kvs-\x3emap", "cljs.spec.alpha/kvs-\x3emap", 579713455), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5642#", "p1__5642#", 1610237527, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "p1__5642#", "p1__5642#", 1610237527, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "p1__5642#", 
"p1__5642#", 1610237527, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5643#", "p1__5643#", 743256947, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "v", 
"v", 1661996586, null)], null)), new cljs.core.Symbol(null, "p1__5643#", "p1__5643#", 743256947, null)))), cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "%", "%", -950237169, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), 
cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "v", 
"v", 1661996586, null)], null)), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), function(p1__5642_SHARP_) {
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), p1__5642_SHARP_), cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), p1__5642_SHARP_));
}, null, true, function(p1__5643_SHARP_) {
  return cljs.core.map.call(null, function(p__5644) {
    var vec__5645 = p__5644;
    var k = cljs.core.nth.call(null, vec__5645, 0, null);
    var v = cljs.core.nth.call(null, vec__5645, 1, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), k, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), v], null);
  }, p1__5643_SHARP_);
}));
cljs.spec.alpha.nonconforming = function cljs$spec$alpha$nonconforming(spec) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5648 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5648 = function(spec, meta5649) {
      this.spec = spec;
      this.meta5649 = meta5649;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(spec__$1) {
      return function(_5650, meta5649__$1) {
        var self__ = this;
        var _5650__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5648(self__.spec, meta5649__$1);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$core$IMeta$_meta$arity$1 = function(spec__$1) {
      return function(_5650) {
        var self__ = this;
        var _5650__$1 = this;
        return self__.meta5649;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(spec__$1) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(spec__$1) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(spec__$1) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var ret = cljs.spec.alpha.conform_STAR_.call(null, self__.spec, x);
        if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, ret))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          return x;
        }
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(spec__$1) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.unform_STAR_.call(null, self__.spec, x);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(spec__$1) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.explain_STAR_.call(null, self__.spec, path, via, in$, x);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(spec__$1) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.gen_STAR_.call(null, self__.spec, overrides, path, rmap);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(spec__$1) {
      return function(_, gfn) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.nonconforming.call(null, cljs.spec.alpha.with_gen_STAR_.call(null, self__.spec, gfn));
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(spec__$1) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nonconforming", "cljs.spec.alpha/nonconforming", -1009218508, null), null, 1, null), new cljs.core.List(null, cljs.spec.alpha.describe_STAR_.call(null, self__.spec), null, 1, null))));
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.getBasis = function(spec__$1) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta5649", "meta5649", -2057889053, null)], null);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha5648.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5648.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5648";
    cljs.spec.alpha.t_cljs$spec$alpha5648.cljs$lang$ctorPrWriter = function(spec__$1) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5648");
      };
    }(spec__$1);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5648 = function(spec__$1) {
      return function cljs$spec$alpha$nonconforming_$___GT_t_cljs$spec$alpha5648(spec__$2, meta5649) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5648(spec__$2, meta5649);
      };
    }(spec__$1);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5648(spec__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.nilable_impl = function cljs$spec$alpha$nilable_impl(form, pred, gfn) {
  var spec = cljs.spec.alpha.specize.call(null, pred, form);
  if (typeof cljs.spec.alpha.t_cljs$spec$alpha5651 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5651 = function(form, pred, gfn, spec, meta5652) {
      this.form = form;
      this.pred = pred;
      this.gfn = gfn;
      this.spec = spec;
      this.meta5652 = meta5652;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(spec) {
      return function(_5653, meta5652__$1) {
        var self__ = this;
        var _5653__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5651(self__.form, self__.pred, self__.gfn, self__.spec, meta5652__$1);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$core$IMeta$_meta$arity$1 = function(spec) {
      return function(_5653) {
        var self__ = this;
        var _5653__$1 = this;
        return self__.meta5652;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(spec) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(spec) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(spec) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (x == null) {
          return null;
        } else {
          return cljs.spec.alpha.conform_STAR_.call(null, self__.spec, x);
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(spec) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (x == null) {
          return null;
        } else {
          return cljs.spec.alpha.unform_STAR_.call(null, self__.spec, x);
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(spec) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3922__auto__ = cljs.spec.alpha.pvalid_QMARK_.call(null, self__.spec, x);
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return x == null;
          }
        }())) {
          return null;
        } else {
          return cljs.core.conj.call(null, cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), via, in$, x), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)), new cljs.core.Keyword(null, "pred", "pred", 1927423397), 
          new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(spec) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.gen.alpha.frequency.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(___$1, spec) {
            return function() {
              return cljs.spec.gen.alpha.return$.call(null, null);
            };
          }(___$1, spec), null))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(___$1, spec) {
            return function() {
              return cljs.spec.alpha.gensub.call(null, self__.pred, overrides, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), rmap, self__.form);
            };
          }(___$1, spec), null))], null)], null));
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(spec) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.nilable_impl.call(null, self__.form, self__.pred, gfn__$1);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(spec) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nilable", "cljs.spec.alpha/nilable", 1628308748, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null))));
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.getBasis = function(spec) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta5652", "meta5652", -831741164, null)], null);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha5651.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5651.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5651";
    cljs.spec.alpha.t_cljs$spec$alpha5651.cljs$lang$ctorPrWriter = function(spec) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5651");
      };
    }(spec);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5651 = function(spec) {
      return function cljs$spec$alpha$nilable_impl_$___GT_t_cljs$spec$alpha5651(form__$1, pred__$1, gfn__$1, spec__$1, meta5652) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5651(form__$1, pred__$1, gfn__$1, spec__$1, meta5652);
      };
    }(spec);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5651(form, pred, gfn, spec, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.exercise = function cljs$spec$alpha$exercise(var_args) {
  var G__5656 = arguments.length;
  switch(G__5656) {
    case 1:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.exercise.call(null, spec, 10);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2 = function(spec, n) {
  return cljs.spec.alpha.exercise.call(null, spec, n, null);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3 = function(spec, n, overrides) {
  return cljs.core.map.call(null, function(p1__5654_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__5654_SHARP_, cljs.spec.alpha.conform.call(null, spec, p1__5654_SHARP_)], null);
  }, cljs.spec.gen.alpha.sample.call(null, cljs.spec.alpha.gen.call(null, spec, overrides), n));
};
cljs.spec.alpha.exercise.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.inst_in_range_QMARK_ = function cljs$spec$alpha$inst_in_range_QMARK_(start, end, inst) {
  var and__3911__auto__ = cljs.core.inst_QMARK_.call(null, inst);
  if (and__3911__auto__) {
    var t = cljs.core.inst_ms.call(null, inst);
    return cljs.core.inst_ms.call(null, start) <= t && t < cljs.core.inst_ms.call(null, end);
  } else {
    return and__3911__auto__;
  }
};
cljs.spec.alpha.int_in_range_QMARK_ = function cljs$spec$alpha$int_in_range_QMARK_(start, end, val) {
  if (cljs.core.integer_QMARK_.call(null, val)) {
    return start <= val && val < end;
  } else {
    if (val instanceof goog.math.Long) {
      var and__3911__auto__ = start.lessThanOrEqual(val);
      if (cljs.core.truth_(and__3911__auto__)) {
        return val.lessThan(end);
      } else {
        return and__3911__auto__;
      }
    } else {
      if (val instanceof goog.math.Integer) {
        var and__3911__auto__ = start.lessThanOrEqual(val);
        if (cljs.core.truth_(and__3911__auto__)) {
          return val.lessThan(end);
        } else {
          return and__3911__auto__;
        }
      } else {
        return false;
      }
    }
  }
};
if (typeof cljs.spec.alpha._STAR_compile_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_compile_asserts_STAR_ = true;
}
if (typeof cljs.spec.alpha._STAR_runtime_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_runtime_asserts_STAR_ = false;
}
cljs.spec.alpha.check_asserts_QMARK_ = function cljs$spec$alpha$check_asserts_QMARK_() {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_;
};
cljs.spec.alpha.check_asserts = function cljs$spec$alpha$check_asserts(flag) {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_ = flag;
};
cljs.spec.alpha.assert_STAR_ = function cljs$spec$alpha$assert_STAR_(spec, x) {
  if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, spec, x))) {
    return x;
  } else {
    var ed = cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, x), new cljs.core.Keyword("cljs.spec.alpha", "failure", "cljs.spec.alpha/failure", 188258592), new cljs.core.Keyword(null, "assertion-failed", "assertion-failed", -970534477)));
    throw new Error(["Spec assertion failed\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var sb__4430__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_5658_5660 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_5659_5661 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_5658_5660, _STAR_print_fn_STAR_5659_5661, sb__4430__auto__, ed) {
        return function(x__4431__auto__) {
          return sb__4430__auto__.append(x__4431__auto__);
        };
      }(_STAR_print_newline_STAR_5658_5660, _STAR_print_fn_STAR_5659_5661, sb__4430__auto__, ed);
      try {
        cljs.spec.alpha.explain_out.call(null, ed);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5659_5661;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_5658_5660;
      }
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4430__auto__)].join("");
    }())].join(""));
  }
};
goog.provide("cljs.repl");
goog.require("cljs.core");
goog.require("cljs.spec.alpha");
cljs.repl.print_doc = function cljs$repl$print_doc(p__5723) {
  var map__5724 = p__5723;
  var map__5724__$1 = (!(map__5724 == null) ? map__5724.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5724.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5724) : map__5724;
  var m = map__5724__$1;
  var n = cljs.core.get.call(null, map__5724__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var nm = cljs.core.get.call(null, map__5724__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  cljs.core.println.call(null, "-------------------------");
  cljs.core.println.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var ns = temp__4657__auto__;
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/"].join("");
    } else {
      return null;
    }
  }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Protocol");
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m))) {
    var seq__5726_5748 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m));
    var chunk__5727_5749 = null;
    var count__5728_5750 = 0;
    var i__5729_5751 = 0;
    while (true) {
      if (i__5729_5751 < count__5728_5750) {
        var f_5752 = cljs.core._nth.call(null, chunk__5727_5749, i__5729_5751);
        cljs.core.println.call(null, "  ", f_5752);
        var G__5753 = seq__5726_5748;
        var G__5754 = chunk__5727_5749;
        var G__5755 = count__5728_5750;
        var G__5756 = i__5729_5751 + 1;
        seq__5726_5748 = G__5753;
        chunk__5727_5749 = G__5754;
        count__5728_5750 = G__5755;
        i__5729_5751 = G__5756;
        continue;
      } else {
        var temp__4657__auto___5757 = cljs.core.seq.call(null, seq__5726_5748);
        if (temp__4657__auto___5757) {
          var seq__5726_5758__$1 = temp__4657__auto___5757;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__5726_5758__$1)) {
            var c__4319__auto___5759 = cljs.core.chunk_first.call(null, seq__5726_5758__$1);
            var G__5760 = cljs.core.chunk_rest.call(null, seq__5726_5758__$1);
            var G__5761 = c__4319__auto___5759;
            var G__5762 = cljs.core.count.call(null, c__4319__auto___5759);
            var G__5763 = 0;
            seq__5726_5748 = G__5760;
            chunk__5727_5749 = G__5761;
            count__5728_5750 = G__5762;
            i__5729_5751 = G__5763;
            continue;
          } else {
            var f_5764 = cljs.core.first.call(null, seq__5726_5758__$1);
            cljs.core.println.call(null, "  ", f_5764);
            var G__5765 = cljs.core.next.call(null, seq__5726_5758__$1);
            var G__5766 = null;
            var G__5767 = 0;
            var G__5768 = 0;
            seq__5726_5748 = G__5765;
            chunk__5727_5749 = G__5766;
            count__5728_5750 = G__5767;
            i__5729_5751 = G__5768;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m))) {
      var arglists_5769 = (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(function() {
        var or__3922__auto__ = (new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return (new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m);
        }
      }())) {
        cljs.core.prn.call(null, arglists_5769);
      } else {
        cljs.core.prn.call(null, cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, arglists_5769)) ? cljs.core.second.call(null, arglists_5769) : arglists_5769);
      }
    } else {
    }
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "special-form", "special-form", -1326536374)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Special Form");
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.contains_QMARK_.call(null, m, new cljs.core.Keyword(null, "url", "url", 276297046))) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))) {
        return cljs.core.println.call(null, ["\n  Please see http://clojure.org/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
      } else {
        return null;
      }
    } else {
      return cljs.core.println.call(null, ["\n  Please see http://clojure.org/special_forms#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "Macro");
    } else {
    }
    if (cljs.core.truth_((new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "REPL Special Function");
    } else {
    }
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
      var seq__5730_5770 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(m));
      var chunk__5731_5771 = null;
      var count__5732_5772 = 0;
      var i__5733_5773 = 0;
      while (true) {
        if (i__5733_5773 < count__5732_5772) {
          var vec__5734_5774 = cljs.core._nth.call(null, chunk__5731_5771, i__5733_5773);
          var name_5775 = cljs.core.nth.call(null, vec__5734_5774, 0, null);
          var map__5737_5776 = cljs.core.nth.call(null, vec__5734_5774, 1, null);
          var map__5737_5777__$1 = (!(map__5737_5776 == null) ? map__5737_5776.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5737_5776.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5737_5776) : map__5737_5776;
          var doc_5778 = cljs.core.get.call(null, map__5737_5777__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
          var arglists_5779 = cljs.core.get.call(null, map__5737_5777__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
          cljs.core.println.call(null);
          cljs.core.println.call(null, " ", name_5775);
          cljs.core.println.call(null, " ", arglists_5779);
          if (cljs.core.truth_(doc_5778)) {
            cljs.core.println.call(null, " ", doc_5778);
          } else {
          }
          var G__5780 = seq__5730_5770;
          var G__5781 = chunk__5731_5771;
          var G__5782 = count__5732_5772;
          var G__5783 = i__5733_5773 + 1;
          seq__5730_5770 = G__5780;
          chunk__5731_5771 = G__5781;
          count__5732_5772 = G__5782;
          i__5733_5773 = G__5783;
          continue;
        } else {
          var temp__4657__auto___5784 = cljs.core.seq.call(null, seq__5730_5770);
          if (temp__4657__auto___5784) {
            var seq__5730_5785__$1 = temp__4657__auto___5784;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__5730_5785__$1)) {
              var c__4319__auto___5786 = cljs.core.chunk_first.call(null, seq__5730_5785__$1);
              var G__5787 = cljs.core.chunk_rest.call(null, seq__5730_5785__$1);
              var G__5788 = c__4319__auto___5786;
              var G__5789 = cljs.core.count.call(null, c__4319__auto___5786);
              var G__5790 = 0;
              seq__5730_5770 = G__5787;
              chunk__5731_5771 = G__5788;
              count__5732_5772 = G__5789;
              i__5733_5773 = G__5790;
              continue;
            } else {
              var vec__5739_5791 = cljs.core.first.call(null, seq__5730_5785__$1);
              var name_5792 = cljs.core.nth.call(null, vec__5739_5791, 0, null);
              var map__5742_5793 = cljs.core.nth.call(null, vec__5739_5791, 1, null);
              var map__5742_5794__$1 = (!(map__5742_5793 == null) ? map__5742_5793.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5742_5793.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5742_5793) : map__5742_5793;
              var doc_5795 = cljs.core.get.call(null, map__5742_5794__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
              var arglists_5796 = cljs.core.get.call(null, map__5742_5794__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
              cljs.core.println.call(null);
              cljs.core.println.call(null, " ", name_5792);
              cljs.core.println.call(null, " ", arglists_5796);
              if (cljs.core.truth_(doc_5795)) {
                cljs.core.println.call(null, " ", doc_5795);
              } else {
              }
              var G__5797 = cljs.core.next.call(null, seq__5730_5785__$1);
              var G__5798 = null;
              var G__5799 = 0;
              var G__5800 = 0;
              seq__5730_5770 = G__5797;
              chunk__5731_5771 = G__5798;
              count__5732_5772 = G__5799;
              i__5733_5773 = G__5800;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    if (cljs.core.truth_(n)) {
      var temp__4657__auto__ = cljs.spec.alpha.get_spec.call(null, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name.call(null, n))].join(""), cljs.core.name.call(null, nm)));
      if (cljs.core.truth_(temp__4657__auto__)) {
        var fnspec = temp__4657__auto__;
        cljs.core.print.call(null, "Spec");
        var seq__5744 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "args", "args", 1315556576), new cljs.core.Keyword(null, "ret", "ret", -468222814), new cljs.core.Keyword(null, "fn", "fn", -1175266204)], null));
        var chunk__5745 = null;
        var count__5746 = 0;
        var i__5747 = 0;
        while (true) {
          if (i__5747 < count__5746) {
            var role = cljs.core._nth.call(null, chunk__5745, i__5747);
            var temp__4657__auto___5801__$1 = cljs.core.get.call(null, fnspec, role);
            if (cljs.core.truth_(temp__4657__auto___5801__$1)) {
              var spec_5802 = temp__4657__auto___5801__$1;
              cljs.core.print.call(null, ["\n ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, role)), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_5802));
            } else {
            }
            var G__5803 = seq__5744;
            var G__5804 = chunk__5745;
            var G__5805 = count__5746;
            var G__5806 = i__5747 + 1;
            seq__5744 = G__5803;
            chunk__5745 = G__5804;
            count__5746 = G__5805;
            i__5747 = G__5806;
            continue;
          } else {
            var temp__4657__auto____$1 = cljs.core.seq.call(null, seq__5744);
            if (temp__4657__auto____$1) {
              var seq__5744__$1 = temp__4657__auto____$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__5744__$1)) {
                var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__5744__$1);
                var G__5807 = cljs.core.chunk_rest.call(null, seq__5744__$1);
                var G__5808 = c__4319__auto__;
                var G__5809 = cljs.core.count.call(null, c__4319__auto__);
                var G__5810 = 0;
                seq__5744 = G__5807;
                chunk__5745 = G__5808;
                count__5746 = G__5809;
                i__5747 = G__5810;
                continue;
              } else {
                var role = cljs.core.first.call(null, seq__5744__$1);
                var temp__4657__auto___5811__$2 = cljs.core.get.call(null, fnspec, role);
                if (cljs.core.truth_(temp__4657__auto___5811__$2)) {
                  var spec_5812 = temp__4657__auto___5811__$2;
                  cljs.core.print.call(null, ["\n ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, role)), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_5812));
                } else {
                }
                var G__5813 = cljs.core.next.call(null, seq__5744__$1);
                var G__5814 = null;
                var G__5815 = 0;
                var G__5816 = 0;
                seq__5744 = G__5813;
                chunk__5745 = G__5814;
                count__5746 = G__5815;
                i__5747 = G__5816;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.json");
goog.require("goog.userAgent.product");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("cljs.repl");
goog.define("clojure.browser.repl.HOST", "localhost");
goog.define("clojure.browser.repl.PORT", 9000);
clojure.browser.repl._STAR_repl_STAR_ = null;
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.parent_connected_QMARK_ = cljs.core.atom.call(null, false);
clojure.browser.repl.print_queue = [];
clojure.browser.repl.flush_print_queue_BANG_ = function clojure$browser$repl$flush_print_queue_BANG_(conn) {
  var seq__5819_5823 = cljs.core.seq.call(null, clojure.browser.repl.print_queue);
  var chunk__5820_5824 = null;
  var count__5821_5825 = 0;
  var i__5822_5826 = 0;
  while (true) {
    if (i__5822_5826 < count__5821_5825) {
      var str_5827 = cljs.core._nth.call(null, chunk__5820_5824, i__5822_5826);
      clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_5827}));
      var G__5828 = seq__5819_5823;
      var G__5829 = chunk__5820_5824;
      var G__5830 = count__5821_5825;
      var G__5831 = i__5822_5826 + 1;
      seq__5819_5823 = G__5828;
      chunk__5820_5824 = G__5829;
      count__5821_5825 = G__5830;
      i__5822_5826 = G__5831;
      continue;
    } else {
      var temp__4657__auto___5832 = cljs.core.seq.call(null, seq__5819_5823);
      if (temp__4657__auto___5832) {
        var seq__5819_5833__$1 = temp__4657__auto___5832;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5819_5833__$1)) {
          var c__4319__auto___5834 = cljs.core.chunk_first.call(null, seq__5819_5833__$1);
          var G__5835 = cljs.core.chunk_rest.call(null, seq__5819_5833__$1);
          var G__5836 = c__4319__auto___5834;
          var G__5837 = cljs.core.count.call(null, c__4319__auto___5834);
          var G__5838 = 0;
          seq__5819_5823 = G__5835;
          chunk__5820_5824 = G__5836;
          count__5821_5825 = G__5837;
          i__5822_5826 = G__5838;
          continue;
        } else {
          var str_5839 = cljs.core.first.call(null, seq__5819_5833__$1);
          clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_5839}));
          var G__5840 = cljs.core.next.call(null, seq__5819_5833__$1);
          var G__5841 = null;
          var G__5842 = 0;
          var G__5843 = 0;
          seq__5819_5823 = G__5840;
          chunk__5820_5824 = G__5841;
          count__5821_5825 = G__5842;
          i__5822_5826 = G__5843;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return goog.array.clear(clojure.browser.repl.print_queue);
};
clojure.browser.repl.repl_print = function clojure$browser$repl$repl_print(data) {
  clojure.browser.repl.print_queue.push(cljs.core.pr_str.call(null, data));
  if (cljs.core.truth_(cljs.core.deref.call(null, clojure.browser.repl.parent_connected_QMARK_))) {
    return clojure.browser.repl.flush_print_queue_BANG_.call(null, cljs.core.deref.call(null, clojure.browser.repl.xpc_connection));
  } else {
    return null;
  }
};
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core.set_print_fn_BANG_.call(null, clojure.browser.repl.repl_print);
cljs.core.set_print_err_fn_BANG_.call(null, clojure.browser.repl.repl_print);
clojure.browser.repl.get_ua_product = function clojure$browser$repl$get_ua_product() {
  if (cljs.core.truth_(goog.userAgent.product.SAFARI)) {
    return new cljs.core.Keyword(null, "safari", "safari", 497115653);
  } else {
    if (cljs.core.truth_(goog.userAgent.product.CHROME)) {
      return new cljs.core.Keyword(null, "chrome", "chrome", 1718738387);
    } else {
      if (cljs.core.truth_(goog.userAgent.product.FIREFOX)) {
        return new cljs.core.Keyword(null, "firefox", "firefox", 1283768880);
      } else {
        if (cljs.core.truth_(goog.userAgent.product.IE)) {
          return new cljs.core.Keyword(null, "ie", "ie", 2038473780);
        } else {
          return null;
        }
      }
    }
  }
};
clojure.browser.repl.evaluate_javascript = function clojure$browser$repl$evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(block))].join("")], null);
    } catch (e5844) {
      var e = e5844;
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "ua-product", "ua-product", 938384227), clojure.browser.repl.get_ua_product.call(null), new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? 
      e.stack : "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function clojure$browser$repl$send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function clojure$browser$repl$send_print(var_args) {
  var G__5846 = arguments.length;
  switch(G__5846) {
    case 2:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2 = function(url, data) {
  return clojure.browser.repl.send_print.call(null, url, data, 0);
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3 = function(url, data, n) {
  var conn = clojure.browser.net.xhr_connection.call(null);
  clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", -978969032), function(conn) {
    return function(_) {
      if (n < 10) {
        return clojure.browser.repl.send_print.call(null, url, data, n + 1);
      } else {
        return console.log(["Could not send ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(data), " after ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " attempts."].join(""));
      }
    };
  }(conn));
  return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print.cljs$lang$maxFixedArity = 3;
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function clojure$browser$repl$wrap_message(repl, t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "repl", "repl", -35398667), repl, new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "content", "content", 15833224), data, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function clojure$browser$repl$start_evaluator(url) {
  var temp__4655__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var repl_connection = temp__4655__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    var repl_connected_QMARK_ = cljs.core.atom.call(null, false);
    var try_handshake = function(connection, repl_connected_QMARK_, repl_connection, temp__4655__auto__) {
      return function clojure$browser$repl$start_evaluator_$_try_handshake() {
        if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
          return null;
        } else {
          clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), null);
          return setTimeout(clojure$browser$repl$start_evaluator_$_try_handshake, 10);
        }
      };
    }(connection, repl_connected_QMARK_, repl_connection, temp__4655__auto__);
    clojure.browser.net.connect.call(null, repl_connection, try_handshake);
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__) {
      return function(_) {
        if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
          return null;
        } else {
          cljs.core.reset_BANG_.call(null, repl_connected_QMARK_, true);
          return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
        }
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__));
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 1890645906), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__) {
      return function(json) {
        var obj = goog.json.parse(json);
        var repl = goog.object.get(obj, "repl");
        var result = goog.object.get(obj, "result");
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "result", "result", 1415092211), result));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__));
    return clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1299562414), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__) {
      return function(json) {
        var obj = goog.json.parse(json);
        var repl = goog.object.get(obj, "repl");
        var str = goog.object.get(obj, "str");
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "print", "print", 1299562414), str));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__4655__auto__));
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.load_queue = null;
clojure.browser.repl.bootstrap = function clojure$browser$repl$bootstrap() {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    goog.require__ = goog.require;
    goog.isProvided_ = function(name) {
      return false;
    };
    goog.constructNamespace_("cljs.user");
    goog.writeScriptTag__ = function(src, opt_sourceText) {
      var loaded = cljs.core.atom.call(null, false);
      var onload = function(loaded) {
        return function() {
          if (cljs.core.truth_(function() {
            var and__3911__auto__ = clojure.browser.repl.load_queue;
            if (cljs.core.truth_(and__3911__auto__)) {
              return cljs.core.deref.call(null, loaded) === false;
            } else {
              return and__3911__auto__;
            }
          }())) {
            cljs.core.swap_BANG_.call(null, loaded, cljs.core.not);
            if (clojure.browser.repl.load_queue.length === 0) {
              return clojure.browser.repl.load_queue = null;
            } else {
              return goog.writeScriptTag__.apply(null, clojure.browser.repl.load_queue.shift());
            }
          } else {
            return null;
          }
        };
      }(loaded);
      return document.body.appendChild(function() {
        var script = document.createElement("script");
        var script__$1 = function() {
          var G__5848 = script;
          goog.object.set(G__5848, "type", "text/javascript");
          goog.object.set(G__5848, "onload", onload);
          goog.object.set(G__5848, "onreadystatechange", onload);
          return G__5848;
        }();
        if (opt_sourceText == null) {
          var G__5849 = script__$1;
          goog.object.set(G__5849, "src", src);
          return G__5849;
        } else {
          var G__5850 = script__$1;
          goog.dom.setTextContext(G__5850, opt_sourceText);
          return G__5850;
        }
      }());
    };
    goog.writeScriptTag_ = function(src, opt_sourceText) {
      if (cljs.core.truth_(clojure.browser.repl.load_queue)) {
        return clojure.browser.repl.load_queue.push([src, opt_sourceText]);
      } else {
        clojure.browser.repl.load_queue = [];
        return goog.writeScriptTag__(src, opt_sourceText);
      }
    };
    return goog.require = function(src, reload) {
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = true;
      } else {
      }
      var reload_QMARK_ = function() {
        var or__3922__auto__ = reload;
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return goog.cljsReloadAll__;
        }
      }();
      if (cljs.core.truth_(reload_QMARK_)) {
        var path_5851 = goog.object.get(goog.dependencies_.nameToPath, src);
        goog.object.remove(goog.dependencies_.visited, path_5851);
        goog.object.remove(goog.dependencies_.written, path_5851);
        goog.object.remove(goog.dependencies_.written, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.basePath), cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_5851)].join(""));
      } else {
      }
      var ret = goog.require__(src);
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = false;
      } else {
      }
      return ret;
    };
  }
};
clojure.browser.repl.connect = function clojure$browser$repl$connect(repl_server_url) {
  var connected_QMARK_ = cljs.core.atom.call(null, false);
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), function(connected_QMARK_, repl_connection) {
    return function(_) {
      if (cljs.core.truth_(cljs.core.deref.call(null, connected_QMARK_))) {
        return null;
      } else {
        cljs.core.reset_BANG_.call(null, connected_QMARK_, true);
        cljs.core.reset_BANG_.call(null, clojure.browser.repl.parent_connected_QMARK_, true);
        clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), null);
        return clojure.browser.repl.flush_print_queue_BANG_.call(null, repl_connection);
      }
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(connected_QMARK_, repl_connection) {
    return function(json) {
      var obj = goog.json.parse(json);
      var repl = goog.object.get(obj, "repl");
      var form = goog.object.get(obj, "form");
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), goog.json.serialize({"repl":repl, "result":function() {
        var _STAR_repl_STAR_5852 = clojure.browser.repl._STAR_repl_STAR_;
        clojure.browser.repl._STAR_repl_STAR_ = repl;
        try {
          return clojure.browser.repl.evaluate_javascript.call(null, repl_connection, form);
        } finally {
          clojure.browser.repl._STAR_repl_STAR_ = _STAR_repl_STAR_5852;
        }
      }()}));
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(connected_QMARK_, repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.repl.bootstrap.call(null);
  return repl_connection;
};
goog.provide("goog.html.legacyconversions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.html.legacyconversions.safeHtmlFromString = function(html) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, null);
};
goog.html.legacyconversions.safeScriptFromString = function(script) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.legacyconversions.safeStyleFromString = function(style) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.legacyconversions.safeStyleSheetFromString = function(styleSheet) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.legacyconversions.safeUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.trustedResourceUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.reportCallback_ = goog.nullFunction;
goog.html.legacyconversions.setReportCallback = function(callback) {
  goog.html.legacyconversions.reportCallback_ = callback;
};
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.object");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5000;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.scriptLoadingDeferred_;
goog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {
  if (!trustedUris.length) {
    return goog.async.Deferred.succeed(null);
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);
  if (isAnotherModuleLoading) {
    return goog.net.jsloader.scriptLoadingDeferred_;
  }
  trustedUris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var trustedUri = trustedUris.shift();
    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);
    if (trustedUris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
    return deferred;
  };
  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();
  return goog.net.jsloader.scriptLoadingDeferred_;
};
goog.net.jsloader.safeLoad = function(trustedUri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  var properties = options.attributes || {};
  goog.object.extend(properties, {"type":"text/javascript", "charset":"UTF-8"});
  goog.dom.setProperties(script, properties);
  goog.dom.safe.setScriptSrc(script, trustedUri);
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.safeLoadAndVerify = function(trustedUri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.html.legacyconversions");
goog.require("goog.net.jsloader");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5000;
  this.nonce_ = "";
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.getCallbackId_ = function(id) {
  return goog.net.Jsonp.CALLBACKS + "__" + id;
};
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout;
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_;
};
goog.net.Jsonp.prototype.setNonce = function(nonce) {
  this.nonce_ = nonce;
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  var uri = this.uri_.clone();
  if (payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri);
  }
  if (opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[callbackId] = reply;
    uri.setParameterValues(this.callbackParamName_, callbackId);
  }
  var options = {timeout:this.timeout_, cleanupWhenDone:true};
  if (this.nonce_) {
    options.attributes = {"nonce":this.nonce_};
  }
  var deferred = goog.net.jsloader.safeLoad(goog.html.legacyconversions.trustedResourceUrlFromString(uri.toString()), options);
  var error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return {id_:id, deferred_:deferred};
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if (request) {
    if (request.deferred_) {
      request.deferred_.cancel();
    }
    if (request.id_) {
      goog.net.Jsonp.cleanup_(request.id_, false);
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, false);
    if (opt_errorCallback) {
      opt_errorCallback(payload);
    }
  };
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  var handler = function(var_args) {
    goog.net.Jsonp.cleanup_(id, true);
    replyCallback.apply(undefined, arguments);
  };
  return handler;
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  if (goog.global[callbackId]) {
    if (deleteReplyHandler) {
      try {
        delete goog.global[callbackId];
      } catch (e) {
        goog.global[callbackId] = undefined;
      }
    } else {
      goog.global[callbackId] = goog.nullFunction;
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for (var name in payload) {
    if (!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name]);
    }
  }
  return uri;
};
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length <= CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0; i < hexString.length; i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  var out = [], p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        if ((c & 64512) == 55296 && i + 1 < str.length && (str.charCodeAt(i + 1) & 64512) == 56320) {
          c = 65536 + ((c & 1023) << 10) + (str.charCodeAt(++i) & 1023);
          out[p++] = c >> 18 | 240;
          out[p++] = c >> 12 & 63 | 128;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = c & 63 | 128;
        } else {
          out[p++] = c >> 12 | 224;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = c & 63 | 128;
        }
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        if (c1 > 239 && c1 < 365) {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          var c4 = bytes[pos++];
          var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 65536;
          out[c++] = String.fromCharCode(55296 + (u >> 10));
          out[c++] = String.fromCharCode(56320 + (u & 1023));
        } else {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
        }
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0; i < bytes1.length; i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.crypt.base64");
goog.require("goog.asserts");
goog.require("goog.crypt");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.require("goog.userAgent.product");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/\x3d";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || typeof goog.global.btoa == "function";
goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  goog.asserts.assert(goog.isArrayLike(input), "encodeByteArray takes an array as a parameter");
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0; i < input.length; i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_ENCODE_ && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !opt_webSafe) {
    return goog.global.atob(input);
  }
  var output = "";
  function pushByte(b) {
    output += String.fromCharCode(b);
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_ignored) {
  var output = [];
  function pushByte(b) {
    output.push(b);
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToUint8Array = function(input) {
  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
  var output = new Uint8Array(Math.ceil(input.length * 3 / 4));
  var outLen = 0;
  function pushByte(b) {
    output[outLen++] = b;
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output.subarray(0, outLen);
};
goog.crypt.base64.decodeStringInternal_ = function(input, pushByte) {
  goog.crypt.base64.init_();
  var nextCharIndex = 0;
  function getByte(default_val) {
    while (nextCharIndex < input.length) {
      var ch = input.charAt(nextCharIndex++);
      var b = goog.crypt.base64.charToByteMap_[ch];
      if (b != null) {
        return b;
      }
      if (!goog.string.isEmptyOrWhitespace(ch)) {
        throw Error("Unknown base64 encoding at char: " + ch);
      }
    }
    return default_val;
  }
  while (true) {
    var byte1 = getByte(-1);
    var byte2 = getByte(0);
    var byte3 = getByte(64);
    var byte4 = getByte(64);
    if (byte4 === 64) {
      if (byte1 === -1) {
        return;
      }
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    pushByte(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      pushByte(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        pushByte(outByte3);
      }
    }
  }
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    for (var i = 0; i < goog.crypt.base64.ENCODED_VALS.length; i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {
        goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
      }
    }
  }
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$.call(null, x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4172__auto__, k__4173__auto__) {
  var self__ = this;
  var this__4172__auto____$1 = this;
  return this__4172__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4173__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4174__auto__, k4005, else__4175__auto__) {
  var self__ = this;
  var this__4174__auto____$1 = this;
  var G__4009 = k4005;
  var G__4009__$1 = G__4009 instanceof cljs.core.Keyword ? G__4009.fqn : null;
  switch(G__4009__$1) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k4005, else__4175__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4186__auto__, writer__4187__auto__, opts__4188__auto__) {
  var self__ = this;
  var this__4186__auto____$1 = this;
  var pr_pair__4189__auto__ = function(this__4186__auto____$1) {
    return function(keyval__4190__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4187__auto__, cljs.core.pr_writer, "", " ", "", opts__4188__auto__, keyval__4190__auto__);
    };
  }(this__4186__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4187__auto__, pr_pair__4189__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__4188__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4004) {
  var self__ = this;
  var G__4004__$1 = this;
  return new cljs.core.RecordIter(0, G__4004__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4170__auto__) {
  var self__ = this;
  var this__4170__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4167__auto__) {
  var self__ = this;
  var this__4167__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4176__auto__) {
  var self__ = this;
  var this__4176__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4168__auto__) {
  var self__ = this;
  var this__4168__auto____$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = function(h__4030__auto__, this__4168__auto____$1) {
      return function(coll__4169__auto__) {
        return -209062840 ^ cljs.core.hash_unordered_coll.call(null, coll__4169__auto__);
      };
    }(h__4030__auto__, this__4168__auto____$1).call(null, this__4168__auto____$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4006, other4007) {
  var self__ = this;
  var this4006__$1 = this;
  return !(other4007 == null) && this4006__$1.constructor === other4007.constructor && cljs.core._EQ_.call(null, this4006__$1.splicing_QMARK_, other4007.splicing_QMARK_) && cljs.core._EQ_.call(null, this4006__$1.form, other4007.form) && cljs.core._EQ_.call(null, this4006__$1.__extmap, other4007.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4181__auto__, k__4182__auto__) {
  var self__ = this;
  var this__4181__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), k__4182__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4181__auto____$1), self__.__meta), k__4182__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4182__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4179__auto__, k__4180__auto__, G__4004) {
  var self__ = this;
  var this__4179__auto____$1 = this;
  var pred__4010 = cljs.core.keyword_identical_QMARK_;
  var expr__4011 = k__4180__auto__;
  if (cljs.core.truth_(pred__4010.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), expr__4011))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__4004, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__4010.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), expr__4011))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__4004, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4180__auto__, G__4004), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4184__auto__) {
  var self__ = this;
  var this__4184__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form, null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4171__auto__, G__4004) {
  var self__ = this;
  var this__4171__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__4004, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4177__auto__, entry__4178__auto__) {
  var self__ = this;
  var this__4177__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4178__auto__)) {
    return this__4177__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4178__auto__, 0), cljs.core._nth.call(null, entry__4178__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4177__auto____$1, entry__4178__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__4208__auto__) {
  return new cljs.core.List(null, "cljs.tools.reader.impl.utils/ReaderConditional", null, 1, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__4208__auto__, writer__4209__auto__) {
  return cljs.core._write.call(null, writer__4209__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__4008) {
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(G__4008), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(G__4008), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, G__4008, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471))), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write.call(null, writer, ["#?", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null)].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([f, true]);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
cljs.tools.reader.impl.utils.namespace_keys = function cljs$tools$reader$impl$utils$namespace_keys(ns, keys) {
  var iter__4292__auto__ = function cljs$tools$reader$impl$utils$namespace_keys_$_iter__4014(s__4015) {
    return new cljs.core.LazySeq(null, function() {
      var s__4015__$1 = s__4015;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__4015__$1);
        if (temp__4657__auto__) {
          var s__4015__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__4015__$2)) {
            var c__4290__auto__ = cljs.core.chunk_first.call(null, s__4015__$2);
            var size__4291__auto__ = cljs.core.count.call(null, c__4290__auto__);
            var b__4017 = cljs.core.chunk_buffer.call(null, size__4291__auto__);
            if (function() {
              var i__4016 = 0;
              while (true) {
                if (i__4016 < size__4291__auto__) {
                  var key = cljs.core._nth.call(null, c__4290__auto__, i__4016);
                  cljs.core.chunk_append.call(null, b__4017, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
                    var vec__4018 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
                    var key_ns = cljs.core.nth.call(null, vec__4018, 0, null);
                    var key_name = cljs.core.nth.call(null, vec__4018, 1, null);
                    var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
                    if (key_ns == null) {
                      return __GT_key.call(null, ns, key_name);
                    } else {
                      if (cljs.core._EQ_.call(null, "_", key_ns)) {
                        return __GT_key.call(null, key_name);
                      } else {
                        return key;
                      }
                    }
                  }() : key);
                  var G__4024 = i__4016 + 1;
                  i__4016 = G__4024;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4017), cljs$tools$reader$impl$utils$namespace_keys_$_iter__4014.call(null, cljs.core.chunk_rest.call(null, s__4015__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4017), null);
            }
          } else {
            var key = cljs.core.first.call(null, s__4015__$2);
            return cljs.core.cons.call(null, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
              var vec__4021 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
              var key_ns = cljs.core.nth.call(null, vec__4021, 0, null);
              var key_name = cljs.core.nth.call(null, vec__4021, 1, null);
              var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
              if (key_ns == null) {
                return __GT_key.call(null, ns, key_name);
              } else {
                if (cljs.core._EQ_.call(null, "_", key_ns)) {
                  return __GT_key.call(null, key_name);
                } else {
                  return key;
                }
              }
            }() : key, cljs$tools$reader$impl$utils$namespace_keys_$_iter__4014.call(null, cljs.core.rest.call(null, s__4015__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4292__auto__.call(null, keys);
};
cljs.tools.reader.impl.utils.second_SINGLEQUOTE_ = function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__4025) {
  var vec__4026 = p__4025;
  var a = cljs.core.nth.call(null, vec__4026, 0, null);
  var b = cljs.core.nth.call(null, vec__4026, 1, null);
  if (cljs.core.truth_(a)) {
    return null;
  } else {
    return b;
  }
};
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader, ch);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__4211__auto__ = reader == null ? null : reader;
    var m__4212__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, reader);
    } else {
      var m__4212__auto____$1 = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$.call(null, c);
  } else {
    var c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1))].join("");
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$.call(null, c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1))].join("");
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$.call(null, self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if ("\f" === c || "\n" === c) {
      cljs.tools.reader.reader_types.read_char.call(null, rdr);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta.call(null, obj);
  return cljs.core.with_meta.call(null, obj, cljs.core.merge.call(null, m, cljs.core.dissoc.call(null, orig_meta, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames))].join(""), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.set(cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(buffer)].join(""), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count.call(null, s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader(var_args) {
  var G__4033 = arguments.length;
  switch(G__4033) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, s), cljs.core.object_array.call(null, buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args) {
  var G__4036 = arguments.length;
  switch(G__4036) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args) {
  var G__4039 = arguments.length;
  switch(G__4039) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, c)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join("");
    } else {
      var G__4041 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      var G__4042 = s.append(c);
      c = G__4041;
      s = G__4042;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return 1 === cljs.tools.reader.reader_types.get_column_number.call(null, rdr);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader.frames));
  try {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, buffer.getLength());
    var ret = f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta.call(null, ret, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, reader.frames))], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.inspect");
goog.require("cljs.core");
cljs.tools.reader.impl.inspect.inspect_STAR__col = function cljs$tools$reader$impl$inspect$inspect_STAR__col(truncate, col, start, end) {
  var n = cljs.core.count.call(null, col);
  var l = cljs.core.truth_(truncate) ? 0 : function() {
    var x__4009__auto__ = 10;
    var y__4010__auto__ = n;
    return x__4009__auto__ < y__4010__auto__ ? x__4009__auto__ : y__4010__auto__;
  }();
  var elements = cljs.core.map.call(null, cljs.core.partial.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, true), cljs.core.take.call(null, l, col));
  var content = cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", elements));
  var suffix = l < n ? "..." : null;
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(start), cljs.core.str.cljs$core$IFn$_invoke$arity$1(content), cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(end)].join("");
};
cljs.tools.reader.impl.inspect.dispatch_inspect = function cljs$tools$reader$impl$inspect$dispatch_inspect(_, x) {
  if (x == null) {
    return new cljs.core.Keyword(null, "nil", "nil", 99600501);
  } else {
    if (typeof x === "string") {
      return new cljs.core.Keyword(null, "string", "string", -1989541586);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
      } else {
        if (typeof x === "number") {
          return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
        } else {
          if (x instanceof cljs.core.Symbol) {
            return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
          } else {
            if (cljs.core.vector_QMARK_.call(null, x)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.list_QMARK_.call(null, x)) {
                return new cljs.core.Keyword(null, "list", "list", 765357683);
              } else {
                if (cljs.core.map_QMARK_.call(null, x)) {
                  return new cljs.core.Keyword(null, "map", "map", 1371690461);
                } else {
                  if (cljs.core.set_QMARK_.call(null, x)) {
                    return new cljs.core.Keyword(null, "set", "set", 304602554);
                  } else {
                    if (cljs.core._EQ_.call(null, x, true)) {
                      return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
                    } else {
                      if (cljs.core._EQ_.call(null, x, false)) {
                        return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
                      } else {
                        return cljs.core.type.call(null, x);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.tools.reader.impl.inspect.inspect_STAR_ !== "undefined") {
} else {
  cljs.tools.reader.impl.inspect.inspect_STAR_ = function() {
    var method_table__4382__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4383__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4384__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4385__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4386__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.tools.reader.impl.inspect", "inspect*"), cljs.tools.reader.impl.inspect.dispatch_inspect, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4386__auto__, method_table__4382__auto__, prefer_table__4383__auto__, method_cache__4384__auto__, cached_hierarchy__4385__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "string", "string", -1989541586), function(truncate, x) {
  var n = cljs.core.truth_(truncate) ? 5 : 20;
  var suffix = x.length > n ? '..."' : '"';
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.substring(0, function() {
    var x__4009__auto__ = n;
    var y__4010__auto__ = x.length;
    return x__4009__auto__ < y__4010__auto__ ? x__4009__auto__ : y__4010__auto__;
  }())), cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix)].join("");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "strable", "strable", 1877668047), function(truncate, x) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join("");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.IndexedSeq, function(truncate, x) {
  return "\x3cindexed seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.PersistentArrayMapSeq, function(truncate, x) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.NodeSeq, function(truncate, x) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.Cons, function(truncate, x) {
  return "\x3ccons\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.LazySeq, function(truncate, x) {
  return "\x3clazy seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "nil", "nil", 99600501), function(_, ___$1) {
  return "nil";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "list", "list", 765357683), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "(", ")");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "map", "map", 1371690461), function(truncate, m) {
  var len = cljs.core.count.call(null, m);
  var n_shown = cljs.core.truth_(truncate) ? 0 : len;
  var contents = cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, n_shown, m));
  var suffix = len > n_shown ? "...}" : "}";
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, contents, "{", suffix);
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "set", "set", 304602554), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "#{", "}");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "vector", "vector", 1902966158), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "[", "]");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(truncate, x) {
  return cljs.core.pr_str.call(null, cljs.core.type.call(null, x));
});
cljs.tools.reader.impl.inspect.inspect = function cljs$tools$reader$impl$inspect$inspect(var_args) {
  var G__4047 = arguments.length;
  switch(G__4047) {
    case 1:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, false, x);
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2 = function(truncate, x) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, truncate, x);
};
cljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.tools.reader.impl.errors");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("clojure.string");
goog.require("cljs.tools.reader.impl.inspect");
cljs.tools.reader.impl.errors.ex_details = function cljs$tools$reader$impl$errors$ex_details(rdr, ex_type) {
  var details = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), new cljs.core.Keyword(null, "ex-kind", "ex-kind", 1581199296), ex_type], null);
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return cljs.core.assoc.call(null, details, new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, rdr), new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, rdr), new cljs.core.Keyword(null, "col", "col", -1959363084), cljs.tools.reader.reader_types.get_column_number.call(null, rdr));
  } else {
    return details;
  }
};
cljs.tools.reader.impl.errors.throw_ex = function cljs$tools$reader$impl$errors$throw_ex(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4054 = arguments.length;
  var i__4500__auto___4055 = 0;
  while (true) {
    if (i__4500__auto___4055 < len__4499__auto___4054) {
      args__4502__auto__.push(arguments[i__4500__auto___4055]);
      var G__4056 = i__4500__auto___4055 + 1;
      i__4500__auto___4055 = G__4056;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic = function(rdr, ex_type, msg) {
  var details = cljs.tools.reader.impl.errors.ex_details.call(null, rdr, ex_type);
  var file = (new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(details);
  var line = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(details);
  var col = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(details);
  var msg1 = cljs.core.truth_(file) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), " "].join("") : null;
  var msg2 = cljs.core.truth_(line) ? ["[line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), ", col ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), "]"].join("") : null;
  var msg3 = cljs.core.truth_(function() {
    var or__3922__auto__ = msg1;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return msg2;
    }
  }()) ? " " : null;
  var full_msg = cljs.core.apply.call(null, cljs.core.str, msg1, msg2, msg3, msg);
  throw cljs.core.ex_info.call(null, full_msg, details);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$applyTo = function(seq4051) {
  var G__4052 = cljs.core.first.call(null, seq4051);
  var seq4051__$1 = cljs.core.next.call(null, seq4051);
  var G__4053 = cljs.core.first.call(null, seq4051__$1);
  var seq4051__$2 = cljs.core.next.call(null, seq4051__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4052, G__4053, seq4051__$2);
};
cljs.tools.reader.impl.errors.reader_error = function cljs$tools$reader$impl$errors$reader_error(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4059 = arguments.length;
  var i__4500__auto___4060 = 0;
  while (true) {
    if (i__4500__auto___4060 < len__4499__auto___4059) {
      args__4502__auto__.push(arguments[i__4500__auto___4060]);
      var G__4061 = i__4500__auto___4060 + 1;
      i__4500__auto___4060 = G__4061;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "reader-error", "reader-error", 1610253121), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.reader_error.cljs$lang$applyTo = function(seq4057) {
  var G__4058 = cljs.core.first.call(null, seq4057);
  var seq4057__$1 = cljs.core.next.call(null, seq4057);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4058, seq4057__$1);
};
cljs.tools.reader.impl.errors.illegal_arg_error = function cljs$tools$reader$impl$errors$illegal_arg_error(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4064 = arguments.length;
  var i__4500__auto___4065 = 0;
  while (true) {
    if (i__4500__auto___4065 < len__4499__auto___4064) {
      args__4502__auto__.push(arguments[i__4500__auto___4065]);
      var G__4066 = i__4500__auto___4065 + 1;
      i__4500__auto___4065 = G__4066;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$applyTo = function(seq4062) {
  var G__4063 = cljs.core.first.call(null, seq4062);
  var seq4062__$1 = cljs.core.next.call(null, seq4062);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4063, seq4062__$1);
};
cljs.tools.reader.impl.errors.eof_error = function cljs$tools$reader$impl$errors$eof_error(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4069 = arguments.length;
  var i__4500__auto___4070 = 0;
  while (true) {
    if (i__4500__auto___4070 < len__4499__auto___4069) {
      args__4502__auto__.push(arguments[i__4500__auto___4070]);
      var G__4071 = i__4500__auto___4070 + 1;
      i__4500__auto___4070 = G__4071;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "eof", "eof", -489063237), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.eof_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.eof_error.cljs$lang$applyTo = function(seq4067) {
  var G__4068 = cljs.core.first.call(null, seq4067);
  var seq4067__$1 = cljs.core.next.call(null, seq4067);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4068, seq4067__$1);
};
cljs.tools.reader.impl.errors.throw_eof_delimited = function cljs$tools$reader$impl$errors$throw_eof_delimited(var_args) {
  var G__4073 = arguments.length;
  switch(G__4073) {
    case 4:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4 = function(rdr, kind, column, line) {
  return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, line, column, null);
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5 = function(rdr, kind, line, column, n) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading ", cljs.core.truth_(n) ? ["item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " of "].join("") : null, cljs.core.name.call(null, kind), cljs.core.truth_(line) ? [", starting at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), " and column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ".");
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.impl.errors.throw_odd_map = function cljs$tools$reader$impl$errors$throw_odd_map(rdr, line, col, elements) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "The map literal starting with ", cljs.tools.reader.impl.inspect.inspect.call(null, cljs.core.first.call(null, elements)), cljs.core.truth_(line) ? [" on line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), " column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)].join("") : null, " contains ", cljs.core.count.call(null, elements), " form(s). Map literals must contain an even number of forms.");
};
cljs.tools.reader.impl.errors.throw_invalid_number = function cljs$tools$reader$impl$errors$throw_invalid_number(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid number: ", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_literal = function cljs$tools$reader$impl$errors$throw_invalid_unicode_literal(rdr, token) {
  throw cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid unicode literal: \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_escape = function cljs$tools$reader$impl$errors$throw_invalid_unicode_escape(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch, ".");
};
cljs.tools.reader.impl.errors.throw_invalid = function cljs$tools$reader$impl$errors$throw_invalid(rdr, kind, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid ", cljs.core.name.call(null, kind), ": ", token, ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_start = function cljs$tools$reader$impl$errors$throw_eof_at_start(rdr, kind) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading start of ", cljs.core.name.call(null, kind), ".");
};
cljs.tools.reader.impl.errors.throw_bad_char = function cljs$tools$reader$impl$errors$throw_bad_char(rdr, kind, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid character: ", ch, " found while reading ", cljs.core.name.call(null, kind), ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_dispatch = function cljs$tools$reader$impl$errors$throw_eof_at_dispatch(rdr) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading dispatch character.");
};
cljs.tools.reader.impl.errors.throw_bad_dispatch = function cljs$tools$reader$impl$errors$throw_bad_dispatch(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "No dispatch macro for ", ch, ".");
};
cljs.tools.reader.impl.errors.throw_unmatch_delimiter = function cljs$tools$reader$impl$errors$throw_unmatch_delimiter(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unmatched delimiter ", ch, ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading = function cljs$tools$reader$impl$errors$throw_eof_reading(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4079 = arguments.length;
  var i__4500__auto___4080 = 0;
  while (true) {
    if (i__4500__auto___4080 < len__4499__auto___4079) {
      args__4502__auto__.push(arguments[i__4500__auto___4080]);
      var G__4081 = i__4500__auto___4080 + 1;
      i__4500__auto___4080 = G__4081;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic = function(rdr, kind, start) {
  var init = function() {
    var G__4078 = kind;
    var G__4078__$1 = G__4078 instanceof cljs.core.Keyword ? G__4078.fqn : null;
    switch(G__4078__$1) {
      case "regex":
        return '#"';
        break;
      case "string":
        return '"';
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4078__$1)].join(""));
    }
  }();
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF reading ", cljs.core.name.call(null, kind), " starting ", cljs.core.apply.call(null, cljs.core.str, init, start), ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$applyTo = function(seq4075) {
  var G__4076 = cljs.core.first.call(null, seq4075);
  var seq4075__$1 = cljs.core.next.call(null, seq4075);
  var G__4077 = cljs.core.first.call(null, seq4075__$1);
  var seq4075__$2 = cljs.core.next.call(null, seq4075__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4076, G__4077, seq4075__$2);
};
cljs.tools.reader.impl.errors.throw_no_dispatch = function cljs$tools$reader$impl$errors$throw_no_dispatch(rdr, ch) {
  return cljs.tools.reader.impl.errors.throw_bad_dispatch.call(null, rdr, ch);
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_char = function cljs$tools$reader$impl$errors$throw_invalid_unicode_char(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid unicode character \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token = function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit_in_token(rdr, ch, token) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid digit ", ch, " in unicode character \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit = function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit(rdr, ch) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid digit ", ch, " in unicode character.");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_len = function cljs$tools$reader$impl$errors$throw_invalid_unicode_len(rdr, actual, expected) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid unicode literal. Unicode literals should be ", expected, "characters long.  ", "value suppled is ", actual, "characters long.");
};
cljs.tools.reader.impl.errors.throw_invalid_character_literal = function cljs$tools$reader$impl$errors$throw_invalid_character_literal(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid character literal \\u", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_octal_len = function cljs$tools$reader$impl$errors$throw_invalid_octal_len(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid octal escape sequence in a character literal:", token, ". Octal escape sequences must be 3 or fewer digits.");
};
cljs.tools.reader.impl.errors.throw_bad_octal_number = function cljs$tools$reader$impl$errors$throw_bad_octal_number(rdr) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377].");
};
cljs.tools.reader.impl.errors.throw_unsupported_character = function cljs$tools$reader$impl$errors$throw_unsupported_character(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unsupported character: ", token, ".");
};
cljs.tools.reader.impl.errors.throw_eof_in_character = function cljs$tools$reader$impl$errors$throw_eof_in_character(rdr) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading character.");
};
cljs.tools.reader.impl.errors.throw_bad_escape_char = function cljs$tools$reader$impl$errors$throw_bad_escape_char(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unsupported escape character: \\", ch, ".");
};
cljs.tools.reader.impl.errors.throw_single_colon = function cljs$tools$reader$impl$errors$throw_single_colon(rdr) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "A single colon is not a valid keyword.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata = function cljs$tools$reader$impl$errors$throw_bad_metadata(rdr, x) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Metadata cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, x), ". Metadata must be a Symbol, Keyword, String or Map.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata_target = function cljs$tools$reader$impl$errors$throw_bad_metadata_target(rdr, target) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Metadata can not be applied to ", cljs.tools.reader.impl.inspect.inspect.call(null, target), ". ", "Metadata can only be applied to IMetas.");
};
cljs.tools.reader.impl.errors.throw_feature_not_keyword = function cljs$tools$reader$impl$errors$throw_feature_not_keyword(rdr, feature) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, feature), " Features must be keywords.");
};
cljs.tools.reader.impl.errors.throw_ns_map_no_map = function cljs$tools$reader$impl$errors$throw_ns_map_no_map(rdr, ns_name) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Namespaced map with namespace ", ns_name, " does not specify a map.");
};
cljs.tools.reader.impl.errors.throw_bad_ns = function cljs$tools$reader$impl$errors$throw_bad_ns(rdr, ns_name) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid value used as namespace in namespaced map: ", ns_name, ".");
};
cljs.tools.reader.impl.errors.throw_bad_reader_tag = function cljs$tools$reader$impl$errors$throw_bad_reader_tag(rdr, tag) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid reader tag: ", cljs.tools.reader.impl.inspect.inspect.call(null, tag), ". Reader tags must be symbols.");
};
cljs.tools.reader.impl.errors.throw_unknown_reader_tag = function cljs$tools$reader$impl$errors$throw_unknown_reader_tag(rdr, tag) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "No reader function for tag ", cljs.tools.reader.impl.inspect.inspect.call(null, tag), ".");
};
cljs.tools.reader.impl.errors.duplicate_keys_error = function cljs$tools$reader$impl$errors$duplicate_keys_error(msg, coll) {
  var duplicates = function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates(seq) {
    var iter__4292__auto__ = function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__4093(s__4094) {
      return new cljs.core.LazySeq(null, function() {
        var s__4094__$1 = s__4094;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__4094__$1);
          if (temp__4657__auto__) {
            var s__4094__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__4094__$2)) {
              var c__4290__auto__ = cljs.core.chunk_first.call(null, s__4094__$2);
              var size__4291__auto__ = cljs.core.count.call(null, c__4290__auto__);
              var b__4096 = cljs.core.chunk_buffer.call(null, size__4291__auto__);
              if (function() {
                var i__4095 = 0;
                while (true) {
                  if (i__4095 < size__4291__auto__) {
                    var vec__4097 = cljs.core._nth.call(null, c__4290__auto__, i__4095);
                    var id = cljs.core.nth.call(null, vec__4097, 0, null);
                    var freq = cljs.core.nth.call(null, vec__4097, 1, null);
                    if (freq > 1) {
                      cljs.core.chunk_append.call(null, b__4096, id);
                      var G__4103 = i__4095 + 1;
                      i__4095 = G__4103;
                      continue;
                    } else {
                      var G__4104 = i__4095 + 1;
                      i__4095 = G__4104;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4096), cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__4093.call(null, cljs.core.chunk_rest.call(null, s__4094__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__4096), null);
              }
            } else {
              var vec__4100 = cljs.core.first.call(null, s__4094__$2);
              var id = cljs.core.nth.call(null, vec__4100, 0, null);
              var freq = cljs.core.nth.call(null, vec__4100, 1, null);
              if (freq > 1) {
                return cljs.core.cons.call(null, id, cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__4093.call(null, cljs.core.rest.call(null, s__4094__$2)));
              } else {
                var G__4105 = cljs.core.rest.call(null, s__4094__$2);
                s__4094__$1 = G__4105;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4292__auto__.call(null, cljs.core.frequencies.call(null, seq));
  };
  var dups = duplicates.call(null, coll);
  return cljs.core.apply.call(null, cljs.core.str, msg, cljs.core.count.call(null, dups) > 1 ? "s" : null, ": ", cljs.core.interpose.call(null, ", ", dups));
};
cljs.tools.reader.impl.errors.throw_dup_keys = function cljs$tools$reader$impl$errors$throw_dup_keys(rdr, kind, ks) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, cljs.tools.reader.impl.errors.duplicate_keys_error.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.capitalize.call(null, cljs.core.name.call(null, kind))), " literal contains duplicate key"].join(""), ks));
};
cljs.tools.reader.impl.errors.throw_eof_error = function cljs$tools$reader$impl$errors$throw_eof_error(rdr, line) {
  if (cljs.core.truth_(line)) {
    return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "EOF while reading, starting at line ", line, ".");
  } else {
    return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "EOF while reading.");
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.errors");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (pred.call(null, ch)) {
      var G__4108 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      ch = G__4108;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, reader))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, s));
  if (!(m.call(null, 2) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === m.call(null, 1);
    var a = !(m.call(null, 3) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 3), 10], null) : !(m.call(null, 4) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 4), 16], null) : !(m.call(null, 5) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 5), 8], null) : !(m.call(null, 7) == null) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 7), parseInt(m.call(null, 6))], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.call(null, 0);
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, a.call(null, 1));
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      if (cljs.core.truth_(isNaN(bn__$1))) {
        return null;
      } else {
        return bn__$1;
      }
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.call(null, 1);
  var denominator = m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, numerator)) ? cljs.core.subs.call(null, numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, s));
  if (!(m.call(null, 4) == null)) {
    return parseFloat(m.call(null, 1));
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__4109 = cljs.core.re_find.call(null, pattern, s);
  var match = cljs.core.nth.call(null, vec__4109, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int.call(null, s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float.call(null, s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.call(null, token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count.call(null, token)) {
        return null;
      } else {
        var sym = cljs.core.subs.call(null, token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4114 = arguments.length;
  var i__4500__auto___4115 = 0;
  while (true) {
    if (i__4500__auto___4115 < len__4499__auto___4114) {
      args__4502__auto__.push(arguments[i__4500__auto___4115]);
      var G__4116 = i__4500__auto___4115 + 1;
      i__4500__auto___4115 = G__4116;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq4112) {
  var G__4113 = cljs.core.first.call(null, seq4112);
  var seq4112__$1 = cljs.core.next.call(null, seq4112);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4113, seq4112__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__4117__delegate = function(rdr, _) {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, msg);
    };
    var G__4117 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__4118__i = 0, G__4118__a = new Array(arguments.length - 1);
        while (G__4118__i < G__4118__a.length) {
          G__4118__a[G__4118__i] = arguments[G__4118__i + 1];
          ++G__4118__i;
        }
        _ = new cljs.core.IndexedSeq(G__4118__a, 0, null);
      }
      return G__4117__delegate.call(this, rdr, _);
    };
    G__4117.cljs$lang$maxFixedArity = 1;
    G__4117.cljs$lang$applyTo = function(arglist__4119) {
      var rdr = cljs.core.first(arglist__4119);
      var _ = cljs.core.rest(arglist__4119);
      return G__4117__delegate(rdr, _);
    };
    G__4117.cljs$core$IFn$_invoke$arity$variadic = G__4117__delegate;
    return G__4117;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader.impl.errors");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__4137 = ch;
  switch(G__4137) {
    case '"':
    case ";":
    case "@":
    case "^":
    case "`":
    case "~":
    case "(":
    case ")":
    case "[":
    case "]":
    case "{":
    case "}":
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, kind, initch) {
  if (initch == null) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, rdr, kind);
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
        if (ch == null) {
        } else {
          cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__4139 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch = G__4139;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      return cljs.tools.reader.read_tagged.call(null, function() {
        var G__4140 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__4140, ch);
        return G__4140;
      }(), ch, opts, pending_forms);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, rdr);
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, rdr, ch);
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join(""));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "regex", "regex", 939488856), sb);
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_4141__$2 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (ch_4141__$2 == null) {
            cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "regex", "regex", 939488856), sb);
          } else {
          }
          sb.append(ch_4141__$2);
        } else {
        }
        var G__4142 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch__$1 = G__4142;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.char_code = function cljs$tools$reader$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char(var_args) {
  var G__4144 = arguments.length;
  switch(G__4144) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, token);
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, token, i), token);
      } else {
        var G__4146 = i + 1;
        var G__4147 = d + uc * base;
        i = G__4146;
        uc = G__4147;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, initch);
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__3922__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__3922__auto__) {
            return or__3922__auto__;
          } else {
            var or__3922__auto____$1 = cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__3922__auto____$1)) {
              return or__3922__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, rdr, i, length);
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, ch);
          } else {
            var G__4148 = i + 1;
            var G__4149 = d + uc * base;
            i = G__4148;
            uc = G__4149;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "퟿".charCodeAt(0);
cljs.tools.reader.lower_limit = "".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch)].join("") : cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "character", "character", 380652989), ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.call(null, token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.call(null, token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.call(null, token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.call(null, token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.call(null, token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.call(null, token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, rdr, ic.toString(16));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, rdr, token);
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.call(null, token, offset, len, base);
                        if (cljs.core.not.call(null, cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, token, offset), base))) {
                          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, rdr, token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null);
  } else {
    return null;
  }
};
if (typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(kind, delim, rdr, opts, pending_forms) {
  var vec__4150 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4150, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4150, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, start_line, start_column, cljs.core.count.call(null, a));
      } else {
        var G__4153 = cljs.core.conj_BANG_.call(null, a, form);
        a = G__4153;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(kind, delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR_4154 = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = true;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, kind, delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR_4154;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__4155 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4155, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4155, 1, null);
  var the_list = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", rdr, opts, pending_forms);
  var vec__4158 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__4158, 0, null);
  var end_column = cljs.core.nth.call(null, vec__4158, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, the_list) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__4161 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4161, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4161, 1, null);
  var the_vector = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", rdr, opts, pending_forms);
  var vec__4164 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__4164, 0, null);
  var end_column = cljs.core.nth.call(null, vec__4164, 1, null);
  return cljs.core.with_meta.call(null, the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__4167 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4167, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4167, 1, null);
  var the_map = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", rdr, opts, pending_forms);
  var map_count = cljs.core.count.call(null, the_map);
  var ks = cljs.core.take_nth.call(null, 2, the_map);
  var key_set = cljs.core.set.call(null, ks);
  var vec__4170 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__4170, 0, null);
  var end_column = cljs.core.nth.call(null, vec__4170, 1, null);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, start_line, start_column, the_map);
  } else {
  }
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, key_set), cljs.core.count.call(null, ks))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "map", "map", 1371690461), ks);
  }
  return cljs.core.with_meta.call(null, map_count <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, the_map), true, true) : cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, the_map), true), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__4173 = new goog.string.StringBuffer;
    G__4173.append(initch);
    return G__4173;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3922__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__3922__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.tools.reader.impl.errors.throw_invalid_number.call(null, rdr, s);
      }
    } else {
      var G__4175 = function() {
        var G__4174 = sb;
        G__4174.append(ch);
        return G__4174;
      }();
      var G__4176 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__4175;
      ch = G__4176;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__4177 = ch;
  switch(G__4177) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, rdr, ch__$1);
      } else {
        return cljs.tools.reader.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 255) {
          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, rdr, ch);
      }
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, reader, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', sb);
    } else {
      var G__4179 = ch;
      switch(G__4179) {
        case "\\":
          var G__4183 = function() {
            var G__4180 = sb;
            G__4180.append(cljs.tools.reader.escape_char.call(null, sb, reader));
            return G__4180;
          }();
          var G__4184 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__4183;
          ch = G__4184;
          continue;
          break;
        case '"':
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
          break;
        default:
          var G__4185 = function() {
            var G__4181 = sb;
            G__4181.append(ch);
            return G__4181;
          }();
          var G__4186 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__4185;
          ch = G__4186;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    var vec__4187 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
    var end_line = cljs.core.nth.call(null, vec__4187, 0, null);
    var end_column = cljs.core.nth.call(null, vec__4187, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null);
    return cljs.core.merge.call(null, filem, lcm);
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__4190 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var line = cljs.core.nth.call(null, vec__4190, 0, null);
  var column = cljs.core.nth.call(null, vec__4190, 1, null);
  var token = cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), initch);
  if (token == null) {
    return null;
  } else {
    var G__4193 = token;
    switch(G__4193) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.call(null, cljs.core._nth.call(null, p, 0), cljs.core._nth.call(null, p, 1));
          return cljs.core._with_meta.call(null, sym, cljs.tools.reader.loc_info.call(null, rdr, line, column));
        } else {
          return cljs.tools.reader.impl.errors.throw_invalid.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), token);
        }
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_alias = function cljs$tools$reader$resolve_alias(sym) {
  return cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, sym);
};
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  var or__3922__auto__ = cljs.tools.reader.resolve_alias.call(null, sym);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    var temp__4657__auto__ = cljs.core.find_ns.call(null, sym);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var ns = temp__4657__auto__;
      return cljs.core.symbol.call(null, cljs.core.ns_name.call(null, ns));
    } else {
      return null;
    }
  }
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.read_token.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (!(s == null)) {
      var ns = cljs.core._nth.call(null, s, 0);
      var name = cljs.core._nth.call(null, s, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var temp__4655__auto__ = cljs.tools.reader.resolve_alias.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, ns, 1)));
          if (cljs.core.truth_(temp__4655__auto__)) {
            var ns__$1 = temp__4655__auto__;
            return cljs.core.keyword.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1)].join(""), name);
          } else {
            return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(":"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""));
          }
        } else {
          var temp__4655__auto__ = cljs.core._STAR_ns_STAR_;
          if (cljs.core.truth_(temp__4655__auto__)) {
            var ns__$1 = temp__4655__auto__;
            return cljs.core.keyword.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1)].join(""), cljs.core.subs.call(null, name, 1));
          } else {
            return cljs.tools.reader.impl.errors.reader_error.call(null, reader, "Invalid token: :", token);
          }
        }
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(":"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""));
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, reader);
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    return new cljs.core.List(null, sym, new cljs.core.List(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms), null, 1, null), 2, null);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, rdr, function() {
      var vec__4195 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
      var line = cljs.core.nth.call(null, vec__4195, 0, null);
      var column = cljs.core.nth.call(null, vec__4195, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_.call(null, m)) {
      } else {
        cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
      }
      var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__3911__auto__ = line;
          if (cljs.core.truth_(and__3911__auto__)) {
            return cljs.core.seq_QMARK_.call(null, o);
          } else {
            return and__3911__auto__;
          }
        }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
        } else {
          return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
      }
    });
  } else {
    var vec__4200 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
    var line = cljs.core.nth.call(null, vec__4200, 0, null);
    var column = cljs.core.nth.call(null, vec__4200, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_.call(null, m)) {
    } else {
      cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
    }
    var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__3911__auto__ = line;
        if (cljs.core.truth_(and__3911__auto__)) {
          return cljs.core.seq_QMARK_.call(null, o);
        } else {
          return and__3911__auto__;
        }
      }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
      } else {
        return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__4205 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4205, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4205, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var coll = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", rdr, opts, pending_forms);
  var the_set = cljs.core.set.call(null, coll);
  var vec__4208 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__4208, 0, null);
  var end_column = cljs.core.nth.call(null, vec__4208, 1, null);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), cljs.core.count.call(null, the_set))) {
  } else {
    cljs.tools.reader.impl.errors.reader_error.call(null, rdr, cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "set", "set", 304602554), coll));
  }
  return cljs.core.with_meta.call(null, the_set, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column__$1, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__4211 = rdr;
  cljs.tools.reader.read_STAR_.call(null, G__4211, true, null, opts, pending_forms);
  return G__4211;
};
cljs.tools.reader.read_symbolic_value = function cljs$tools$reader$read_symbolic_value(rdr, _, opts, pending_forms) {
  var sym = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  var G__4212 = sym;
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), G__4212)) {
    return Number.NaN;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), G__4212)) {
      return Number.NEGATIVE_INFINITY;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), G__4212)) {
        return Number.POSITIVE_INFINITY;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
      }
    }
  }
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), feature) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "features", "features", -1146962336)), feature);
  } else {
    return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature should be a keyword: ", feature);
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    return cljs.tools.reader.impl.errors.throw_eof_error.call(null, rdr, function() {
      var and__3911__auto__ = first_line < 0;
      if (and__3911__auto__) {
        return first_line;
      } else {
        return and__3911__auto__;
      }
    }());
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature name ", form, " is reserved");
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "read-cond requires an even number of forms");
    } else {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "read-cond starting on line ", first_line, " requires an even number of forms");
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR_4213 = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = true;
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error.call(null, form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_4213;
  }
};
if (typeof cljs.tools.reader.NO_MATCH !== "undefined") {
} else {
  cljs.tools.reader.NO_MATCH = new Object;
}
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error.call(null, feature, rdr, first_line);
  if (cljs.core._EQ_.call(null, feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features.call(null, rdr, feature);
    if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_.call(null, rdr, feature, opts))) {
      var G__4214 = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error.call(null, G__4214, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond.call(null, G__4214, rdr, first_line);
      return G__4214;
    } else {
      var or__3922__auto__ = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.tools.reader.NO_MATCH;
      }
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : -1;
  var result = function() {
    var matched = cljs.tools.reader.NO_MATCH;
    var finished = null;
    while (true) {
      if (matched === cljs.tools.reader.NO_MATCH) {
        var match = cljs.tools.reader.match_feature.call(null, first_line, rdr, opts, pending_forms);
        if (match === cljs.tools.reader.READ_FINISHED) {
          return cljs.tools.reader.READ_FINISHED;
        } else {
          var G__4216 = match;
          var G__4217 = null;
          matched = G__4216;
          finished = G__4217;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__4218 = matched;
          var G__4219 = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
          matched = G__4218;
          finished = G__4219;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result === cljs.tools.reader.READ_FINISHED) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === result.cljs$core$ISequential$ ? true : false : false) {
        goog.array.insertArrayAt(pending_forms, cljs.core.to_array.call(null, result), 0);
        return rdr;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Spliced form list in read-cond-splicing must implement ISequential");
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not.call(null, function() {
    var and__3911__auto__ = opts;
    if (cljs.core.truth_(and__3911__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__3911__auto__;
    }
  }())) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  } else {
  }
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var splicing = cljs.core._EQ_.call(null, ch, "@");
    var ch__$1 = splicing ? cljs.tools.reader.reader_types.read_char.call(null, rdr) : ch;
    if (splicing) {
      if (cljs.tools.reader._STAR_read_delim_STAR_) {
      } else {
        cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "cond-splice not in list");
      }
    } else {
    }
    var temp__4655__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch__$1) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var ch__$2 = temp__4655__auto____$1;
      if (cljs.core.not_EQ_.call(null, ch__$2, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      } else {
        var _STAR_suppress_read_STAR_4220 = cljs.tools.reader._STAR_suppress_read_STAR_;
        cljs.tools.reader._STAR_suppress_read_STAR_ = function() {
          var or__3922__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__3922__auto__)) {
            return or__3922__auto__;
          } else {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited.call(null, rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_4220;
        }
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(-1 === n ? "rest" : ["p", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join("")), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "#"].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var arg_env4221 = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map.call(null);
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, function() {
      var G__4222 = rdr;
      cljs.tools.reader.reader_types.unread.call(null, G__4222, "(");
      return G__4222;
    }(), true, null, opts, pending_forms);
    var rargs = cljs.core.rseq.call(null, cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key.call(null, cljs.core.first.call(null, rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_.call(null, args);
          } else {
            var G__4223 = i + 1;
            var G__4224 = cljs.core.conj_BANG_.call(null, args, function() {
              var or__3922__auto__ = cljs.core.get.call(null, cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__3922__auto__)) {
                return or__3922__auto__;
              } else {
                return cljs.tools.reader.garg.call(null, i);
              }
            }());
            i = G__4223;
            args = G__4224;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, args, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return new cljs.core.List(null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.List(null, args, new cljs.core.List(null, form, null, 1, null), 2, null), 3, null);
  } finally {
    cljs.tools.reader.arg_env = arg_env4221;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__4655__auto__ = cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var ret = temp__4655__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg.call(null, n);
      cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
};
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
      return cljs.tools.reader.register_arg.call(null, 1);
    } else {
      if (cljs.core._EQ_.call(null, ch, "\x26")) {
        cljs.tools.reader.reader_types.read_char.call(null, rdr);
        return cljs.tools.reader.register_arg.call(null, -1);
      } else {
        var n = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_.call(null, n)) {
          throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
        } else {
          return cljs.tools.reader.register_arg.call(null, n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    if (cljs.core._EQ_.call(null, "@", ch)) {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
        var G__4225 = rdr;
        cljs.tools.reader.reader_types.read_char.call(null, G__4225);
        return G__4225;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  var r = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first.call(null, s__$1);
      var ret = cljs.core.conj_BANG_.call(null, r, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, item)) ? new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null), new cljs.core.List(null, cljs.core.second.call(null, item), null, 1, null), 2, null) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, item)) ? cljs.core.second.call(null, item) : new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", 
      "clojure.core/list", -1119203325, null), new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, item), null, 1, null), 2, null));
      var G__4226 = cljs.core.next.call(null, s__$1);
      var G__4227 = ret;
      s__$1 = G__4226;
      r = G__4227;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq.call(null, form);
  var key_vals = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__4228 = cljs.core.next.call(null, s);
      var G__4229 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, key_vals, cljs.core.key.call(null, e)), cljs.core.val.call(null, e));
      s = G__4228;
      key_vals = G__4229;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var or__3922__auto__ = cljs.core.get.call(null, cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    var gs = cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, cljs.core.name.call(null, sym), 0, cljs.core.count.call(null, cljs.core.name.call(null, sym)) - 1)), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "__auto__"].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__3911__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__3911__auto__) {
      return cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, form), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "source", "source", -433931539)));
    } else {
      return and__3911__auto__;
    }
  }()) {
    return new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null), new cljs.core.List(null, ret, new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, form)), null, 1, null), 2, null), 3, null);
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, coll)), null, 1, null), 2, null);
  if (cljs.core.truth_(type)) {
    return new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null), new cljs.core.List(null, type, new cljs.core.List(null, res, null, 1, null), 2, null), 3, null);
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count.call(null, coll) >= 16) {
    return new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
  } else {
    return new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), s], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta.call(null, form, cljs.core.special_symbol_QMARK_.call(null, form) ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, form, null, 1, null), 2, null) : form instanceof cljs.core.Symbol ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.truth_(function() {
    var and__3911__auto__ = cljs.core.not.call(null, cljs.core.namespace.call(null, form));
    if (and__3911__auto__) {
      return goog.string.endsWith(cljs.core.name.call(null, form), "#");
    } else {
      return and__3911__auto__;
    }
  }()) ? cljs.tools.reader.register_gensym.call(null, form) : function() {
    var sym = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join("");
    if (cljs.core.truth_(goog.string.endsWith(sym, "."))) {
      var csym = cljs.core.symbol.call(null, cljs.core.subs.call(null, sym, 0, cljs.core.count.call(null, sym) - 1));
      return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.resolve_symbol.call(null, csym)), "."].join(""));
    } else {
      return cljs.tools.reader.resolve_symbol.call(null, form);
    }
  }(), null, 1, null), 2, null) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, form)) ? cljs.core.second.call(null, form) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, form)) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, form), cljs.tools.reader.flatten_map.call(null, form)) : cljs.core.vector_QMARK_.call(null, form) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "vec", 
  "cljs.core/vec", 307622519, null), new cljs.core.List(null, cljs.tools.reader.syntax_quote_coll.call(null, null, form), null, 1, null), 2, null) : cljs.core.set_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), form) : cljs.core.seq_QMARK_.call(null, form) || cljs.core.list_QMARK_.call(null, form) ? function() {
    var seq = cljs.core.seq.call(null, form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll.call(null, null, seq);
    } else {
      return cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
    }
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : cljs.core.truth_(function() {
    var or__3922__auto__ = form instanceof cljs.core.Keyword;
    if (or__3922__auto__) {
      return or__3922__auto__;
    } else {
      var or__3922__auto____$1 = typeof form === "number";
      if (or__3922__auto____$1) {
        return or__3922__auto____$1;
      } else {
        var or__3922__auto____$2 = typeof form === "string";
        if (or__3922__auto____$2) {
          return or__3922__auto____$2;
        } else {
          var or__3922__auto____$3 = form == null;
          if (or__3922__auto____$3) {
            return or__3922__auto____$3;
          } else {
            var or__3922__auto____$4 = cljs.tools.reader.bool_QMARK_.call(null, form);
            if (cljs.core.truth_(or__3922__auto____$4)) {
              return or__3922__auto____$4;
            } else {
              return form instanceof RegExp;
            }
          }
        }
      }
    }
  }()) ? form : new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, form, null, 1, null), 2, null));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env4233 = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env4233;
  }
};
cljs.tools.reader.read_namespaced_map = function cljs$tools$reader$read_namespaced_map(rdr, _, opts, pending_forms) {
  var token = cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__4655__auto__ = cljs.core._EQ_.call(null, token, ":") ? cljs.core.ns_name.call(null, cljs.core._STAR_ns_STAR_) : cljs.core._EQ_.call(null, ":", cljs.core.first.call(null, token)) ? function() {
    var G__4234 = token;
    var G__4234__$1 = G__4234 == null ? null : cljs.core.subs.call(null, G__4234, 1);
    var G__4234__$2 = G__4234__$1 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__4234__$1);
    var G__4234__$3 = G__4234__$2 == null ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__4234__$2);
    var G__4234__$4 = G__4234__$3 == null ? null : cljs.core.symbol.call(null, G__4234__$3);
    if (G__4234__$4 == null) {
      return null;
    } else {
      return cljs.tools.reader.resolve_ns.call(null, G__4234__$4);
    }
  }() : function() {
    var G__4235 = token;
    var G__4235__$1 = G__4235 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__4235);
    if (G__4235__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__4235__$1);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ns = temp__4655__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", rdr, opts, pending_forms);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, null, null, items);
      } else {
      }
      var keys = cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), cljs.core.take_nth.call(null, 2, items));
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, keys)), cljs.core.count.call(null, keys))) {
      } else {
        cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), keys);
      }
      return cljs.core.zipmap.call(null, keys, vals);
    } else {
      return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, rdr, token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_ns.call(null, rdr, token);
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__4236 = ch;
  switch(G__4236) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__4238 = ch;
  switch(G__4238) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    case ":":
      return cljs.tools.reader.read_namespaced_map;
      break;
    case "#":
      return cljs.tools.reader.read_symbolic_value;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, rdr, tag);
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__4655__auto__ = function() {
      var or__3922__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var f = temp__4655__auto__;
      return f.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    } else {
      var temp__4655__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
      if (cljs.core.truth_(temp__4655__auto____$1)) {
        var f = temp__4655__auto____$1;
        return f.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      } else {
        return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, rdr, tag);
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                    return cljs.tools.reader.read_number.call(null, reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros.call(null, ch);
                    if (!(f == null)) {
                      var res = f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                return cljs.tools.reader.read_number.call(null, reader, ch);
              } else {
                var f = cljs.tools.reader.macros.call(null, ch);
                if (!(f == null)) {
                  var res = f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_(var_args) {
  var G__4241 = arguments.length;
  switch(G__4241) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e4242) {
    if (e4242 instanceof Error) {
      var e = e4242;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e4242;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read(var_args) {
  var G__4245 = arguments.length;
  switch(G__4245) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.call(null, reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__4246, reader) {
  var map__4247 = p__4246;
  var map__4247__$1 = (!(map__4247 == null) ? map__4247.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4247.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4247) : map__4247;
  var opts = map__4247__$1;
  var eof = cljs.core.get.call(null, map__4247__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, reader, cljs.core._EQ_.call(null, eof, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), eof, null, opts, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string(var_args) {
  var G__4251 = arguments.length;
  switch(G__4251) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = s;
    if (cljs.core.truth_(and__3911__auto__)) {
      return !(s === "");
    } else {
      return and__3911__auto__;
    }
  }())) {
    return cljs.tools.reader.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.read_PLUS_string = function cljs$tools$reader$read_PLUS_string(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4255 = arguments.length;
  var i__4500__auto___4256 = 0;
  while (true) {
    if (i__4500__auto___4256 < len__4499__auto___4255) {
      args__4502__auto__.push(arguments[i__4500__auto___4256]);
      var G__4257 = i__4500__auto___4256 + 1;
      i__4500__auto___4256 = G__4257;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic = function(reader, args) {
  var buf = function(reader__$1) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader__$1.frames)))].join("");
  };
  var offset = cljs.core.count.call(null, buf.call(null, reader));
  var o = cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader)) ? cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function(buf, offset) {
    return function() {
      if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args))) {
        return cljs.tools.reader.read.call(null, cljs.core.first.call(null, args), reader);
      } else {
        return cljs.core.apply.call(null, cljs.tools.reader.read, reader, args);
      }
    };
  }(buf, offset)) : cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.tools.reader.read.call(null, cljs.core.first.call(null, args), reader) : cljs.core.apply.call(null, cljs.tools.reader.read, reader, args);
  var s = cljs.core.subs.call(null, buf.call(null, reader), offset).trim();
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, s], null);
};
cljs.tools.reader.read_PLUS_string.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.read_PLUS_string.cljs$lang$applyTo = function(seq4253) {
  var G__4254 = cljs.core.first.call(null, seq4253);
  var seq4253__$1 = cljs.core.next.call(null, seq4253);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4254, seq4253__$1);
};
goog.provide("cljs.tools.reader.edn");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.errors");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.edn.macro_terminating_QMARK_ = function cljs$tools$reader$edn$macro_terminating_QMARK_(ch) {
  var and__3911__auto__ = !("#" === ch);
  if (and__3911__auto__) {
    var and__3911__auto____$1 = !("'" === ch);
    if (and__3911__auto____$1) {
      var and__3911__auto____$2 = !(":" === ch);
      if (and__3911__auto____$2) {
        return cljs.tools.reader.edn.macros.call(null, ch);
      } else {
        return and__3911__auto____$2;
      }
    } else {
      return and__3911__auto____$1;
    }
  } else {
    return and__3911__auto__;
  }
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function cljs$tools$reader$edn$not_constituent_QMARK_(ch) {
  return "@" === ch || "`" === ch || "~" === ch;
};
cljs.tools.reader.edn.read_token = function cljs$tools$reader$edn$read_token(var_args) {
  var G__4261 = arguments.length;
  switch(G__4261) {
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(rdr, kind, initch) {
  return cljs.tools.reader.edn.read_token.call(null, rdr, kind, initch, true);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4 = function(rdr, kind, initch, validate_leading_QMARK_) {
  if (cljs.core.not.call(null, initch)) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, rdr, kind);
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = validate_leading_QMARK_;
      if (cljs.core.truth_(and__3911__auto__)) {
        return cljs.tools.reader.edn.not_constituent_QMARK_.call(null, initch);
      } else {
        return and__3911__auto__;
      }
    }())) {
      return cljs.tools.reader.impl.errors.throw_bad_char.call(null, rdr, kind, initch);
    } else {
      var sb = new goog.string.StringBuffer;
      var ch = function() {
        cljs.tools.reader.reader_types.unread.call(null, rdr, initch);
        return initch;
      }();
      while (true) {
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || ch == null) {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
        } else {
          if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch)) {
            return cljs.tools.reader.impl.errors.throw_bad_char.call(null, rdr, kind, ch);
          } else {
            var G__4264 = function() {
              var G__4262 = sb;
              G__4262.append(cljs.tools.reader.reader_types.read_char.call(null, rdr));
              return G__4262;
            }();
            var G__4265 = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
            sb = G__4264;
            ch = G__4265;
            continue;
          }
        }
        break;
      }
    }
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_dispatch = function cljs$tools$reader$edn$read_dispatch(rdr, _, opts) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.edn.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts);
    } else {
      var temp__4655__auto____$2 = cljs.tools.reader.edn.read_tagged.call(null, function() {
        var G__4266 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__4266, ch);
        return G__4266;
      }(), ch, opts);
      if (cljs.core.truth_(temp__4655__auto____$2)) {
        var obj = temp__4655__auto____$2;
        return obj;
      } else {
        return cljs.tools.reader.impl.errors.throw_no_dispatch.call(null, rdr, ch);
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, rdr);
  }
};
cljs.tools.reader.edn.read_unmatched_delimiter = function cljs$tools$reader$edn$read_unmatched_delimiter(rdr, ch, opts) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, rdr, ch);
};
cljs.tools.reader.edn.read_unicode_char = function cljs$tools$reader$edn$read_unicode_char(var_args) {
  var G__4268 = arguments.length;
  switch(G__4268) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, token);
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, token, i), token);
      } else {
        var G__4270 = i + 1;
        var G__4271 = d + uc * base;
        i = G__4270;
        uc = G__4271;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, initch);
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__3922__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__3922__auto__) {
            return or__3922__auto__;
          } else {
            var or__3922__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(or__3922__auto____$1)) {
              return or__3922__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, rdr, i, length);
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, ch);
          } else {
            var G__4272 = i + 1;
            var G__4273 = d + uc * base;
            i = G__4272;
            uc = G__4273;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = "퟿".charCodeAt(0);
cljs.tools.reader.edn.lower_limit = "".charCodeAt(0);
cljs.tools.reader.edn.read_char_STAR_ = function cljs$tools$reader$edn$read_char_STAR_(rdr, backslash, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch)].join("") : cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "character", "character", 380652989), ch, false);
    var token_len = cljs.core.count.call(null, token);
    if (1 === token_len) {
      return cljs.core.nth.call(null, token, 0);
    } else {
      if (token === "newline") {
        return "\n";
      } else {
        if (token === "space") {
          return " ";
        } else {
          if (token === "tab") {
            return "\t";
          } else {
            if (token === "backspace") {
              return "\b";
            } else {
              if (token === "formfeed") {
                return "\f";
              } else {
                if (token === "return") {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt();
                    if (ic > cljs.tools.reader.edn.upper_limit && ic < cljs.tools.reader.edn.lower_limit) {
                      return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, rdr, ic.toString(16));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, rdr, token);
                      } else {
                        var uc = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, len, 8);
                        if ((uc | 0) > 255) {
                          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, rdr, token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.edn.starting_line_col_info = function cljs$tools$reader$edn$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), (cljs.tools.reader.reader_types.get_column_number.call(null, rdr) | 0) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_delimited = function cljs$tools$reader$edn$read_delimited(kind, delim, rdr, opts) {
  var vec__4274 = cljs.tools.reader.edn.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4274, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4274, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, start_line, start_column, cljs.core.count.call(null, a));
    }
    if (cljs.core._EQ_.call(null, delim__$1, cljs.tools.reader.impl.utils.char$.call(null, ch))) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4655__auto__ = cljs.tools.reader.edn.macros.call(null, ch);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var macrofn = temp__4655__auto__;
        var mret = macrofn.call(null, rdr, ch, opts);
        var G__4278 = !(mret === rdr) ? cljs.core.conj_BANG_.call(null, a, mret) : a;
        a = G__4278;
        continue;
      } else {
        var o = cljs.tools.reader.edn.read.call(null, function() {
          var G__4277 = rdr;
          cljs.tools.reader.reader_types.unread.call(null, G__4277, ch);
          return G__4277;
        }(), true, null, opts);
        var G__4279 = !(o === rdr) ? cljs.core.conj_BANG_.call(null, a, o) : a;
        a = G__4279;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_list = function cljs$tools$reader$edn$read_list(rdr, _, opts) {
  var the_list = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", rdr, opts);
  if (cljs.core.empty_QMARK_.call(null, the_list)) {
    return cljs.core.List.EMPTY;
  } else {
    return cljs.core.apply.call(null, cljs.core.list, the_list);
  }
};
cljs.tools.reader.edn.read_vector = function cljs$tools$reader$edn$read_vector(rdr, _, opts) {
  return cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", rdr, opts);
};
cljs.tools.reader.edn.read_map = function cljs$tools$reader$edn$read_map(rdr, _, opts) {
  var vec__4280 = cljs.tools.reader.edn.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__4280, 0, null);
  var start_column = cljs.core.nth.call(null, vec__4280, 1, null);
  var the_map = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", rdr, opts);
  var map_count = cljs.core.count.call(null, the_map);
  var ks = cljs.core.take_nth.call(null, 2, the_map);
  var key_set = cljs.core.set.call(null, ks);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, start_line, start_column, the_map);
  } else {
  }
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, key_set), cljs.core.count.call(null, ks))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "map", "map", 1371690461), ks);
  }
  if (map_count <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, the_map), true, true);
  } else {
    return cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, the_map), true);
  }
};
cljs.tools.reader.edn.read_number = function cljs$tools$reader$edn$read_number(rdr, initch, opts) {
  var sb = function() {
    var G__4283 = new goog.string.StringBuffer;
    G__4283.append(initch);
    return G__4283;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3922__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__3922__auto__) {
        return or__3922__auto__;
      } else {
        var or__3922__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
        if (cljs.core.truth_(or__3922__auto____$1)) {
          return or__3922__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__3922__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.tools.reader.impl.errors.throw_invalid_number.call(null, rdr, s);
      }
    } else {
      var G__4285 = function() {
        var G__4284 = sb;
        G__4284.append(ch);
        return G__4284;
      }();
      var G__4286 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__4285;
      ch = G__4286;
      continue;
    }
    break;
  }
};
cljs.tools.reader.edn.escape_char = function cljs$tools$reader$edn$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__4287 = ch;
  switch(G__4287) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, rdr, ch__$1);
      } else {
        return cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 255) {
          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, rdr, ch);
      }
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function cljs$tools$reader$edn$read_string_STAR_(rdr, _, opts) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    var G__4289 = ch;
    if (cljs.core._EQ_.call(null, null, G__4289)) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', sb);
    } else {
      if (cljs.core._EQ_.call(null, "\\", G__4289)) {
        var G__4292 = function() {
          var G__4290 = sb;
          G__4290.append(cljs.tools.reader.edn.escape_char.call(null, sb, rdr));
          return G__4290;
        }();
        var G__4293 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        sb = G__4292;
        ch = G__4293;
        continue;
      } else {
        if (cljs.core._EQ_.call(null, '"', G__4289)) {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join("");
        } else {
          var G__4294 = function() {
            var G__4291 = sb;
            G__4291.append(ch);
            return G__4291;
          }();
          var G__4295 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          sb = G__4294;
          ch = G__4295;
          continue;
        }
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_symbol = function cljs$tools$reader$edn$read_symbol(rdr, initch) {
  var temp__4657__auto__ = cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), initch);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var token = temp__4657__auto__;
    var G__4296 = token;
    switch(G__4296) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      default:
        var or__3922__auto__ = function() {
          var temp__4657__auto____$1 = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
          if (cljs.core.truth_(temp__4657__auto____$1)) {
            var p = temp__4657__auto____$1;
            return cljs.core.symbol.call(null, p.call(null, 0), p.call(null, 1));
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return cljs.tools.reader.impl.errors.throw_invalid.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), token);
        }
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function cljs$tools$reader$edn$read_keyword(reader, initch, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.edn.read_token.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = s;
      if (cljs.core.truth_(and__3911__auto__)) {
        return -1 === token.indexOf("::");
      } else {
        return and__3911__auto__;
      }
    }())) {
      var ns = s.call(null, 0);
      var name = s.call(null, 1);
      if (":" === cljs.core.nth.call(null, token, 0)) {
        return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), token);
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, reader);
  }
};
cljs.tools.reader.edn.wrapping_reader = function cljs$tools$reader$edn$wrapping_reader(sym) {
  return function(rdr, _, opts) {
    return new cljs.core.List(null, sym, new cljs.core.List(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts), null, 1, null), 2, null);
  };
};
cljs.tools.reader.edn.read_meta = function cljs$tools$reader$edn$read_meta(rdr, _, opts) {
  var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
  }
  var o = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
  }
};
cljs.tools.reader.edn.read_set = function cljs$tools$reader$edn$read_set(rdr, _, opts) {
  var coll = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", rdr, opts);
  var the_set = cljs.core.set.call(null, coll);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), cljs.core.count.call(null, the_set))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "set", "set", 304602554), coll);
  }
  return the_set;
};
cljs.tools.reader.edn.read_discard = function cljs$tools$reader$edn$read_discard(rdr, _, opts) {
  var G__4299 = rdr;
  cljs.tools.reader.edn.read.call(null, G__4299, true, null, true);
  return G__4299;
};
cljs.tools.reader.edn.read_namespaced_map = function cljs$tools$reader$edn$read_namespaced_map(rdr, _, opts) {
  var token = cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__4655__auto__ = function() {
    var G__4300 = token;
    var G__4300__$1 = G__4300 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__4300);
    if (G__4300__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__4300__$1);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ns = temp__4655__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", rdr, opts);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, null, null, items);
      } else {
      }
      var keys = cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), cljs.core.take_nth.call(null, 2, items));
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, keys)), cljs.core.count.call(null, keys))) {
      } else {
        cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), keys);
      }
      return cljs.core.zipmap.call(null, keys, vals);
    } else {
      return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, rdr, token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_ns.call(null, rdr, token);
  }
};
cljs.tools.reader.edn.read_symbolic_value = function cljs$tools$reader$edn$read_symbolic_value(rdr, _, opts) {
  var sym = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var G__4301 = sym;
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), G__4301)) {
    return Number.NaN;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), G__4301)) {
      return Number.NEGATIVE_INFINITY;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), G__4301)) {
        return Number.POSITIVE_INFINITY;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
      }
    }
  }
};
cljs.tools.reader.edn.macros = function cljs$tools$reader$edn$macros(ch) {
  var G__4302 = ch;
  switch(G__4302) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "(":
      return cljs.tools.reader.edn.read_list;
      break;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.edn.read_vector;
      break;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.edn.read_map;
      break;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
      break;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function cljs$tools$reader$edn$dispatch_macros(ch) {
  var G__4304 = ch;
  switch(G__4304) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "{":
      return cljs.tools.reader.edn.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.edn.read_discard;
      break;
    case ":":
      return cljs.tools.reader.edn.read_namespaced_map;
      break;
    case "#":
      return cljs.tools.reader.edn.read_symbolic_value;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function cljs$tools$reader$edn$read_tagged(rdr, initch, opts) {
  var tag = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var object = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  var temp__4655__auto__ = function() {
    var or__3922__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(opts), tag);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.tools.reader.default_data_readers.call(null, tag);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var f = temp__4655__auto__;
    return f.call(null, object);
  } else {
    var temp__4655__auto____$1 = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var d = temp__4655__auto____$1;
      return d.call(null, tag, object);
    } else {
      return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, rdr, tag);
    }
  }
};
cljs.tools.reader.edn.read = function cljs$tools$reader$edn$read(var_args) {
  var G__4307 = arguments.length;
  switch(G__4307) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, reader);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(p__4308, reader) {
  var map__4309 = p__4308;
  var map__4309__$1 = (!(map__4309 == null) ? map__4309.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4309.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4309) : map__4309;
  var opts = map__4309__$1;
  var eof = cljs.core.get.call(null, map__4309__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var eof_error_QMARK_ = !cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, opts);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  try {
    while (true) {
      var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
        continue;
      } else {
        if (ch == null) {
          if (cljs.core.truth_(eof_error_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
          } else {
            return eof;
          }
        } else {
          if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
            return cljs.tools.reader.edn.read_number.call(null, reader, ch, opts);
          } else {
            var f = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(f)) {
              var res = f.call(null, reader, ch, opts);
              if (res === reader) {
                continue;
              } else {
                return res;
              }
            } else {
              return cljs.tools.reader.edn.read_symbol.call(null, reader, ch);
            }
          }
        }
      }
      break;
    }
  } catch (e4311) {
    if (e4311 instanceof Error) {
      var e = e4311;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e4311;
    }
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function cljs$tools$reader$edn$read_string(var_args) {
  var G__4314 = arguments.length;
  switch(G__4314) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = s;
    if (cljs.core.truth_(and__3911__auto__)) {
      return cljs.core.not_EQ_.call(null, s, "");
    } else {
      return and__3911__auto__;
    }
  }())) {
    return cljs.tools.reader.edn.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("cljs.tools.reader");
goog.require("cljs.tools.reader.edn");
goog.require("goog.string.StringBuffer");
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__4338 = b.append("0");
          b = G__4338;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__3911__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if (cljs.core.truth_(and__3911__auto__)) {
    var or__3922__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400);
    }
  } else {
    return and__3911__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg), " Failed:  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(low), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__4339 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__4339, 0, null);
  var years = cljs.core.nth.call(null, vec__4339, 1, null);
  var months = cljs.core.nth.call(null, vec__4339, 2, null);
  var days = cljs.core.nth.call(null, vec__4339, 3, null);
  var hours = cljs.core.nth.call(null, vec__4339, 4, null);
  var minutes = cljs.core.nth.call(null, vec__4339, 5, null);
  var seconds = cljs.core.nth.call(null, vec__4339, 6, null);
  var fraction = cljs.core.nth.call(null, vec__4339, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__4339, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__4339, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__4339, 10, null);
  var v = vec__4339;
  if (cljs.core.not.call(null, v)) {
    throw new Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3922__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4655__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var vec__4342 = temp__4655__auto__;
    var years = cljs.core.nth.call(null, vec__4342, 0, null);
    var months = cljs.core.nth.call(null, vec__4342, 1, null);
    var days = cljs.core.nth.call(null, vec__4342, 2, null);
    var hours = cljs.core.nth.call(null, vec__4342, 3, null);
    var minutes = cljs.core.nth.call(null, vec__4342, 4, null);
    var seconds = cljs.core.nth.call(null, vec__4342, 5, null);
    var ms = cljs.core.nth.call(null, vec__4342, 6, null);
    var offset = cljs.core.nth.call(null, vec__4342, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1000);
  } else {
    throw new Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    throw new Error("Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    throw new Error("Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__4345_4361 = cljs.core.seq.call(null, form);
    var chunk__4346_4362 = null;
    var count__4347_4363 = 0;
    var i__4348_4364 = 0;
    while (true) {
      if (i__4348_4364 < count__4347_4363) {
        var x_4365 = cljs.core._nth.call(null, chunk__4346_4362, i__4348_4364);
        arr.push(x_4365);
        var G__4366 = seq__4345_4361;
        var G__4367 = chunk__4346_4362;
        var G__4368 = count__4347_4363;
        var G__4369 = i__4348_4364 + 1;
        seq__4345_4361 = G__4366;
        chunk__4346_4362 = G__4367;
        count__4347_4363 = G__4368;
        i__4348_4364 = G__4369;
        continue;
      } else {
        var temp__4657__auto___4370 = cljs.core.seq.call(null, seq__4345_4361);
        if (temp__4657__auto___4370) {
          var seq__4345_4371__$1 = temp__4657__auto___4370;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__4345_4371__$1)) {
            var c__4319__auto___4372 = cljs.core.chunk_first.call(null, seq__4345_4371__$1);
            var G__4373 = cljs.core.chunk_rest.call(null, seq__4345_4371__$1);
            var G__4374 = c__4319__auto___4372;
            var G__4375 = cljs.core.count.call(null, c__4319__auto___4372);
            var G__4376 = 0;
            seq__4345_4361 = G__4373;
            chunk__4346_4362 = G__4374;
            count__4347_4363 = G__4375;
            i__4348_4364 = G__4376;
            continue;
          } else {
            var x_4377 = cljs.core.first.call(null, seq__4345_4371__$1);
            arr.push(x_4377);
            var G__4378 = cljs.core.next.call(null, seq__4345_4371__$1);
            var G__4379 = null;
            var G__4380 = 0;
            var G__4381 = 0;
            seq__4345_4361 = G__4378;
            chunk__4346_4362 = G__4379;
            count__4347_4363 = G__4380;
            i__4348_4364 = G__4381;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = {};
      var seq__4351_4382 = cljs.core.seq.call(null, form);
      var chunk__4352_4383 = null;
      var count__4353_4384 = 0;
      var i__4354_4385 = 0;
      while (true) {
        if (i__4354_4385 < count__4353_4384) {
          var vec__4355_4386 = cljs.core._nth.call(null, chunk__4352_4383, i__4354_4385);
          var k_4387 = cljs.core.nth.call(null, vec__4355_4386, 0, null);
          var v_4388 = cljs.core.nth.call(null, vec__4355_4386, 1, null);
          goog.object.set(obj, cljs.core.name.call(null, k_4387), v_4388);
          var G__4389 = seq__4351_4382;
          var G__4390 = chunk__4352_4383;
          var G__4391 = count__4353_4384;
          var G__4392 = i__4354_4385 + 1;
          seq__4351_4382 = G__4389;
          chunk__4352_4383 = G__4390;
          count__4353_4384 = G__4391;
          i__4354_4385 = G__4392;
          continue;
        } else {
          var temp__4657__auto___4393 = cljs.core.seq.call(null, seq__4351_4382);
          if (temp__4657__auto___4393) {
            var seq__4351_4394__$1 = temp__4657__auto___4393;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__4351_4394__$1)) {
              var c__4319__auto___4395 = cljs.core.chunk_first.call(null, seq__4351_4394__$1);
              var G__4396 = cljs.core.chunk_rest.call(null, seq__4351_4394__$1);
              var G__4397 = c__4319__auto___4395;
              var G__4398 = cljs.core.count.call(null, c__4319__auto___4395);
              var G__4399 = 0;
              seq__4351_4382 = G__4396;
              chunk__4352_4383 = G__4397;
              count__4353_4384 = G__4398;
              i__4354_4385 = G__4399;
              continue;
            } else {
              var vec__4358_4400 = cljs.core.first.call(null, seq__4351_4394__$1);
              var k_4401 = cljs.core.nth.call(null, vec__4358_4400, 0, null);
              var v_4402 = cljs.core.nth.call(null, vec__4358_4400, 1, null);
              goog.object.set(obj, cljs.core.name.call(null, k_4401), v_4402);
              var G__4403 = cljs.core.next.call(null, seq__4351_4394__$1);
              var G__4404 = null;
              var G__4405 = 0;
              var G__4406 = 0;
              seq__4351_4382 = G__4403;
              chunk__4352_4383 = G__4404;
              count__4353_4384 = G__4405;
              i__4354_4385 = G__4406;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      throw new Error(["JS literal expects a vector or map containing ", "only string or unqualified keyword keys"].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid.call(null, uuid);
  } else {
    throw new Error("UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), cljs.reader.read_date, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.reader.read_uuid, new cljs.core.Symbol(null, "queue", "queue", -1198599890, null), cljs.reader.read_queue, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.reader.read_js], null), cljs.core.PersistentArrayMap.EMPTY));
cljs.reader.read = function cljs$reader$read(var_args) {
  var G__4408 = arguments.length;
  switch(G__4408) {
    case 1:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), reader);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__4409, reader) {
  var map__4410 = p__4409;
  var map__4410__$1 = (!(map__4410 == null) ? map__4410.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4410.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4410) : map__4410;
  var opts = map__4410__$1;
  var eof = cljs.core.get.call(null, map__4410__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(map__4410, map__4410__$1, opts, eof) {
    return function(m) {
      return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
    };
  }(map__4410, map__4410__$1, opts, eof)), reader);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, cljs.core.update.call(null, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(m) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
  }));
};
cljs.reader.read.cljs$lang$maxFixedArity = 4;
cljs.reader.read_string = function cljs$reader$read_string(var_args) {
  var G__4414 = arguments.length;
  switch(G__4414) {
    case 1:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  return cljs.tools.reader.edn.read_string.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null), opts), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(m) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
  }), s);
};
cljs.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("no.en.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.crypt.base64");
no.en.core.port_number = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "amqp", "amqp", -994422895), 5672, new cljs.core.Keyword(null, "http", "http", 382524695), 80, new cljs.core.Keyword(null, "https", "https", -1983909665), 443, new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), 3306, new cljs.core.Keyword(null, "postgresql", "postgresql", -1568339962), 5432, new cljs.core.Keyword(null, "rabbitmq", "rabbitmq", 1046897371), 5672, new cljs.core.Keyword(null, "zookeeper", 
"zookeeper", 17281735), 2181], null);
no.en.core.url_regex = /([^:]+):\/\/(([^:]+):([^@]+)@)?(([^:\/]+)(:([0-9]+))?((\/[^?#]*)(\?([^#]*))?)?)(#(.*))?/;
no.en.core.split_by_regex = function no$en$core$split_by_regex(s, pattern) {
  if (cljs.core.sequential_QMARK_.call(null, s)) {
    return s;
  } else {
    if (!clojure.string.blank_QMARK_.call(null, s)) {
      return clojure.string.split.call(null, s, pattern);
    } else {
      return null;
    }
  }
};
no.en.core.split_by_comma = function no$en$core$split_by_comma(s) {
  return no.en.core.split_by_regex.call(null, s, /\s*,\s*/);
};
no.en.core.utf8_string = function no$en$core$utf8_string(bytes) {
  throw cljs.core.ex_info.call(null, "utf8-string not implemented yet", bytes);
};
no.en.core.base64_encode = function no$en$core$base64_encode(bytes) {
  if (cljs.core.truth_(bytes)) {
    return goog.crypt.base64.encodeString(bytes, false);
  } else {
    return null;
  }
};
no.en.core.base64_decode = function no$en$core$base64_decode(s) {
  if (cljs.core.truth_(s)) {
    return goog.crypt.base64.decodeString(s, false);
  } else {
    return null;
  }
};
no.en.core.compact_map = function no$en$core$compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (v == null || (cljs.core.map_QMARK_.call(null, v) || cljs.core.sequential_QMARK_.call(null, v)) && cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
no.en.core.url_encode = function no$en$core$url_encode(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4424 = arguments.length;
  var i__4500__auto___4425 = 0;
  while (true) {
    if (i__4500__auto___4425 < len__4499__auto___4424) {
      args__4502__auto__.push(arguments[i__4500__auto___4425]);
      var G__4426 = i__4500__auto___4425 + 1;
      i__4500__auto___4425 = G__4426;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__4420) {
  var vec__4421 = p__4420;
  var encoding = cljs.core.nth.call(null, vec__4421, 0, null);
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, encodeURIComponent([cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join("")), "*", "%2A");
  } else {
    return null;
  }
};
no.en.core.url_encode.cljs$lang$maxFixedArity = 1;
no.en.core.url_encode.cljs$lang$applyTo = function(seq4418) {
  var G__4419 = cljs.core.first.call(null, seq4418);
  var seq4418__$1 = cljs.core.next.call(null, seq4418);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4419, seq4418__$1);
};
no.en.core.url_decode = function no$en$core$url_decode(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4433 = arguments.length;
  var i__4500__auto___4434 = 0;
  while (true) {
    if (i__4500__auto___4434 < len__4499__auto___4433) {
      args__4502__auto__.push(arguments[i__4500__auto___4434]);
      var G__4435 = i__4500__auto___4434 + 1;
      i__4500__auto___4434 = G__4435;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__4429) {
  var vec__4430 = p__4429;
  var encoding = cljs.core.nth.call(null, vec__4430, 0, null);
  if (cljs.core.truth_(s)) {
    return decodeURIComponent(s);
  } else {
    return null;
  }
};
no.en.core.url_decode.cljs$lang$maxFixedArity = 1;
no.en.core.url_decode.cljs$lang$applyTo = function(seq4427) {
  var G__4428 = cljs.core.first.call(null, seq4427);
  var seq4427__$1 = cljs.core.next.call(null, seq4427);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4428, seq4427__$1);
};
no.en.core.pow = function no$en$core$pow(n, x) {
  return Math.pow(n, x);
};
no.en.core.byte_scale = cljs.core.PersistentHashMap.fromArrays(["T", "K", "G", "M", "Y", "Z", "E", "B", "P"], [no.en.core.pow.call(null, 1024, 4), no.en.core.pow.call(null, 1024, 1), no.en.core.pow.call(null, 1024, 3), no.en.core.pow.call(null, 1024, 2), no.en.core.pow.call(null, 1024, 8), no.en.core.pow.call(null, 1024, 7), no.en.core.pow.call(null, 1024, 6), no.en.core.pow.call(null, 1024, 0), no.en.core.pow.call(null, 1024, 5)]);
no.en.core.apply_unit = function no$en$core$apply_unit(number, unit) {
  if (typeof unit === "string") {
    var G__4436 = clojure.string.upper_case.call(null, unit);
    switch(G__4436) {
      default:
        var G__4437 = unit;
        switch(G__4437) {
          case "M":
            return number * 1000000;
            break;
          case "B":
            return number * 1000000000;
            break;
          default:
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4437)].join(""));
        }
    }
  } else {
    return number;
  }
};
no.en.core.parse_number = function no$en$core$parse_number(s, parse_fn) {
  var temp__4655__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(M|B)?.*/, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var matches = temp__4655__auto__;
    var number = parse_fn.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    if (cljs.core.not.call(null, isNaN(number))) {
      return no.en.core.apply_unit.call(null, number, unit);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
no.en.core.parse_bytes = function no$en$core$parse_bytes(s) {
  var temp__4655__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(B|K|M|G|T|P|E|Z|Y)?.*/, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var matches = temp__4655__auto__;
    var number = cljs.reader.read_string.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    return cljs.core.long$.call(null, cljs.core.long$.call(null, cljs.reader.read_string.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, matches, 1))].join(""))) * cljs.core.get.call(null, no.en.core.byte_scale, clojure.string.upper_case.call(null, function() {
      var or__3922__auto__ = unit;
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return "";
      }
    }()), 1));
  } else {
    return null;
  }
};
no.en.core.parse_integer = function no$en$core$parse_integer(s) {
  return no.en.core.parse_number.call(null, s, function(p1__4440_SHARP_) {
    return parseInt(p1__4440_SHARP_);
  });
};
no.en.core.parse_long = function no$en$core$parse_long(s) {
  return no.en.core.parse_number.call(null, s, function(p1__4441_SHARP_) {
    return parseInt(p1__4441_SHARP_);
  });
};
no.en.core.parse_double = function no$en$core$parse_double(s) {
  return no.en.core.parse_number.call(null, s, function(p1__4442_SHARP_) {
    return parseFloat(p1__4442_SHARP_);
  });
};
no.en.core.parse_float = function no$en$core$parse_float(s) {
  return no.en.core.parse_number.call(null, s, function(p1__4443_SHARP_) {
    return parseFloat(p1__4443_SHARP_);
  });
};
no.en.core.format_query_params = function no$en$core$format_query_params(m) {
  var params = clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__4446_SHARP_) {
    return clojure.string.join.call(null, "\x3d", p1__4446_SHARP_);
  }, cljs.core.map.call(null, function(p1__4445_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [no.en.core.url_encode.call(null, cljs.core.name.call(null, cljs.core.first.call(null, p1__4445_SHARP_))), no.en.core.url_encode.call(null, cljs.core.second.call(null, p1__4445_SHARP_))], null);
  }, cljs.core.remove.call(null, function(p1__4444_SHARP_) {
    return clojure.string.blank_QMARK_.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, p1__4444_SHARP_))].join(""));
  }, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.seq.call(null, m))))));
  if (!clojure.string.blank_QMARK_.call(null, params)) {
    return params;
  } else {
    return null;
  }
};
no.en.core.format_url = function no$en$core$format_url(m) {
  if (!cljs.core.empty_QMARK_.call(null, m)) {
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(m);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m))), "://"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var map__4447 = m;
      var map__4447__$1 = (!(map__4447 == null) ? map__4447.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4447.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4447) : map__4447;
      var username = cljs.core.get.call(null, map__4447__$1, new cljs.core.Keyword(null, "username", "username", 1605666410));
      var password = cljs.core.get.call(null, map__4447__$1, new cljs.core.Keyword(null, "password", "password", 417022471));
      if (cljs.core.truth_(username)) {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(username), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(password) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(password)].join("") : null), "@"].join("");
      } else {
        return null;
      }
    }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var temp__4655__auto__ = (new cljs.core.Keyword(null, "server-port", "server-port", 663745648)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var port = temp__4655__auto__;
        if (!cljs.core._EQ_.call(null, port, no.en.core.port_number.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)))) {
          return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join("");
        } else {
          return null;
        }
      } else {
        return null;
      }
    }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m) == null && !cljs.core.empty_QMARK_.call(null, query_params) ? "/" : (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(!cljs.core.empty_QMARK_.call(null, query_params) ? ["?", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.format_query_params.call(null, query_params))].join("") : 
    null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(!clojure.string.blank_QMARK_.call(null, (new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m)) ? ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))].join("") : null)].join("");
  } else {
    return null;
  }
};
no.en.core.public_url = function no$en$core$public_url(url) {
  return no.en.core.format_url.call(null, cljs.core.dissoc.call(null, url, new cljs.core.Keyword(null, "password", "password", 417022471)));
};
no.en.core.parse_percent = function no$en$core$parse_percent(s) {
  return no.en.core.parse_double.call(null, clojure.string.replace.call(null, s, "%", ""));
};
no.en.core.pattern_quote = function no$en$core$pattern_quote(s) {
  return clojure.string.replace.call(null, cljs.core.name.call(null, s), /([\[\]\^\$\|\(\)\\\+\*\?\{\}=!.])/, "\\\\$1");
};
no.en.core.separator = function no$en$core$separator(s) {
  var temp__4655__auto__ = cljs.core.re_matches.call(null, /([a-z0-9_-]+)([^a-z0-9_-]+).*/i, s);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var matches = temp__4655__auto__;
    return cljs.core.nth.call(null, matches, 2);
  } else {
    return null;
  }
};
no.en.core.parse_query_params = function no$en$core$parse_query_params(s) {
  if (cljs.core.truth_(s)) {
    return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__4451_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, no.en.core.url_decode.call(null, cljs.core.first.call(null, p1__4451_SHARP_))), no.en.core.url_decode.call(null, cljs.core.second.call(null, p1__4451_SHARP_))], null);
    }, cljs.core.filter.call(null, function(p1__4450_SHARP_) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, p1__4450_SHARP_));
    }, cljs.core.map.call(null, function(p1__4449_SHARP_) {
      return clojure.string.split.call(null, p1__4449_SHARP_, /=/);
    }, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""), /&/)))));
  } else {
    return null;
  }
};
no.en.core.parse_url = function no$en$core$parse_url(s) {
  var temp__4655__auto__ = cljs.core.re_matches.call(null, no.en.core.url_regex, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var matches = temp__4655__auto__;
    var scheme = cljs.core.keyword.call(null, cljs.core.nth.call(null, matches, 1));
    return no.en.core.compact_map.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "password", "password", 417022471), new cljs.core.Keyword(null, "fragment", "fragment", 826775688), new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "uri", "uri", -774711847), new cljs.core.Keyword(null, 
    "server-name", "server-name", -1012104295), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), new cljs.core.Keyword(null, "scheme", "scheme", 90199613)], [cljs.core.nth.call(null, matches, 4), cljs.core.nth.call(null, matches, 14), cljs.core.nth.call(null, matches, 3), function() {
      var or__3922__auto__ = no.en.core.parse_integer.call(null, cljs.core.nth.call(null, matches, 8));
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return no.en.core.port_number.call(null, scheme);
      }
    }(), no.en.core.parse_query_params.call(null, cljs.core.nth.call(null, matches, 12)), cljs.core.nth.call(null, matches, 10), cljs.core.nth.call(null, matches, 6), cljs.core.nth.call(null, matches, 12), scheme]));
  } else {
    return null;
  }
};
var ret__4533__auto___4456 = function() {
  no.en.core.prog1 = function no$en$core$prog1(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4457 = arguments.length;
    var i__4500__auto___4458 = 0;
    while (true) {
      if (i__4500__auto___4458 < len__4499__auto___4457) {
        args__4502__auto__.push(arguments[i__4500__auto___4458]);
        var G__4459 = i__4500__auto___4458 + 1;
        i__4500__auto___4458 = G__4459;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
    return no.en.core.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
  };
  no.en.core.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "result__4452__auto__", "result__4452__auto__", -1399596202, null), null, 1, null), new cljs.core.List(null, 
    cljs.core.first.call(null, body), null, 1, null))))), null, 1, null), cljs.core.rest.call(null, body), new cljs.core.List(null, new cljs.core.Symbol(null, "result__4452__auto__", "result__4452__auto__", -1399596202, null), null, 1, null))));
  };
  no.en.core.prog1.cljs$lang$maxFixedArity = 2;
  no.en.core.prog1.cljs$lang$applyTo = function(seq4453) {
    var G__4454 = cljs.core.first.call(null, seq4453);
    var seq4453__$1 = cljs.core.next.call(null, seq4453);
    var G__4455 = cljs.core.first.call(null, seq4453__$1);
    var seq4453__$2 = cljs.core.next.call(null, seq4453__$1);
    var self__4486__auto__ = this;
    return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4454, G__4455, seq4453__$2);
  };
  return null;
}();
no.en.core.prog1.cljs$lang$macro = true;
no.en.core.with_retries_STAR_ = function no$en$core$with_retries_STAR_(n, thunk) {
  var n__$1 = n;
  while (true) {
    var temp__4655__auto__ = function() {
      try {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [thunk.call(null)], null);
      } catch (e4460) {
        if (e4460 instanceof Error) {
          var e = e4460;
          if (n__$1 === 0) {
            throw e;
          } else {
            return null;
          }
        } else {
          throw e4460;
        }
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var result = temp__4655__auto__;
      return result.call(null, 0);
    } else {
      var G__4461 = n__$1 - 1;
      n__$1 = G__4461;
      continue;
    }
    break;
  }
};
var ret__4533__auto___4466 = function() {
  no.en.core.with_retries = function no$en$core$with_retries(var_args) {
    var args__4502__auto__ = [];
    var len__4499__auto___4467 = arguments.length;
    var i__4500__auto___4468 = 0;
    while (true) {
      if (i__4500__auto___4468 < len__4499__auto___4467) {
        args__4502__auto__.push(arguments[i__4500__auto___4468]);
        var G__4469 = i__4500__auto___4468 + 1;
        i__4500__auto___4468 = G__4469;
        continue;
      } else {
      }
      break;
    }
    var argseq__4503__auto__ = 3 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(3), 0, null) : null;
    return no.en.core.with_retries.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4503__auto__);
  };
  no.en.core.with_retries.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, n, body) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("no.en.core", "with-retries*", "no.en.core/with-retries*", 172357687, null), null, 1, null), new cljs.core.List(null, n, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), 
    new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null), body))), null, 1, null))));
  };
  no.en.core.with_retries.cljs$lang$maxFixedArity = 3;
  no.en.core.with_retries.cljs$lang$applyTo = function(seq4462) {
    var G__4463 = cljs.core.first.call(null, seq4462);
    var seq4462__$1 = cljs.core.next.call(null, seq4462);
    var G__4464 = cljs.core.first.call(null, seq4462__$1);
    var seq4462__$2 = cljs.core.next.call(null, seq4462__$1);
    var G__4465 = cljs.core.first.call(null, seq4462__$2);
    var seq4462__$3 = cljs.core.next.call(null, seq4462__$2);
    var self__4486__auto__ = this;
    return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4463, G__4464, G__4465, seq4462__$3);
  };
  return null;
}();
no.en.core.with_retries.cljs$lang$macro = true;
no.en.core.editable_QMARK_ = function no$en$core$editable_QMARK_(coll) {
  if (!(coll == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEditableCollection$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEditableCollection, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEditableCollection, coll);
  }
};
no.en.core.reduce_map = function no$en$core$reduce_map(f, coll) {
  if (cljs.core.truth_(no.en.core.editable_QMARK_.call(null, coll))) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, f.call(null, cljs.core.assoc_BANG_), cljs.core.transient$.call(null, cljs.core.empty.call(null, coll)), coll));
  } else {
    return cljs.core.reduce_kv.call(null, f.call(null, cljs.core.assoc), cljs.core.empty.call(null, coll), coll);
  }
};
no.en.core.map_keys = function no$en$core$map_keys(f, coll) {
  return no.en.core.reduce_map.call(null, function(xf) {
    return function(m, k, v) {
      return xf.call(null, m, f.call(null, k), v);
    };
  }, coll);
};
no.en.core.map_vals = function no$en$core$map_vals(f, coll) {
  return no.en.core.reduce_map.call(null, function(xf) {
    return function(m, k, v) {
      return xf.call(null, m, k, f.call(null, v));
    };
  }, coll);
};
no.en.core.deep_merge = function no$en$core$deep_merge(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4472 = arguments.length;
  var i__4500__auto___4473 = 0;
  while (true) {
    if (i__4500__auto___4473 < len__4499__auto___4472) {
      args__4502__auto__.push(arguments[i__4500__auto___4473]);
      var G__4474 = i__4500__auto___4473 + 1;
      i__4500__auto___4473 = G__4474;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return no.en.core.deep_merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
no.en.core.deep_merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, maps)) {
    return cljs.core.apply.call(null, cljs.core.merge_with, no.en.core.deep_merge, maps);
  } else {
    return cljs.core.last.call(null, maps);
  }
};
no.en.core.deep_merge.cljs$lang$maxFixedArity = 0;
no.en.core.deep_merge.cljs$lang$applyTo = function(seq4471) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq4471));
};
no.en.core.deep_merge_with = function no$en$core$deep_merge_with(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4477 = arguments.length;
  var i__4500__auto___4478 = 0;
  while (true) {
    if (i__4500__auto___4478 < len__4499__auto___4477) {
      args__4502__auto__.push(arguments[i__4500__auto___4478]);
      var G__4479 = i__4500__auto___4478 + 1;
      i__4500__auto___4478 = G__4479;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return no.en.core.deep_merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
no.en.core.deep_merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  return cljs.core.apply.call(null, function() {
    var no$en$core$m__delegate = function(maps__$1) {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, maps__$1)) {
        return cljs.core.apply.call(null, cljs.core.merge_with, no$en$core$m, maps__$1);
      } else {
        return cljs.core.apply.call(null, f, maps__$1);
      }
    };
    var no$en$core$m = function(var_args) {
      var maps__$1 = null;
      if (arguments.length > 0) {
        var G__4480__i = 0, G__4480__a = new Array(arguments.length - 0);
        while (G__4480__i < G__4480__a.length) {
          G__4480__a[G__4480__i] = arguments[G__4480__i + 0];
          ++G__4480__i;
        }
        maps__$1 = new cljs.core.IndexedSeq(G__4480__a, 0, null);
      }
      return no$en$core$m__delegate.call(this, maps__$1);
    };
    no$en$core$m.cljs$lang$maxFixedArity = 0;
    no$en$core$m.cljs$lang$applyTo = function(arglist__4481) {
      var maps__$1 = cljs.core.seq(arglist__4481);
      return no$en$core$m__delegate(maps__$1);
    };
    no$en$core$m.cljs$core$IFn$_invoke$arity$variadic = no$en$core$m__delegate;
    return no$en$core$m;
  }(), maps);
};
no.en.core.deep_merge_with.cljs$lang$maxFixedArity = 1;
no.en.core.deep_merge_with.cljs$lang$applyTo = function(seq4475) {
  var G__4476 = cljs.core.first.call(null, seq4475);
  var seq4475__$1 = cljs.core.next.call(null, seq4475);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4476, seq4475__$1);
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = ""; str.charAt(idx | 0) || (map = "\x3d", idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = ""; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0; i < len; i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0; i < x.length; i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0; i < str.length; ++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0; i < arr.length; i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift); i < eidx; i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24; i < 8; i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24; i < 16; i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24; i < 24; i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24; i < 32; i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0; j < bucket.length; j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0; j < entries.length; j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0; i < kslen; i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0; j < this._entries.length; i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0; i < this._entries.length; i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0; i < this._entries.length; i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0; i < bucket.length; i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0; i < ks.length; i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0; j < bucket.length; j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0; i < keys.length; i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0; j < bucket.length; j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0; i < t.length; i += 2) {
          var seen = false;
          for (var j = 0; j < arr.length; j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0; i < arr.length; i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0; j < bucket.length; j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0; i < arr.length; i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0; j < vals.length; j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);
        break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      case "s":
      case "?":
      case "i":
      case "d":
      case "b":
      case "'":
      case "array":
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0; i < ks.length; i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0; i < ks.length; i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0; i < ks.length; i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1; i < node.length; i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1; i < node.length; i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1; i < node.length; i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0; i < node.length; i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0; i < node.length; i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0; i < node.length; i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0; i < node.length; i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length; i < m; i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0; i < ks.length; i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      case "string":
      case "boolean":
      case "number":
      case "array":
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0; i < iterable.length; i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0; i < arr.length; i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (; i < arr.length; i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (; i < ks.length; i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (; i < arr.length; i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (; i < arr.length; i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (; i < ks.length; i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode(this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode(this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(uuid__$1.toString()), '"'].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__4484_4488 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__4485_4489 = null;
  var count__4486_4490 = 0;
  var i__4487_4491 = 0;
  while (true) {
    if (i__4487_4491 < count__4486_4490) {
      var k_4492 = cljs.core._nth.call(null, chunk__4485_4489, i__4487_4491);
      var v_4493 = b[k_4492];
      a[k_4492] = v_4493;
      var G__4494 = seq__4484_4488;
      var G__4495 = chunk__4485_4489;
      var G__4496 = count__4486_4490;
      var G__4497 = i__4487_4491 + 1;
      seq__4484_4488 = G__4494;
      chunk__4485_4489 = G__4495;
      count__4486_4490 = G__4496;
      i__4487_4491 = G__4497;
      continue;
    } else {
      var temp__4657__auto___4498 = cljs.core.seq.call(null, seq__4484_4488);
      if (temp__4657__auto___4498) {
        var seq__4484_4499__$1 = temp__4657__auto___4498;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4484_4499__$1)) {
          var c__4319__auto___4500 = cljs.core.chunk_first.call(null, seq__4484_4499__$1);
          var G__4501 = cljs.core.chunk_rest.call(null, seq__4484_4499__$1);
          var G__4502 = c__4319__auto___4500;
          var G__4503 = cljs.core.count.call(null, c__4319__auto___4500);
          var G__4504 = 0;
          seq__4484_4488 = G__4501;
          chunk__4485_4489 = G__4502;
          count__4486_4490 = G__4503;
          i__4487_4491 = G__4504;
          continue;
        } else {
          var k_4505 = cljs.core.first.call(null, seq__4484_4499__$1);
          var v_4506 = b[k_4505];
          a[k_4505] = v_4506;
          var G__4507 = cljs.core.next.call(null, seq__4484_4499__$1);
          var G__4508 = null;
          var G__4509 = 0;
          var G__4510 = 0;
          seq__4484_4488 = G__4507;
          chunk__4485_4489 = G__4508;
          count__4486_4490 = G__4509;
          i__4487_4491 = G__4510;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var G__4512 = arguments.length;
  switch(G__4512) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader(cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__4514 = i + 2;
        var G__4515 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__4514;
        ret = G__4515;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__4516_4520 = cljs.core.seq.call(null, v);
  var chunk__4517_4521 = null;
  var count__4518_4522 = 0;
  var i__4519_4523 = 0;
  while (true) {
    if (i__4519_4523 < count__4518_4522) {
      var x_4524 = cljs.core._nth.call(null, chunk__4517_4521, i__4519_4523);
      ret.push(x_4524);
      var G__4525 = seq__4516_4520;
      var G__4526 = chunk__4517_4521;
      var G__4527 = count__4518_4522;
      var G__4528 = i__4519_4523 + 1;
      seq__4516_4520 = G__4525;
      chunk__4517_4521 = G__4526;
      count__4518_4522 = G__4527;
      i__4519_4523 = G__4528;
      continue;
    } else {
      var temp__4657__auto___4529 = cljs.core.seq.call(null, seq__4516_4520);
      if (temp__4657__auto___4529) {
        var seq__4516_4530__$1 = temp__4657__auto___4529;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4516_4530__$1)) {
          var c__4319__auto___4531 = cljs.core.chunk_first.call(null, seq__4516_4530__$1);
          var G__4532 = cljs.core.chunk_rest.call(null, seq__4516_4530__$1);
          var G__4533 = c__4319__auto___4531;
          var G__4534 = cljs.core.count.call(null, c__4319__auto___4531);
          var G__4535 = 0;
          seq__4516_4520 = G__4532;
          chunk__4517_4521 = G__4533;
          count__4518_4522 = G__4534;
          i__4519_4523 = G__4535;
          continue;
        } else {
          var x_4536 = cljs.core.first.call(null, seq__4516_4530__$1);
          ret.push(x_4536);
          var G__4537 = cljs.core.next.call(null, seq__4516_4530__$1);
          var G__4538 = null;
          var G__4539 = 0;
          var G__4540 = 0;
          seq__4516_4520 = G__4537;
          chunk__4517_4521 = G__4538;
          count__4518_4522 = G__4539;
          i__4519_4523 = G__4540;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged("array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__4541_4545 = cljs.core.seq.call(null, v);
  var chunk__4542_4546 = null;
  var count__4543_4547 = 0;
  var i__4544_4548 = 0;
  while (true) {
    if (i__4544_4548 < count__4543_4547) {
      var x_4549 = cljs.core._nth.call(null, chunk__4542_4546, i__4544_4548);
      ret.push(x_4549);
      var G__4550 = seq__4541_4545;
      var G__4551 = chunk__4542_4546;
      var G__4552 = count__4543_4547;
      var G__4553 = i__4544_4548 + 1;
      seq__4541_4545 = G__4550;
      chunk__4542_4546 = G__4551;
      count__4543_4547 = G__4552;
      i__4544_4548 = G__4553;
      continue;
    } else {
      var temp__4657__auto___4554 = cljs.core.seq.call(null, seq__4541_4545);
      if (temp__4657__auto___4554) {
        var seq__4541_4555__$1 = temp__4657__auto___4554;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4541_4555__$1)) {
          var c__4319__auto___4556 = cljs.core.chunk_first.call(null, seq__4541_4555__$1);
          var G__4557 = cljs.core.chunk_rest.call(null, seq__4541_4555__$1);
          var G__4558 = c__4319__auto___4556;
          var G__4559 = cljs.core.count.call(null, c__4319__auto___4556);
          var G__4560 = 0;
          seq__4541_4545 = G__4557;
          chunk__4542_4546 = G__4558;
          count__4543_4547 = G__4559;
          i__4544_4548 = G__4560;
          continue;
        } else {
          var x_4561 = cljs.core.first.call(null, seq__4541_4555__$1);
          ret.push(x_4561);
          var G__4562 = cljs.core.next.call(null, seq__4541_4555__$1);
          var G__4563 = null;
          var G__4564 = 0;
          var G__4565 = 0;
          seq__4541_4545 = G__4562;
          chunk__4542_4546 = G__4563;
          count__4543_4547 = G__4564;
          i__4544_4548 = G__4565;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged("array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__4566_4570 = cljs.core.seq.call(null, v);
  var chunk__4567_4571 = null;
  var count__4568_4572 = 0;
  var i__4569_4573 = 0;
  while (true) {
    if (i__4569_4573 < count__4568_4572) {
      var x_4574 = cljs.core._nth.call(null, chunk__4567_4571, i__4569_4573);
      ret.push(x_4574);
      var G__4575 = seq__4566_4570;
      var G__4576 = chunk__4567_4571;
      var G__4577 = count__4568_4572;
      var G__4578 = i__4569_4573 + 1;
      seq__4566_4570 = G__4575;
      chunk__4567_4571 = G__4576;
      count__4568_4572 = G__4577;
      i__4569_4573 = G__4578;
      continue;
    } else {
      var temp__4657__auto___4579 = cljs.core.seq.call(null, seq__4566_4570);
      if (temp__4657__auto___4579) {
        var seq__4566_4580__$1 = temp__4657__auto___4579;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__4566_4580__$1)) {
          var c__4319__auto___4581 = cljs.core.chunk_first.call(null, seq__4566_4580__$1);
          var G__4582 = cljs.core.chunk_rest.call(null, seq__4566_4580__$1);
          var G__4583 = c__4319__auto___4581;
          var G__4584 = cljs.core.count.call(null, c__4319__auto___4581);
          var G__4585 = 0;
          seq__4566_4570 = G__4582;
          chunk__4567_4571 = G__4583;
          count__4568_4572 = G__4584;
          i__4569_4573 = G__4585;
          continue;
        } else {
          var x_4586 = cljs.core.first.call(null, seq__4566_4580__$1);
          ret.push(x_4586);
          var G__4587 = cljs.core.next.call(null, seq__4566_4580__$1);
          var G__4588 = null;
          var G__4589 = 0;
          var G__4590 = 0;
          seq__4566_4570 = G__4587;
          chunk__4567_4571 = G__4588;
          count__4568_4572 = G__4589;
          i__4569_4573 = G__4590;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var G__4592 = arguments.length;
  switch(G__4592) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer(cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__4593 = obj;
          G__4593.push(kfn.call(null, k), vfn.call(null, v));
          return G__4593;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x4594 = cljs.core.clone.call(null, handlers);
    x4594.forEach = function(x4594, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__4595 = cljs.core.seq.call(null, coll);
        var chunk__4596 = null;
        var count__4597 = 0;
        var i__4598 = 0;
        while (true) {
          if (i__4598 < count__4597) {
            var vec__4599 = cljs.core._nth.call(null, chunk__4596, i__4598);
            var k = cljs.core.nth.call(null, vec__4599, 0, null);
            var v = cljs.core.nth.call(null, vec__4599, 1, null);
            f.call(null, v, k);
            var G__4606 = seq__4595;
            var G__4607 = chunk__4596;
            var G__4608 = count__4597;
            var G__4609 = i__4598 + 1;
            seq__4595 = G__4606;
            chunk__4596 = G__4607;
            count__4597 = G__4608;
            i__4598 = G__4609;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__4595);
            if (temp__4657__auto__) {
              var seq__4595__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__4595__$1)) {
                var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__4595__$1);
                var G__4610 = cljs.core.chunk_rest.call(null, seq__4595__$1);
                var G__4611 = c__4319__auto__;
                var G__4612 = cljs.core.count.call(null, c__4319__auto__);
                var G__4613 = 0;
                seq__4595 = G__4610;
                chunk__4596 = G__4611;
                count__4597 = G__4612;
                i__4598 = G__4613;
                continue;
              } else {
                var vec__4602 = cljs.core.first.call(null, seq__4595__$1);
                var k = cljs.core.nth.call(null, vec__4602, 0, null);
                var v = cljs.core.nth.call(null, vec__4602, 1, null);
                f.call(null, v, k);
                var G__4614 = cljs.core.next.call(null, seq__4595__$1);
                var G__4615 = null;
                var G__4616 = 0;
                var G__4617 = 0;
                seq__4595 = G__4614;
                chunk__4596 = G__4615;
                count__4597 = G__4616;
                i__4598 = G__4617;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x4594, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x4594;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var G__4619 = arguments.length;
  switch(G__4619) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit4620 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit4620 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta4621) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta4621 = meta4621;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit4620.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4622, meta4621__$1) {
      var self__ = this;
      var _4622__$1 = this;
      return new cognitect.transit.t_cognitect$transit4620(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta4621__$1);
    };
    cognitect.transit.t_cognitect$transit4620.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4622) {
      var self__ = this;
      var _4622__$1 = this;
      return self__.meta4621;
    };
    cognitect.transit.t_cognitect$transit4620.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit4620.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit4620.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit4620.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit4620.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta4621", "meta4621", 955178640, null)], null);
    };
    cognitect.transit.t_cognitect$transit4620.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit4620.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit4620";
    cognitect.transit.t_cognitect$transit4620.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cognitect.transit/t_cognitect$transit4620");
    };
    cognitect.transit.__GT_t_cognitect$transit4620 = function cognitect$transit$__GT_t_cognitect$transit4620(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta4621) {
      return new cognitect.transit.t_cognitect$transit4620(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta4621);
    };
  }
  return new cognitect.transit.t_cognitect$transit4620(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue(tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue(x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue(s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger(x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger(s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger(x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue(s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal(x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri(s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI(x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid(s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__3922__auto__ = com.cognitect.transit.types.isUUID(x);
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary(s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary(x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted(x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted(x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link(x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink(x);
};
goog.provide("cljs_http.util");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("clojure.string");
goog.require("cognitect.transit");
goog.require("goog.userAgent");
goog.require("no.en.core");
cljs_http.util.basic_auth = function cljs_http$util$basic_auth(credentials) {
  if (cljs.core.truth_(credentials)) {
    var vec__4626 = cljs.core.map_QMARK_.call(null, credentials) ? cljs.core.map.call(null, credentials, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "password", "password", 417022471)], null)) : credentials;
    var username = cljs.core.nth.call(null, vec__4626, 0, null);
    var password = cljs.core.nth.call(null, vec__4626, 1, null);
    return ["Basic ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.base64_encode.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(username), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(password)].join("")))].join("");
  } else {
    return null;
  }
};
cljs_http.util.build_url = function cljs_http$util$build_url(p__4629) {
  var map__4630 = p__4629;
  var map__4630__$1 = (!(map__4630 == null) ? map__4630.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4630.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4630) : map__4630;
  var scheme = cljs.core.get.call(null, map__4630__$1, new cljs.core.Keyword(null, "scheme", "scheme", 90199613));
  var server_name = cljs.core.get.call(null, map__4630__$1, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295));
  var server_port = cljs.core.get.call(null, map__4630__$1, new cljs.core.Keyword(null, "server-port", "server-port", 663745648));
  var uri = cljs.core.get.call(null, map__4630__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
  var query_string = cljs.core.get.call(null, map__4630__$1, new cljs.core.Keyword(null, "query-string", "query-string", -1018845061));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var G__4632 = new goog.Uri;
    G__4632.setScheme(cljs.core.name.call(null, function() {
      var or__3922__auto__ = scheme;
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return new cljs.core.Keyword(null, "http", "http", 382524695);
      }
    }()));
    G__4632.setDomain(server_name);
    G__4632.setPort(server_port);
    G__4632.setPath(uri);
    G__4632.setQuery(query_string, true);
    return G__4632;
  }())].join("");
};
cljs_http.util.camelize = function cljs_http$util$camelize(s) {
  return clojure.string.join.call(null, "-", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""), /-/)));
};
cljs_http.util.build_headers = function cljs_http$util$build_headers(m) {
  return cljs.core.clj__GT_js.call(null, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, m)), cljs.core.vals.call(null, m)));
};
cljs_http.util.user_agent = function cljs_http$util$user_agent() {
  return goog.userAgent.getUserAgentString();
};
cljs_http.util.android_QMARK_ = function cljs_http$util$android_QMARK_() {
  return cljs.core.re_matches.call(null, /.*android.*/i, cljs_http.util.user_agent.call(null));
};
cljs_http.util.transit_decode = function cljs_http$util$transit_decode(s, type, opts) {
  var rdr = cognitect.transit.reader.call(null, type, opts);
  return cognitect.transit.read.call(null, rdr, s);
};
cljs_http.util.transit_encode = function cljs_http$util$transit_encode(x, type, opts) {
  var wrtr = cognitect.transit.writer.call(null, type, opts);
  return cognitect.transit.write.call(null, wrtr, x);
};
cljs_http.util.json_decode = function cljs_http$util$json_decode(s) {
  var v = !clojure.string.blank_QMARK_.call(null, s) ? JSON.parse(s) : null;
  if (!(v == null)) {
    return cljs.core.js__GT_clj.call(null, v, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  } else {
    return null;
  }
};
cljs_http.util.json_encode = function cljs_http$util$json_encode(x) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, x));
};
cljs_http.util.parse_headers = function cljs_http$util$parse_headers(headers) {
  return cljs.core.reduce.call(null, function(p1__4634_SHARP_, p2__4633_SHARP_) {
    var vec__4635 = clojure.string.split.call(null, p2__4633_SHARP_, /:\s+/);
    var k = cljs.core.nth.call(null, vec__4635, 0, null);
    var v = cljs.core.nth.call(null, vec__4635, 1, null);
    if (clojure.string.blank_QMARK_.call(null, k) || clojure.string.blank_QMARK_.call(null, v)) {
      return p1__4634_SHARP_;
    } else {
      return cljs.core.assoc.call(null, p1__4634_SHARP_, clojure.string.lower_case.call(null, k), v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, function() {
    var or__3922__auto__ = headers;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return "";
    }
  }(), /(\n)|(\r)|(\r\n)|(\n\r)/));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4211__auto__ = port == null ? null : port;
    var m__4212__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, port, fn1_handler);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4211__auto__ = port == null ? null : port;
    var m__4212__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4211__auto__ = chan == null ? null : chan;
    var m__4212__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, chan);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4211__auto__ = chan == null ? null : chan;
    var m__4212__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, chan);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4211__auto__ = h == null ? null : h;
    var m__4212__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, h);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__4211__auto__ = h == null ? null : h;
    var m__4212__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, h);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4211__auto__ = h == null ? null : h;
    var m__4212__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, h);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4211__auto__ = b == null ? null : b;
    var m__4212__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, b);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4211__auto__ = b == null ? null : b;
    var m__4212__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, b);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4211__auto__ = b == null ? null : b;
    var m__4212__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, b, itm);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__4211__auto__ = b == null ? null : b;
    var m__4212__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, b);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var G__3881 = arguments.length;
  switch(G__3881) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__3885 = cnt + 1;
      cnt = G__3885;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4376__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4376__auto__) {
      var v_3886 = this$.pop();
      if (keep_QMARK_.call(null, v_3886)) {
        this$.unshift(v_3886);
      } else {
      }
      var G__3887 = x + 1;
      x = G__3887;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error(["Assert failed: ", "Can't create a ring buffer of size 0", "\n", "(\x3e n 0)"].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_3890 = 0;
  while (true) {
    var m_3891 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_3891 == null) {
    } else {
      m_3891.call(null);
      if (count_3890 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__3892 = count_3890 + 1;
        count_3890 = G__3892;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.async.impl.dispatch.queued_QMARK_ && cljs.core.async.impl.dispatch.running_QMARK_) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895 = function(val, meta3896) {
      this.val = val;
      this.meta3896 = meta3896;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_3897, meta3896__$1) {
      var self__ = this;
      var _3897__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895(self__.val, meta3896__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.prototype.cljs$core$IMeta$_meta$arity$1 = function(_3897) {
      var self__ = this;
      var _3897__$1 = this;
      return self__.meta3896;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta3896", "meta3896", 708348888, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels3895";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels3895");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels3895 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels3895(val__$1, meta3896) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895(val__$1, meta3896);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels3895(val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_3909 = self__.puts.pop();
    if (putter_3909 == null) {
    } else {
      var put_handler_3910 = putter_3909.handler;
      var val_3911 = putter_3909.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_3910)) {
        var put_cb_3912 = cljs.core.async.impl.protocols.commit.call(null, put_handler_3910);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_3912, put_handler_3910, val_3911, putter_3909, this$__$1) {
          return function() {
            return put_cb_3912.call(null, true);
          };
        }(put_cb_3912, put_handler_3910, val_3911, putter_3909, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error(["Assert failed: ", "Can't put nil on a channel", "\n", "(not (nil? val))"].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = self__.buf;
      if (cljs.core.truth_(and__3911__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3911__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      var take_cbs = function() {
        var takers = cljs.core.PersistentVector.EMPTY;
        while (true) {
          if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
            var taker = self__.takes.pop();
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
              var ret = cljs.core.async.impl.protocols.commit.call(null, taker);
              var val__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
              var G__3913 = cljs.core.conj.call(null, takers, function(takers, ret, val__$1, taker, done_QMARK_, closed__$1, this$__$1) {
                return function() {
                  return ret.call(null, val__$1);
                };
              }(takers, ret, val__$1, taker, done_QMARK_, closed__$1, this$__$1));
              takers = G__3913;
              continue;
            } else {
              var G__3914 = takers;
              takers = G__3914;
              continue;
            }
          } else {
            return takers;
          }
          break;
        }
      }();
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      if (cljs.core.seq.call(null, take_cbs)) {
        var seq__3898_3915 = cljs.core.seq.call(null, take_cbs);
        var chunk__3899_3916 = null;
        var count__3900_3917 = 0;
        var i__3901_3918 = 0;
        while (true) {
          if (i__3901_3918 < count__3900_3917) {
            var f_3919 = cljs.core._nth.call(null, chunk__3899_3916, i__3901_3918);
            cljs.core.async.impl.dispatch.run.call(null, f_3919);
            var G__3920 = seq__3898_3915;
            var G__3921 = chunk__3899_3916;
            var G__3922 = count__3900_3917;
            var G__3923 = i__3901_3918 + 1;
            seq__3898_3915 = G__3920;
            chunk__3899_3916 = G__3921;
            count__3900_3917 = G__3922;
            i__3901_3918 = G__3923;
            continue;
          } else {
            var temp__4657__auto___3924 = cljs.core.seq.call(null, seq__3898_3915);
            if (temp__4657__auto___3924) {
              var seq__3898_3925__$1 = temp__4657__auto___3924;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__3898_3925__$1)) {
                var c__4319__auto___3926 = cljs.core.chunk_first.call(null, seq__3898_3925__$1);
                var G__3927 = cljs.core.chunk_rest.call(null, seq__3898_3925__$1);
                var G__3928 = c__4319__auto___3926;
                var G__3929 = cljs.core.count.call(null, c__4319__auto___3926);
                var G__3930 = 0;
                seq__3898_3915 = G__3927;
                chunk__3899_3916 = G__3928;
                count__3900_3917 = G__3929;
                i__3901_3918 = G__3930;
                continue;
              } else {
                var f_3931 = cljs.core.first.call(null, seq__3898_3925__$1);
                cljs.core.async.impl.dispatch.run.call(null, f_3931);
                var G__3932 = cljs.core.next.call(null, seq__3898_3925__$1);
                var G__3933 = null;
                var G__3934 = 0;
                var G__3935 = 0;
                seq__3898_3915 = G__3932;
                chunk__3899_3916 = G__3933;
                count__3900_3917 = G__3934;
                i__3901_3918 = G__3935;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > 64) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < 1024) {
          } else {
            throw new Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending puts are allowed on a single channel.", " Consider using a windowed buffer."].join("")), "\n", "(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)"].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var temp__4655__auto__ = cljs.core.async.impl.protocols.commit.call(null, handler);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var take_cb = temp__4655__auto__;
        var val = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
        var vec__3902 = self__.puts.length > 0 ? function() {
          var cbs = cljs.core.PersistentVector.EMPTY;
          while (true) {
            var putter = self__.puts.pop();
            var put_handler = putter.handler;
            var val__$1 = putter.val;
            var cb = function() {
              var and__3911__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler);
              if (and__3911__auto__) {
                return cljs.core.async.impl.protocols.commit.call(null, put_handler);
              } else {
                return and__3911__auto__;
              }
            }();
            var cbs__$1 = cljs.core.truth_(cb) ? cljs.core.conj.call(null, cbs, cb) : cbs;
            var done_QMARK_ = cljs.core.truth_(cb) ? cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val__$1)) : null;
            if (cljs.core.not.call(null, done_QMARK_) && cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)) && self__.puts.length > 0) {
              var G__3936 = cbs__$1;
              cbs = G__3936;
              continue;
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [done_QMARK_, cbs__$1], null);
            }
            break;
          }
        }() : null;
        var done_QMARK_ = cljs.core.nth.call(null, vec__3902, 0, null);
        var cbs = cljs.core.nth.call(null, vec__3902, 1, null);
        if (cljs.core.truth_(done_QMARK_)) {
          cljs.core.async.impl.channels.abort.call(null, this$__$1);
        } else {
        }
        var seq__3905_3937 = cljs.core.seq.call(null, cbs);
        var chunk__3906_3938 = null;
        var count__3907_3939 = 0;
        var i__3908_3940 = 0;
        while (true) {
          if (i__3908_3940 < count__3907_3939) {
            var cb_3941 = cljs.core._nth.call(null, chunk__3906_3938, i__3908_3940);
            cljs.core.async.impl.dispatch.run.call(null, function(seq__3905_3937, chunk__3906_3938, count__3907_3939, i__3908_3940, cb_3941, val, vec__3902, done_QMARK_, cbs, take_cb, temp__4655__auto__, this$__$1) {
              return function() {
                return cb_3941.call(null, true);
              };
            }(seq__3905_3937, chunk__3906_3938, count__3907_3939, i__3908_3940, cb_3941, val, vec__3902, done_QMARK_, cbs, take_cb, temp__4655__auto__, this$__$1));
            var G__3942 = seq__3905_3937;
            var G__3943 = chunk__3906_3938;
            var G__3944 = count__3907_3939;
            var G__3945 = i__3908_3940 + 1;
            seq__3905_3937 = G__3942;
            chunk__3906_3938 = G__3943;
            count__3907_3939 = G__3944;
            i__3908_3940 = G__3945;
            continue;
          } else {
            var temp__4657__auto___3946 = cljs.core.seq.call(null, seq__3905_3937);
            if (temp__4657__auto___3946) {
              var seq__3905_3947__$1 = temp__4657__auto___3946;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__3905_3947__$1)) {
                var c__4319__auto___3948 = cljs.core.chunk_first.call(null, seq__3905_3947__$1);
                var G__3949 = cljs.core.chunk_rest.call(null, seq__3905_3947__$1);
                var G__3950 = c__4319__auto___3948;
                var G__3951 = cljs.core.count.call(null, c__4319__auto___3948);
                var G__3952 = 0;
                seq__3905_3937 = G__3949;
                chunk__3906_3938 = G__3950;
                count__3907_3939 = G__3951;
                i__3908_3940 = G__3952;
                continue;
              } else {
                var cb_3953 = cljs.core.first.call(null, seq__3905_3947__$1);
                cljs.core.async.impl.dispatch.run.call(null, function(seq__3905_3937, chunk__3906_3938, count__3907_3939, i__3908_3940, cb_3953, seq__3905_3947__$1, temp__4657__auto___3946, val, vec__3902, done_QMARK_, cbs, take_cb, temp__4655__auto__, this$__$1) {
                  return function() {
                    return cb_3953.call(null, true);
                  };
                }(seq__3905_3937, chunk__3906_3938, count__3907_3939, i__3908_3940, cb_3953, seq__3905_3947__$1, temp__4657__auto___3946, val, vec__3902, done_QMARK_, cbs, take_cb, temp__4655__auto__, this$__$1));
                var G__3954 = cljs.core.next.call(null, seq__3905_3947__$1);
                var G__3955 = null;
                var G__3956 = 0;
                var G__3957 = 0;
                seq__3905_3937 = G__3954;
                chunk__3906_3938 = G__3955;
                count__3907_3939 = G__3956;
                i__3908_3940 = G__3957;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return cljs.core.async.impl.channels.box.call(null, val);
      } else {
        return null;
      }
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3911__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3911__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3911__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3911__auto__ = self__.buf;
              if (cljs.core.truth_(and__3911__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3911__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > 64) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < 1024) {
            } else {
              throw new Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending takes are allowed on a single channel."].join("")), "\n", "(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)"].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = self__.buf;
      if (cljs.core.truth_(and__3911__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3911__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_3958 = self__.takes.pop();
      if (taker_3958 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_3958)) {
          var take_cb_3959 = cljs.core.async.impl.protocols.commit.call(null, taker_3958);
          var val_3960 = cljs.core.truth_(function() {
            var and__3911__auto__ = self__.buf;
            if (cljs.core.truth_(and__3911__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3911__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_3959, val_3960, taker_3958, this$__$1) {
            return function() {
              return take_cb_3959.call(null, val_3960);
            };
          }(take_cb_3959, val_3960, taker_3958, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__3922__auto__ = exh;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var G__3962 = arguments.length;
  switch(G__3962) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__3966 = null;
        var G__3966__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e3963) {
            var t = e3963;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__3966__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e3964) {
            var t = e3964;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__3966 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__3966__1.call(this, buf__$1);
            case 2:
              return G__3966__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__3966.cljs$core$IFn$_invoke$arity$1 = G__3966__1;
        G__3966.cljs$core$IFn$_invoke$arity$2 = G__3966__2;
        return G__3966;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[1], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640 = function(f, meta4641) {
      this.f = f;
      this.meta4641 = meta4641;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4642, meta4641__$1) {
      var self__ = this;
      var _4642__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640(self__.f, meta4641__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4642) {
      var self__ = this;
      var _4642__$1 = this;
      return self__.meta4641;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta4641", "meta4641", -1223985406, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers4640";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers4640");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers4640 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers4640(f__$1, meta4641) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640(f__$1, meta4641);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4640(f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 0).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e4643) {
    if (e4643 instanceof Object) {
      var ex = e4643;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 6));
      throw ex;
    } else {
      throw e4643;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_4644_4646 = state;
    statearr_4644_4646[2] = x;
    statearr_4644_4646[1] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_4645_4647 = state;
    statearr_4645_4647[2] = cljs.core.deref.call(null, cb);
    statearr_4645_4647[1] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_4648_4650 = state;
    statearr_4648_4650[2] = ret_val;
    statearr_4648_4650[1] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_4649_4651 = state;
    statearr_4649_4651[2] = cljs.core.deref.call(null, cb);
    statearr_4649_4651[1] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[6];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4172__auto__, k__4173__auto__) {
  var self__ = this;
  var this__4172__auto____$1 = this;
  return this__4172__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4173__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4174__auto__, k4653, else__4175__auto__) {
  var self__ = this;
  var this__4174__auto____$1 = this;
  var G__4657 = k4653;
  var G__4657__$1 = G__4657 instanceof cljs.core.Keyword ? G__4657.fqn : null;
  switch(G__4657__$1) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k4653, else__4175__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4186__auto__, writer__4187__auto__, opts__4188__auto__) {
  var self__ = this;
  var this__4186__auto____$1 = this;
  var pr_pair__4189__auto__ = function(this__4186__auto____$1) {
    return function(keyval__4190__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4187__auto__, cljs.core.pr_writer, "", " ", "", opts__4188__auto__, keyval__4190__auto__);
    };
  }(this__4186__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4187__auto__, pr_pair__4189__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4188__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4652) {
  var self__ = this;
  var G__4652__$1 = this;
  return new cljs.core.RecordIter(0, G__4652__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4170__auto__) {
  var self__ = this;
  var this__4170__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4167__auto__) {
  var self__ = this;
  var this__4167__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4176__auto__) {
  var self__ = this;
  var this__4176__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4168__auto__) {
  var self__ = this;
  var this__4168__auto____$1 = this;
  var h__4030__auto__ = self__.__hash;
  if (!(h__4030__auto__ == null)) {
    return h__4030__auto__;
  } else {
    var h__4030__auto____$1 = function(h__4030__auto__, this__4168__auto____$1) {
      return function(coll__4169__auto__) {
        return 846900531 ^ cljs.core.hash_unordered_coll.call(null, coll__4169__auto__);
      };
    }(h__4030__auto__, this__4168__auto____$1).call(null, this__4168__auto____$1);
    self__.__hash = h__4030__auto____$1;
    return h__4030__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4654, other4655) {
  var self__ = this;
  var this4654__$1 = this;
  return !(other4655 == null) && this4654__$1.constructor === other4655.constructor && cljs.core._EQ_.call(null, this4654__$1.catch_block, other4655.catch_block) && cljs.core._EQ_.call(null, this4654__$1.catch_exception, other4655.catch_exception) && cljs.core._EQ_.call(null, this4654__$1.finally_block, other4655.finally_block) && cljs.core._EQ_.call(null, this4654__$1.continue_block, other4655.continue_block) && cljs.core._EQ_.call(null, this4654__$1.prev, other4655.prev) && cljs.core._EQ_.call(null, 
  this4654__$1.__extmap, other4655.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4181__auto__, k__4182__auto__) {
  var self__ = this;
  var this__4181__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4182__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4181__auto____$1), self__.__meta), k__4182__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4182__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4179__auto__, k__4180__auto__, G__4652) {
  var self__ = this;
  var this__4179__auto____$1 = this;
  var pred__4658 = cljs.core.keyword_identical_QMARK_;
  var expr__4659 = k__4180__auto__;
  if (cljs.core.truth_(pred__4658.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__4659))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__4652, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__4658.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__4659))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__4652, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__4658.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__4659))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__4652, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__4658.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__4659))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__4652, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__4658.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__4659))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__4652, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4180__auto__, G__4652), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4184__auto__) {
  var self__ = this;
  var this__4184__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev, null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4171__auto__, G__4652) {
  var self__ = this;
  var this__4171__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__4652, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4177__auto__, entry__4178__auto__) {
  var self__ = this;
  var this__4177__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4178__auto__)) {
    return this__4177__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4178__auto__, 0), cljs.core._nth.call(null, entry__4178__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4177__auto____$1, entry__4178__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4208__auto__) {
  return new cljs.core.List(null, "cljs.core.async.impl.ioc-helpers/ExceptionFrame", null, 1, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4208__auto__, writer__4209__auto__) {
  return cljs.core._write.call(null, writer__4209__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__4656) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__4656), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__4656), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__4656), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__4656), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__4656), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, G__4656, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, 
  "prev", "prev", -1597069226))), null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_4662 = state;
  statearr_4662[4] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 4));
  return statearr_4662;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 4);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 5);
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = exception;
      if (cljs.core.truth_(and__3911__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3911__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3911__auto__ = exception;
        if (cljs.core.truth_(and__3911__auto__)) {
          var and__3911__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3911__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__3911__auto____$1;
          }
        } else {
          return and__3911__auto__;
        }
      }())) {
        var statearr_4663 = state;
        statearr_4663[1] = catch_block;
        statearr_4663[2] = exception;
        statearr_4663[5] = null;
        statearr_4663[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_4663;
      } else {
        if (cljs.core.truth_(function() {
          var and__3911__auto__ = exception;
          if (cljs.core.truth_(and__3911__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3911__auto__;
          }
        }())) {
          var statearr_4664_4668 = state;
          statearr_4664_4668[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__4669 = state;
          state = G__4669;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3911__auto__ = exception;
            if (cljs.core.truth_(and__3911__auto__)) {
              var and__3911__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3911__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3911__auto____$1;
              }
            } else {
              return and__3911__auto__;
            }
          }())) {
            var statearr_4665 = state;
            statearr_4665[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_4665[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_4665;
          } else {
            if (cljs.core.truth_(function() {
              var and__3911__auto__ = cljs.core.not.call(null, exception);
              if (and__3911__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3911__auto__;
              }
            }())) {
              var statearr_4666 = state;
              statearr_4666[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_4666[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_4666;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_4667 = state;
                statearr_4667[1] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_4667[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_4667;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var G__3970 = arguments.length;
  switch(G__3970) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__3972 = level + 1;
      level = G__3972;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(null, self__.key, new cljs.core.List(null, self__.val, null, 1, null), 2, null);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var G__3974 = arguments.length;
  switch(G__3974) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_3976 = 0;
  while (true) {
    if (i_3976 < arr.length) {
      arr[i_3976] = null;
      var G__3977 = i_3976 + 1;
      i_3976 = G__3977;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var G__3979 = arguments.length;
  switch(G__3979) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = level < x__$1.forward.length ? x__$1.forward[level] : null;
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__3981 = x_SINGLEQUOTE_;
              x__$1 = G__3981;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__3982 = x__$1;
      var G__3983 = k;
      var G__3984 = level - 1;
      var G__3985 = update;
      x = G__3982;
      k = G__3983;
      level = G__3984;
      update = G__3985;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_3986 = self__.level + 1;
      while (true) {
        if (i_3986 <= new_level + 1) {
          update[i_3986] = self__.header;
          var G__3987 = i_3986 + 1;
          i_3986 = G__3987;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward.length === 0 ? null : x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_3988 = 0;
    while (true) {
      if (i_3988 <= self__.level) {
        var links_3989 = update[i_3988].forward;
        if (x__$1 === (i_3988 < links_3989.length ? links_3989[i_3988] : null)) {
          links_3989[i_3988] = x__$1.forward[i_3988];
          var G__3990 = i_3988 + 1;
          i_3988 = G__3990;
          continue;
        } else {
          var G__3991 = i_3988 + 1;
          i_3988 = G__3991;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (0 < self__.level && self__.level < self__.header.forward.length && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = level__$1 < x__$1.forward.length ? x__$1.forward[level__$1] : null;
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__3992 = x_SINGLEQUOTE_;
              x__$1 = G__3992;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__3993 = nx;
        var G__3994 = level__$1 - 1;
        x = G__3993;
        level__$1 = G__3994;
        continue;
      } else {
        var G__3995 = x;
        var G__3996 = level__$1 - 1;
        x = G__3995;
        level__$1 = G__3996;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = level__$1 < x__$1.forward.length ? x__$1.forward[level__$1] : null;
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__3997 = x_SINGLEQUOTE_;
              x__$1 = G__3997;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__3998 = nx;
        var G__3999 = level__$1 - 1;
        x = G__3998;
        level__$1 = G__3999;
        continue;
      } else {
        var G__4000 = x;
        var G__4001 = level__$1 - 1;
        x = G__4000;
        level__$1 = G__4001;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout);
  var or__3922__auto__ = cljs.core.truth_(function() {
    var and__3911__auto__ = me;
    if (cljs.core.truth_(and__3911__auto__)) {
      return me.key < timeout + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3911__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3922__auto__, timeout, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3922__auto__, timeout, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var G__4673 = arguments.length;
  switch(G__4673) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async4674 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4674 = function(f, blockable, meta4675) {
      this.f = f;
      this.blockable = blockable;
      this.meta4675 = meta4675;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4676, meta4675__$1) {
      var self__ = this;
      var _4676__$1 = this;
      return new cljs.core.async.t_cljs$core$async4674(self__.f, self__.blockable, meta4675__$1);
    };
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4676) {
      var self__ = this;
      var _4676__$1 = this;
      return self__.meta4675;
    };
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async4674.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async4674.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta4675", "meta4675", 302148477, null)], null);
    };
    cljs.core.async.t_cljs$core$async4674.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4674.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4674";
    cljs.core.async.t_cljs$core$async4674.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async4674");
    };
    cljs.core.async.__GT_t_cljs$core$async4674 = function cljs$core$async$__GT_t_cljs$core$async4674(f__$1, blockable__$1, meta4675) {
      return new cljs.core.async.t_cljs$core$async4674(f__$1, blockable__$1, meta4675);
    };
  }
  return new cljs.core.async.t_cljs$core$async4674(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var G__4680 = arguments.length;
  switch(G__4680) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error(["Assert failed: ", "buffer must be supplied when transducer is", "\n", "buf-or-n"].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var G__4683 = arguments.length;
  switch(G__4683) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var G__4686 = arguments.length;
  switch(G__4686) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_4688 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_4688);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_4688, ret) {
        return function() {
          return fn1.call(null, val_4688);
        };
      }(val_4688, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var G__4690 = arguments.length;
  switch(G__4690) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__4376__auto___4692 = n;
  var x_4693 = 0;
  while (true) {
    if (x_4693 < n__4376__auto___4692) {
      a[x_4693] = 0;
      var G__4694 = x_4693 + 1;
      x_4693 = G__4694;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__4695 = i + 1;
      i = G__4695;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async4696 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4696 = function(flag, meta4697) {
      this.flag = flag;
      this.meta4697 = meta4697;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_4698, meta4697__$1) {
        var self__ = this;
        var _4698__$1 = this;
        return new cljs.core.async.t_cljs$core$async4696(self__.flag, meta4697__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_4698) {
        var self__ = this;
        var _4698__$1 = this;
        return self__.meta4697;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta4697", "meta4697", 179613066, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4696.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4696.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4696";
    cljs.core.async.t_cljs$core$async4696.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async4696");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async4696 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async4696(flag__$1, meta4697) {
        return new cljs.core.async.t_cljs$core$async4696(flag__$1, meta4697);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async4696(flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async4699 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4699 = function(flag, cb, meta4700) {
      this.flag = flag;
      this.cb = cb;
      this.meta4700 = meta4700;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4701, meta4700__$1) {
      var self__ = this;
      var _4701__$1 = this;
      return new cljs.core.async.t_cljs$core$async4699(self__.flag, self__.cb, meta4700__$1);
    };
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4701) {
      var self__ = this;
      var _4701__$1 = this;
      return self__.meta4700;
    };
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async4699.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async4699.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta4700", "meta4700", -2013455341, null)], null);
    };
    cljs.core.async.t_cljs$core$async4699.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4699.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4699";
    cljs.core.async.t_cljs$core$async4699.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async4699");
    };
    cljs.core.async.__GT_t_cljs$core$async4699 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async4699(flag__$1, cb__$1, meta4700) {
      return new cljs.core.async.t_cljs$core$async4699(flag__$1, cb__$1, meta4700);
    };
  }
  return new cljs.core.async.t_cljs$core$async4699(flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__4702_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__4702_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__4703_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__4703_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3922__auto__ = wport;
            if (cljs.core.truth_(or__3922__auto__)) {
              return or__3922__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__4704 = i + 1;
          i = G__4704;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3922__auto__ = ret;
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__3911__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3911__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3911__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___4710 = arguments.length;
  var i__4500__auto___4711 = 0;
  while (true) {
    if (i__4500__auto___4711 < len__4499__auto___4710) {
      args__4502__auto__.push(arguments[i__4500__auto___4711]);
      var G__4712 = i__4500__auto___4711 + 1;
      i__4500__auto___4711 = G__4712;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__4707) {
  var map__4708 = p__4707;
  var map__4708__$1 = (!(map__4708 == null) ? map__4708.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4708.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4708) : map__4708;
  var opts = map__4708__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq4705) {
  var G__4706 = cljs.core.first.call(null, seq4705);
  var seq4705__$1 = cljs.core.next.call(null, seq4705);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4706, seq4705__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var G__4714 = arguments.length;
  switch(G__4714) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__3820__auto___4760 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___4760) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___4760) {
          return function(state_4738) {
            var state_val_4739 = state_4738[1];
            if (state_val_4739 === 7) {
              var inst_4734 = state_4738[2];
              var state_4738__$1 = state_4738;
              var statearr_4740_4761 = state_4738__$1;
              statearr_4740_4761[2] = inst_4734;
              statearr_4740_4761[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4739 === 1) {
                var state_4738__$1 = state_4738;
                var statearr_4741_4762 = state_4738__$1;
                statearr_4741_4762[2] = null;
                statearr_4741_4762[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4739 === 4) {
                  var inst_4717 = state_4738[7];
                  var inst_4717__$1 = state_4738[2];
                  var inst_4718 = inst_4717__$1 == null;
                  var state_4738__$1 = function() {
                    var statearr_4742 = state_4738;
                    statearr_4742[7] = inst_4717__$1;
                    return statearr_4742;
                  }();
                  if (cljs.core.truth_(inst_4718)) {
                    var statearr_4743_4763 = state_4738__$1;
                    statearr_4743_4763[1] = 5;
                  } else {
                    var statearr_4744_4764 = state_4738__$1;
                    statearr_4744_4764[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4739 === 13) {
                    var state_4738__$1 = state_4738;
                    var statearr_4745_4765 = state_4738__$1;
                    statearr_4745_4765[2] = null;
                    statearr_4745_4765[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4739 === 6) {
                      var inst_4717 = state_4738[7];
                      var state_4738__$1 = state_4738;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4738__$1, 11, to, inst_4717);
                    } else {
                      if (state_val_4739 === 3) {
                        var inst_4736 = state_4738[2];
                        var state_4738__$1 = state_4738;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4738__$1, inst_4736);
                      } else {
                        if (state_val_4739 === 12) {
                          var state_4738__$1 = state_4738;
                          var statearr_4746_4766 = state_4738__$1;
                          statearr_4746_4766[2] = null;
                          statearr_4746_4766[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4739 === 2) {
                            var state_4738__$1 = state_4738;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4738__$1, 4, from);
                          } else {
                            if (state_val_4739 === 11) {
                              var inst_4727 = state_4738[2];
                              var state_4738__$1 = state_4738;
                              if (cljs.core.truth_(inst_4727)) {
                                var statearr_4747_4767 = state_4738__$1;
                                statearr_4747_4767[1] = 12;
                              } else {
                                var statearr_4748_4768 = state_4738__$1;
                                statearr_4748_4768[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4739 === 9) {
                                var state_4738__$1 = state_4738;
                                var statearr_4749_4769 = state_4738__$1;
                                statearr_4749_4769[2] = null;
                                statearr_4749_4769[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4739 === 5) {
                                  var state_4738__$1 = state_4738;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_4750_4770 = state_4738__$1;
                                    statearr_4750_4770[1] = 8;
                                  } else {
                                    var statearr_4751_4771 = state_4738__$1;
                                    statearr_4751_4771[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_4739 === 14) {
                                    var inst_4732 = state_4738[2];
                                    var state_4738__$1 = state_4738;
                                    var statearr_4752_4772 = state_4738__$1;
                                    statearr_4752_4772[2] = inst_4732;
                                    statearr_4752_4772[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_4739 === 10) {
                                      var inst_4724 = state_4738[2];
                                      var state_4738__$1 = state_4738;
                                      var statearr_4753_4773 = state_4738__$1;
                                      statearr_4753_4773[2] = inst_4724;
                                      statearr_4753_4773[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_4739 === 8) {
                                        var inst_4721 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_4738__$1 = state_4738;
                                        var statearr_4754_4774 = state_4738__$1;
                                        statearr_4754_4774[2] = inst_4721;
                                        statearr_4754_4774[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___4760);
        return function(switch__3805__auto__, c__3820__auto___4760) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_4755 = [null, null, null, null, null, null, null, null];
              statearr_4755[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_4755[1] = 1;
              return statearr_4755;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_4738) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_4738);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e4756) {
                    if (e4756 instanceof Object) {
                      var ex__3809__auto__ = e4756;
                      var statearr_4757_4775 = state_4738;
                      statearr_4757_4775[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4738);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4756;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4776 = state_4738;
                  state_4738 = G__4776;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_4738) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_4738);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___4760);
      }();
      var state__3822__auto__ = function() {
        var statearr_4758 = f__3821__auto__.call(null);
        statearr_4758[6] = c__3820__auto___4760;
        return statearr_4758;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___4760));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__4777) {
      var vec__4778 = p__4777;
      var v = cljs.core.nth.call(null, vec__4778, 0, null);
      var p = cljs.core.nth.call(null, vec__4778, 1, null);
      var job = vec__4778;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__3820__auto___4949 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results) {
          return function() {
            var f__3821__auto__ = function() {
              var switch__3805__auto__ = function(c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results) {
                return function(state_4785) {
                  var state_val_4786 = state_4785[1];
                  if (state_val_4786 === 1) {
                    var state_4785__$1 = state_4785;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4785__$1, 2, res, v);
                  } else {
                    if (state_val_4786 === 2) {
                      var inst_4782 = state_4785[2];
                      var inst_4783 = cljs.core.async.close_BANG_.call(null, res);
                      var state_4785__$1 = function() {
                        var statearr_4787 = state_4785;
                        statearr_4787[7] = inst_4782;
                        return statearr_4787;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4785__$1, inst_4783);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results);
              return function(switch__3805__auto__, c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0 = function() {
                    var statearr_4788 = [null, null, null, null, null, null, null, null];
                    statearr_4788[0] = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                    statearr_4788[1] = 1;
                    return statearr_4788;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1 = function(state_4785) {
                    while (true) {
                      var ret_value__3807__auto__ = function() {
                        try {
                          while (true) {
                            var result__3808__auto__ = switch__3805__auto__.call(null, state_4785);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__3808__auto__;
                            }
                            break;
                          }
                        } catch (e4789) {
                          if (e4789 instanceof Object) {
                            var ex__3809__auto__ = e4789;
                            var statearr_4790_4950 = state_4785;
                            statearr_4790_4950[5] = ex__3809__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4785);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e4789;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__4951 = state_4785;
                        state_4785 = G__4951;
                        continue;
                      } else {
                        return ret_value__3807__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = function(state_4785) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1.call(this, state_4785);
                    }
                    throw new Error("Invalid arity: " + (arguments.length - 1));
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                }();
              }(switch__3805__auto__, c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results);
            }();
            var state__3822__auto__ = function() {
              var statearr_4791 = f__3821__auto__.call(null);
              statearr_4791[6] = c__3820__auto___4949;
              return statearr_4791;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
          };
        }(c__3820__auto___4949, res, vec__4778, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__4792) {
      var vec__4793 = p__4792;
      var v = cljs.core.nth.call(null, vec__4793, 0, null);
      var p = cljs.core.nth.call(null, vec__4793, 1, null);
      var job = vec__4793;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4376__auto___4952 = n;
  var __4953 = 0;
  while (true) {
    if (__4953 < n__4376__auto___4952) {
      var G__4796_4954 = type;
      var G__4796_4955__$1 = G__4796_4954 instanceof cljs.core.Keyword ? G__4796_4954.fqn : null;
      switch(G__4796_4955__$1) {
        case "compute":
          var c__3820__auto___4957 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__4953, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
            return function() {
              var f__3821__auto__ = function() {
                var switch__3805__auto__ = function(__4953, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
                  return function(state_4809) {
                    var state_val_4810 = state_4809[1];
                    if (state_val_4810 === 1) {
                      var state_4809__$1 = state_4809;
                      var statearr_4811_4958 = state_4809__$1;
                      statearr_4811_4958[2] = null;
                      statearr_4811_4958[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4810 === 2) {
                        var state_4809__$1 = state_4809;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4809__$1, 4, jobs);
                      } else {
                        if (state_val_4810 === 3) {
                          var inst_4807 = state_4809[2];
                          var state_4809__$1 = state_4809;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4809__$1, inst_4807);
                        } else {
                          if (state_val_4810 === 4) {
                            var inst_4799 = state_4809[2];
                            var inst_4800 = process.call(null, inst_4799);
                            var state_4809__$1 = state_4809;
                            if (cljs.core.truth_(inst_4800)) {
                              var statearr_4812_4959 = state_4809__$1;
                              statearr_4812_4959[1] = 5;
                            } else {
                              var statearr_4813_4960 = state_4809__$1;
                              statearr_4813_4960[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4810 === 5) {
                              var state_4809__$1 = state_4809;
                              var statearr_4814_4961 = state_4809__$1;
                              statearr_4814_4961[2] = null;
                              statearr_4814_4961[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4810 === 6) {
                                var state_4809__$1 = state_4809;
                                var statearr_4815_4962 = state_4809__$1;
                                statearr_4815_4962[2] = null;
                                statearr_4815_4962[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4810 === 7) {
                                  var inst_4805 = state_4809[2];
                                  var state_4809__$1 = state_4809;
                                  var statearr_4816_4963 = state_4809__$1;
                                  statearr_4816_4963[2] = inst_4805;
                                  statearr_4816_4963[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__4953, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async);
                return function(__4953, switch__3805__auto__, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0 = function() {
                      var statearr_4817 = [null, null, null, null, null, null, null];
                      statearr_4817[0] = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                      statearr_4817[1] = 1;
                      return statearr_4817;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1 = function(state_4809) {
                      while (true) {
                        var ret_value__3807__auto__ = function() {
                          try {
                            while (true) {
                              var result__3808__auto__ = switch__3805__auto__.call(null, state_4809);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__3808__auto__;
                              }
                              break;
                            }
                          } catch (e4818) {
                            if (e4818 instanceof Object) {
                              var ex__3809__auto__ = e4818;
                              var statearr_4819_4964 = state_4809;
                              statearr_4819_4964[5] = ex__3809__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4809);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e4818;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__4965 = state_4809;
                          state_4809 = G__4965;
                          continue;
                        } else {
                          return ret_value__3807__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = function(state_4809) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1.call(this, state_4809);
                      }
                      throw new Error("Invalid arity: " + (arguments.length - 1));
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                  }();
                }(__4953, switch__3805__auto__, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async);
              }();
              var state__3822__auto__ = function() {
                var statearr_4820 = f__3821__auto__.call(null);
                statearr_4820[6] = c__3820__auto___4957;
                return statearr_4820;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
            };
          }(__4953, c__3820__auto___4957, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async));
          break;
        case "async":
          var c__3820__auto___4966 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__4953, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
            return function() {
              var f__3821__auto__ = function() {
                var switch__3805__auto__ = function(__4953, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
                  return function(state_4833) {
                    var state_val_4834 = state_4833[1];
                    if (state_val_4834 === 1) {
                      var state_4833__$1 = state_4833;
                      var statearr_4835_4967 = state_4833__$1;
                      statearr_4835_4967[2] = null;
                      statearr_4835_4967[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4834 === 2) {
                        var state_4833__$1 = state_4833;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4833__$1, 4, jobs);
                      } else {
                        if (state_val_4834 === 3) {
                          var inst_4831 = state_4833[2];
                          var state_4833__$1 = state_4833;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4833__$1, inst_4831);
                        } else {
                          if (state_val_4834 === 4) {
                            var inst_4823 = state_4833[2];
                            var inst_4824 = async.call(null, inst_4823);
                            var state_4833__$1 = state_4833;
                            if (cljs.core.truth_(inst_4824)) {
                              var statearr_4836_4968 = state_4833__$1;
                              statearr_4836_4968[1] = 5;
                            } else {
                              var statearr_4837_4969 = state_4833__$1;
                              statearr_4837_4969[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4834 === 5) {
                              var state_4833__$1 = state_4833;
                              var statearr_4838_4970 = state_4833__$1;
                              statearr_4838_4970[2] = null;
                              statearr_4838_4970[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4834 === 6) {
                                var state_4833__$1 = state_4833;
                                var statearr_4839_4971 = state_4833__$1;
                                statearr_4839_4971[2] = null;
                                statearr_4839_4971[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4834 === 7) {
                                  var inst_4829 = state_4833[2];
                                  var state_4833__$1 = state_4833;
                                  var statearr_4840_4972 = state_4833__$1;
                                  statearr_4840_4972[2] = inst_4829;
                                  statearr_4840_4972[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__4953, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async);
                return function(__4953, switch__3805__auto__, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0 = function() {
                      var statearr_4841 = [null, null, null, null, null, null, null];
                      statearr_4841[0] = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                      statearr_4841[1] = 1;
                      return statearr_4841;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1 = function(state_4833) {
                      while (true) {
                        var ret_value__3807__auto__ = function() {
                          try {
                            while (true) {
                              var result__3808__auto__ = switch__3805__auto__.call(null, state_4833);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__3808__auto__;
                              }
                              break;
                            }
                          } catch (e4842) {
                            if (e4842 instanceof Object) {
                              var ex__3809__auto__ = e4842;
                              var statearr_4843_4973 = state_4833;
                              statearr_4843_4973[5] = ex__3809__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4833);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e4842;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__4974 = state_4833;
                          state_4833 = G__4974;
                          continue;
                        } else {
                          return ret_value__3807__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = function(state_4833) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1.call(this, state_4833);
                      }
                      throw new Error("Invalid arity: " + (arguments.length - 1));
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
                  }();
                }(__4953, switch__3805__auto__, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async);
              }();
              var state__3822__auto__ = function() {
                var statearr_4844 = f__3821__auto__.call(null);
                statearr_4844[6] = c__3820__auto___4966;
                return statearr_4844;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
            };
          }(__4953, c__3820__auto___4966, G__4796_4954, G__4796_4955__$1, n__4376__auto___4952, jobs, results, process, async));
          break;
        default:
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4796_4955__$1)].join(""));
      }
      var G__4975 = __4953 + 1;
      __4953 = G__4975;
      continue;
    } else {
    }
    break;
  }
  var c__3820__auto___4976 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___4976, jobs, results, process, async) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___4976, jobs, results, process, async) {
          return function(state_4866) {
            var state_val_4867 = state_4866[1];
            if (state_val_4867 === 1) {
              var state_4866__$1 = state_4866;
              var statearr_4868_4977 = state_4866__$1;
              statearr_4868_4977[2] = null;
              statearr_4868_4977[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4867 === 2) {
                var state_4866__$1 = state_4866;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4866__$1, 4, from);
              } else {
                if (state_val_4867 === 3) {
                  var inst_4864 = state_4866[2];
                  var state_4866__$1 = state_4866;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4866__$1, inst_4864);
                } else {
                  if (state_val_4867 === 4) {
                    var inst_4847 = state_4866[7];
                    var inst_4847__$1 = state_4866[2];
                    var inst_4848 = inst_4847__$1 == null;
                    var state_4866__$1 = function() {
                      var statearr_4869 = state_4866;
                      statearr_4869[7] = inst_4847__$1;
                      return statearr_4869;
                    }();
                    if (cljs.core.truth_(inst_4848)) {
                      var statearr_4870_4978 = state_4866__$1;
                      statearr_4870_4978[1] = 5;
                    } else {
                      var statearr_4871_4979 = state_4866__$1;
                      statearr_4871_4979[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4867 === 5) {
                      var inst_4850 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_4866__$1 = state_4866;
                      var statearr_4872_4980 = state_4866__$1;
                      statearr_4872_4980[2] = inst_4850;
                      statearr_4872_4980[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4867 === 6) {
                        var inst_4847 = state_4866[7];
                        var inst_4852 = state_4866[8];
                        var inst_4852__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_4853 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_4854 = [inst_4847, inst_4852__$1];
                        var inst_4855 = new cljs.core.PersistentVector(null, 2, 5, inst_4853, inst_4854, null);
                        var state_4866__$1 = function() {
                          var statearr_4873 = state_4866;
                          statearr_4873[8] = inst_4852__$1;
                          return statearr_4873;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4866__$1, 8, jobs, inst_4855);
                      } else {
                        if (state_val_4867 === 7) {
                          var inst_4862 = state_4866[2];
                          var state_4866__$1 = state_4866;
                          var statearr_4874_4981 = state_4866__$1;
                          statearr_4874_4981[2] = inst_4862;
                          statearr_4874_4981[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4867 === 8) {
                            var inst_4852 = state_4866[8];
                            var inst_4857 = state_4866[2];
                            var state_4866__$1 = function() {
                              var statearr_4875 = state_4866;
                              statearr_4875[9] = inst_4857;
                              return statearr_4875;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4866__$1, 9, results, inst_4852);
                          } else {
                            if (state_val_4867 === 9) {
                              var inst_4859 = state_4866[2];
                              var state_4866__$1 = function() {
                                var statearr_4876 = state_4866;
                                statearr_4876[10] = inst_4859;
                                return statearr_4876;
                              }();
                              var statearr_4877_4982 = state_4866__$1;
                              statearr_4877_4982[2] = null;
                              statearr_4877_4982[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___4976, jobs, results, process, async);
        return function(switch__3805__auto__, c__3820__auto___4976, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0 = function() {
              var statearr_4878 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_4878[0] = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
              statearr_4878[1] = 1;
              return statearr_4878;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1 = function(state_4866) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_4866);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e4879) {
                    if (e4879 instanceof Object) {
                      var ex__3809__auto__ = e4879;
                      var statearr_4880_4983 = state_4866;
                      statearr_4880_4983[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4866);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4879;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4984 = state_4866;
                  state_4866 = G__4984;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = function(state_4866) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1.call(this, state_4866);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___4976, jobs, results, process, async);
      }();
      var state__3822__auto__ = function() {
        var statearr_4881 = f__3821__auto__.call(null);
        statearr_4881[6] = c__3820__auto___4976;
        return statearr_4881;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___4976, jobs, results, process, async));
  var c__3820__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto__, jobs, results, process, async) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto__, jobs, results, process, async) {
          return function(state_4919) {
            var state_val_4920 = state_4919[1];
            if (state_val_4920 === 7) {
              var inst_4915 = state_4919[2];
              var state_4919__$1 = state_4919;
              var statearr_4921_4985 = state_4919__$1;
              statearr_4921_4985[2] = inst_4915;
              statearr_4921_4985[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4920 === 20) {
                var state_4919__$1 = state_4919;
                var statearr_4922_4986 = state_4919__$1;
                statearr_4922_4986[2] = null;
                statearr_4922_4986[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4920 === 1) {
                  var state_4919__$1 = state_4919;
                  var statearr_4923_4987 = state_4919__$1;
                  statearr_4923_4987[2] = null;
                  statearr_4923_4987[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4920 === 4) {
                    var inst_4884 = state_4919[7];
                    var inst_4884__$1 = state_4919[2];
                    var inst_4885 = inst_4884__$1 == null;
                    var state_4919__$1 = function() {
                      var statearr_4924 = state_4919;
                      statearr_4924[7] = inst_4884__$1;
                      return statearr_4924;
                    }();
                    if (cljs.core.truth_(inst_4885)) {
                      var statearr_4925_4988 = state_4919__$1;
                      statearr_4925_4988[1] = 5;
                    } else {
                      var statearr_4926_4989 = state_4919__$1;
                      statearr_4926_4989[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4920 === 15) {
                      var inst_4897 = state_4919[8];
                      var state_4919__$1 = state_4919;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4919__$1, 18, to, inst_4897);
                    } else {
                      if (state_val_4920 === 21) {
                        var inst_4910 = state_4919[2];
                        var state_4919__$1 = state_4919;
                        var statearr_4927_4990 = state_4919__$1;
                        statearr_4927_4990[2] = inst_4910;
                        statearr_4927_4990[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_4920 === 13) {
                          var inst_4912 = state_4919[2];
                          var state_4919__$1 = function() {
                            var statearr_4928 = state_4919;
                            statearr_4928[9] = inst_4912;
                            return statearr_4928;
                          }();
                          var statearr_4929_4991 = state_4919__$1;
                          statearr_4929_4991[2] = null;
                          statearr_4929_4991[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4920 === 6) {
                            var inst_4884 = state_4919[7];
                            var state_4919__$1 = state_4919;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4919__$1, 11, inst_4884);
                          } else {
                            if (state_val_4920 === 17) {
                              var inst_4905 = state_4919[2];
                              var state_4919__$1 = state_4919;
                              if (cljs.core.truth_(inst_4905)) {
                                var statearr_4930_4992 = state_4919__$1;
                                statearr_4930_4992[1] = 19;
                              } else {
                                var statearr_4931_4993 = state_4919__$1;
                                statearr_4931_4993[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4920 === 3) {
                                var inst_4917 = state_4919[2];
                                var state_4919__$1 = state_4919;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4919__$1, inst_4917);
                              } else {
                                if (state_val_4920 === 12) {
                                  var inst_4894 = state_4919[10];
                                  var state_4919__$1 = state_4919;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4919__$1, 14, inst_4894);
                                } else {
                                  if (state_val_4920 === 2) {
                                    var state_4919__$1 = state_4919;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4919__$1, 4, results);
                                  } else {
                                    if (state_val_4920 === 19) {
                                      var state_4919__$1 = state_4919;
                                      var statearr_4932_4994 = state_4919__$1;
                                      statearr_4932_4994[2] = null;
                                      statearr_4932_4994[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_4920 === 11) {
                                        var inst_4894 = state_4919[2];
                                        var state_4919__$1 = function() {
                                          var statearr_4933 = state_4919;
                                          statearr_4933[10] = inst_4894;
                                          return statearr_4933;
                                        }();
                                        var statearr_4934_4995 = state_4919__$1;
                                        statearr_4934_4995[2] = null;
                                        statearr_4934_4995[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_4920 === 9) {
                                          var state_4919__$1 = state_4919;
                                          var statearr_4935_4996 = state_4919__$1;
                                          statearr_4935_4996[2] = null;
                                          statearr_4935_4996[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_4920 === 5) {
                                            var state_4919__$1 = state_4919;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_4936_4997 = state_4919__$1;
                                              statearr_4936_4997[1] = 8;
                                            } else {
                                              var statearr_4937_4998 = state_4919__$1;
                                              statearr_4937_4998[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_4920 === 14) {
                                              var inst_4899 = state_4919[11];
                                              var inst_4897 = state_4919[8];
                                              var inst_4897__$1 = state_4919[2];
                                              var inst_4898 = inst_4897__$1 == null;
                                              var inst_4899__$1 = cljs.core.not.call(null, inst_4898);
                                              var state_4919__$1 = function() {
                                                var statearr_4938 = state_4919;
                                                statearr_4938[11] = inst_4899__$1;
                                                statearr_4938[8] = inst_4897__$1;
                                                return statearr_4938;
                                              }();
                                              if (inst_4899__$1) {
                                                var statearr_4939_4999 = state_4919__$1;
                                                statearr_4939_4999[1] = 15;
                                              } else {
                                                var statearr_4940_5000 = state_4919__$1;
                                                statearr_4940_5000[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_4920 === 16) {
                                                var inst_4899 = state_4919[11];
                                                var state_4919__$1 = state_4919;
                                                var statearr_4941_5001 = state_4919__$1;
                                                statearr_4941_5001[2] = inst_4899;
                                                statearr_4941_5001[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_4920 === 10) {
                                                  var inst_4891 = state_4919[2];
                                                  var state_4919__$1 = state_4919;
                                                  var statearr_4942_5002 = state_4919__$1;
                                                  statearr_4942_5002[2] = inst_4891;
                                                  statearr_4942_5002[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_4920 === 18) {
                                                    var inst_4902 = state_4919[2];
                                                    var state_4919__$1 = state_4919;
                                                    var statearr_4943_5003 = state_4919__$1;
                                                    statearr_4943_5003[2] = inst_4902;
                                                    statearr_4943_5003[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_4920 === 8) {
                                                      var inst_4888 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_4919__$1 = state_4919;
                                                      var statearr_4944_5004 = state_4919__$1;
                                                      statearr_4944_5004[2] = inst_4888;
                                                      statearr_4944_5004[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto__, jobs, results, process, async);
        return function(switch__3805__auto__, c__3820__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0 = function() {
              var statearr_4945 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_4945[0] = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
              statearr_4945[1] = 1;
              return statearr_4945;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1 = function(state_4919) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_4919);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e4946) {
                    if (e4946 instanceof Object) {
                      var ex__3809__auto__ = e4946;
                      var statearr_4947_5005 = state_4919;
                      statearr_4947_5005[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4919);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4946;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5006 = state_4919;
                  state_4919 = G__5006;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__ = function(state_4919) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1.call(this, state_4919);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__3806__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto__, jobs, results, process, async);
      }();
      var state__3822__auto__ = function() {
        var statearr_4948 = f__3821__auto__.call(null);
        statearr_4948[6] = c__3820__auto__;
        return statearr_4948;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto__, jobs, results, process, async));
  return c__3820__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var G__5008 = arguments.length;
  switch(G__5008) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var G__5011 = arguments.length;
  switch(G__5011) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var G__5014 = arguments.length;
  switch(G__5014) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__3820__auto___5063 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___5063, tc, fc) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___5063, tc, fc) {
          return function(state_5040) {
            var state_val_5041 = state_5040[1];
            if (state_val_5041 === 7) {
              var inst_5036 = state_5040[2];
              var state_5040__$1 = state_5040;
              var statearr_5042_5064 = state_5040__$1;
              statearr_5042_5064[2] = inst_5036;
              statearr_5042_5064[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5041 === 1) {
                var state_5040__$1 = state_5040;
                var statearr_5043_5065 = state_5040__$1;
                statearr_5043_5065[2] = null;
                statearr_5043_5065[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5041 === 4) {
                  var inst_5017 = state_5040[7];
                  var inst_5017__$1 = state_5040[2];
                  var inst_5018 = inst_5017__$1 == null;
                  var state_5040__$1 = function() {
                    var statearr_5044 = state_5040;
                    statearr_5044[7] = inst_5017__$1;
                    return statearr_5044;
                  }();
                  if (cljs.core.truth_(inst_5018)) {
                    var statearr_5045_5066 = state_5040__$1;
                    statearr_5045_5066[1] = 5;
                  } else {
                    var statearr_5046_5067 = state_5040__$1;
                    statearr_5046_5067[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5041 === 13) {
                    var state_5040__$1 = state_5040;
                    var statearr_5047_5068 = state_5040__$1;
                    statearr_5047_5068[2] = null;
                    statearr_5047_5068[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5041 === 6) {
                      var inst_5017 = state_5040[7];
                      var inst_5023 = p.call(null, inst_5017);
                      var state_5040__$1 = state_5040;
                      if (cljs.core.truth_(inst_5023)) {
                        var statearr_5048_5069 = state_5040__$1;
                        statearr_5048_5069[1] = 9;
                      } else {
                        var statearr_5049_5070 = state_5040__$1;
                        statearr_5049_5070[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5041 === 3) {
                        var inst_5038 = state_5040[2];
                        var state_5040__$1 = state_5040;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5040__$1, inst_5038);
                      } else {
                        if (state_val_5041 === 12) {
                          var state_5040__$1 = state_5040;
                          var statearr_5050_5071 = state_5040__$1;
                          statearr_5050_5071[2] = null;
                          statearr_5050_5071[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5041 === 2) {
                            var state_5040__$1 = state_5040;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5040__$1, 4, ch);
                          } else {
                            if (state_val_5041 === 11) {
                              var inst_5017 = state_5040[7];
                              var inst_5027 = state_5040[2];
                              var state_5040__$1 = state_5040;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5040__$1, 8, inst_5027, inst_5017);
                            } else {
                              if (state_val_5041 === 9) {
                                var state_5040__$1 = state_5040;
                                var statearr_5051_5072 = state_5040__$1;
                                statearr_5051_5072[2] = tc;
                                statearr_5051_5072[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5041 === 5) {
                                  var inst_5020 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_5021 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_5040__$1 = function() {
                                    var statearr_5052 = state_5040;
                                    statearr_5052[8] = inst_5020;
                                    return statearr_5052;
                                  }();
                                  var statearr_5053_5073 = state_5040__$1;
                                  statearr_5053_5073[2] = inst_5021;
                                  statearr_5053_5073[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5041 === 14) {
                                    var inst_5034 = state_5040[2];
                                    var state_5040__$1 = state_5040;
                                    var statearr_5054_5074 = state_5040__$1;
                                    statearr_5054_5074[2] = inst_5034;
                                    statearr_5054_5074[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5041 === 10) {
                                      var state_5040__$1 = state_5040;
                                      var statearr_5055_5075 = state_5040__$1;
                                      statearr_5055_5075[2] = fc;
                                      statearr_5055_5075[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_5041 === 8) {
                                        var inst_5029 = state_5040[2];
                                        var state_5040__$1 = state_5040;
                                        if (cljs.core.truth_(inst_5029)) {
                                          var statearr_5056_5076 = state_5040__$1;
                                          statearr_5056_5076[1] = 12;
                                        } else {
                                          var statearr_5057_5077 = state_5040__$1;
                                          statearr_5057_5077[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___5063, tc, fc);
        return function(switch__3805__auto__, c__3820__auto___5063, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_5058 = [null, null, null, null, null, null, null, null, null];
              statearr_5058[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_5058[1] = 1;
              return statearr_5058;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_5040) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5040);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5059) {
                    if (e5059 instanceof Object) {
                      var ex__3809__auto__ = e5059;
                      var statearr_5060_5078 = state_5040;
                      statearr_5060_5078[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5040);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5059;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5079 = state_5040;
                  state_5040 = G__5079;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_5040) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_5040);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___5063, tc, fc);
      }();
      var state__3822__auto__ = function() {
        var statearr_5061 = f__3821__auto__.call(null);
        statearr_5061[6] = c__3820__auto___5063;
        return statearr_5061;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___5063, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__3820__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto__) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto__) {
          return function(state_5100) {
            var state_val_5101 = state_5100[1];
            if (state_val_5101 === 7) {
              var inst_5096 = state_5100[2];
              var state_5100__$1 = state_5100;
              var statearr_5102_5120 = state_5100__$1;
              statearr_5102_5120[2] = inst_5096;
              statearr_5102_5120[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5101 === 1) {
                var inst_5080 = init;
                var state_5100__$1 = function() {
                  var statearr_5103 = state_5100;
                  statearr_5103[7] = inst_5080;
                  return statearr_5103;
                }();
                var statearr_5104_5121 = state_5100__$1;
                statearr_5104_5121[2] = null;
                statearr_5104_5121[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5101 === 4) {
                  var inst_5083 = state_5100[8];
                  var inst_5083__$1 = state_5100[2];
                  var inst_5084 = inst_5083__$1 == null;
                  var state_5100__$1 = function() {
                    var statearr_5105 = state_5100;
                    statearr_5105[8] = inst_5083__$1;
                    return statearr_5105;
                  }();
                  if (cljs.core.truth_(inst_5084)) {
                    var statearr_5106_5122 = state_5100__$1;
                    statearr_5106_5122[1] = 5;
                  } else {
                    var statearr_5107_5123 = state_5100__$1;
                    statearr_5107_5123[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5101 === 6) {
                    var inst_5080 = state_5100[7];
                    var inst_5083 = state_5100[8];
                    var inst_5087 = state_5100[9];
                    var inst_5087__$1 = f.call(null, inst_5080, inst_5083);
                    var inst_5088 = cljs.core.reduced_QMARK_.call(null, inst_5087__$1);
                    var state_5100__$1 = function() {
                      var statearr_5108 = state_5100;
                      statearr_5108[9] = inst_5087__$1;
                      return statearr_5108;
                    }();
                    if (inst_5088) {
                      var statearr_5109_5124 = state_5100__$1;
                      statearr_5109_5124[1] = 8;
                    } else {
                      var statearr_5110_5125 = state_5100__$1;
                      statearr_5110_5125[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5101 === 3) {
                      var inst_5098 = state_5100[2];
                      var state_5100__$1 = state_5100;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5100__$1, inst_5098);
                    } else {
                      if (state_val_5101 === 2) {
                        var state_5100__$1 = state_5100;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5100__$1, 4, ch);
                      } else {
                        if (state_val_5101 === 9) {
                          var inst_5087 = state_5100[9];
                          var inst_5080 = inst_5087;
                          var state_5100__$1 = function() {
                            var statearr_5111 = state_5100;
                            statearr_5111[7] = inst_5080;
                            return statearr_5111;
                          }();
                          var statearr_5112_5126 = state_5100__$1;
                          statearr_5112_5126[2] = null;
                          statearr_5112_5126[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5101 === 5) {
                            var inst_5080 = state_5100[7];
                            var state_5100__$1 = state_5100;
                            var statearr_5113_5127 = state_5100__$1;
                            statearr_5113_5127[2] = inst_5080;
                            statearr_5113_5127[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5101 === 10) {
                              var inst_5094 = state_5100[2];
                              var state_5100__$1 = state_5100;
                              var statearr_5114_5128 = state_5100__$1;
                              statearr_5114_5128[2] = inst_5094;
                              statearr_5114_5128[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5101 === 8) {
                                var inst_5087 = state_5100[9];
                                var inst_5090 = cljs.core.deref.call(null, inst_5087);
                                var state_5100__$1 = state_5100;
                                var statearr_5115_5129 = state_5100__$1;
                                statearr_5115_5129[2] = inst_5090;
                                statearr_5115_5129[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto__);
        return function(switch__3805__auto__, c__3820__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__3806__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__3806__auto____0 = function() {
              var statearr_5116 = [null, null, null, null, null, null, null, null, null, null];
              statearr_5116[0] = cljs$core$async$reduce_$_state_machine__3806__auto__;
              statearr_5116[1] = 1;
              return statearr_5116;
            };
            var cljs$core$async$reduce_$_state_machine__3806__auto____1 = function(state_5100) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5100);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5117) {
                    if (e5117 instanceof Object) {
                      var ex__3809__auto__ = e5117;
                      var statearr_5118_5130 = state_5100;
                      statearr_5118_5130[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5100);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5117;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5131 = state_5100;
                  state_5100 = G__5131;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__3806__auto__ = function(state_5100) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__3806__auto____1.call(this, state_5100);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$reduce_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__3806__auto____0;
            cljs$core$async$reduce_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__3806__auto____1;
            return cljs$core$async$reduce_$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto__);
      }();
      var state__3822__auto__ = function() {
        var statearr_5119 = f__3821__auto__.call(null);
        statearr_5119[6] = c__3820__auto__;
        return statearr_5119;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto__));
  return c__3820__auto__;
};
cljs.core.async.transduce = function cljs$core$async$transduce(xform, f, init, ch) {
  var f__$1 = xform.call(null, f);
  var c__3820__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto__, f__$1) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto__, f__$1) {
          return function(state_5137) {
            var state_val_5138 = state_5137[1];
            if (state_val_5138 === 1) {
              var inst_5132 = cljs.core.async.reduce.call(null, f__$1, init, ch);
              var state_5137__$1 = state_5137;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5137__$1, 2, inst_5132);
            } else {
              if (state_val_5138 === 2) {
                var inst_5134 = state_5137[2];
                var inst_5135 = f__$1.call(null, inst_5134);
                var state_5137__$1 = state_5137;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5137__$1, inst_5135);
              } else {
                return null;
              }
            }
          };
        }(c__3820__auto__, f__$1);
        return function(switch__3805__auto__, c__3820__auto__, f__$1) {
          return function() {
            var cljs$core$async$transduce_$_state_machine__3806__auto__ = null;
            var cljs$core$async$transduce_$_state_machine__3806__auto____0 = function() {
              var statearr_5139 = [null, null, null, null, null, null, null];
              statearr_5139[0] = cljs$core$async$transduce_$_state_machine__3806__auto__;
              statearr_5139[1] = 1;
              return statearr_5139;
            };
            var cljs$core$async$transduce_$_state_machine__3806__auto____1 = function(state_5137) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5137);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5140) {
                    if (e5140 instanceof Object) {
                      var ex__3809__auto__ = e5140;
                      var statearr_5141_5143 = state_5137;
                      statearr_5141_5143[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5137);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5140;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5144 = state_5137;
                  state_5137 = G__5144;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$transduce_$_state_machine__3806__auto__ = function(state_5137) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$transduce_$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$transduce_$_state_machine__3806__auto____1.call(this, state_5137);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$transduce_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$transduce_$_state_machine__3806__auto____0;
            cljs$core$async$transduce_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$transduce_$_state_machine__3806__auto____1;
            return cljs$core$async$transduce_$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto__, f__$1);
      }();
      var state__3822__auto__ = function() {
        var statearr_5142 = f__3821__auto__.call(null);
        statearr_5142[6] = c__3820__auto__;
        return statearr_5142;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto__, f__$1));
  return c__3820__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var G__5146 = arguments.length;
  switch(G__5146) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__3820__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto__) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto__) {
          return function(state_5171) {
            var state_val_5172 = state_5171[1];
            if (state_val_5172 === 7) {
              var inst_5153 = state_5171[2];
              var state_5171__$1 = state_5171;
              var statearr_5173_5194 = state_5171__$1;
              statearr_5173_5194[2] = inst_5153;
              statearr_5173_5194[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5172 === 1) {
                var inst_5147 = cljs.core.seq.call(null, coll);
                var inst_5148 = inst_5147;
                var state_5171__$1 = function() {
                  var statearr_5174 = state_5171;
                  statearr_5174[7] = inst_5148;
                  return statearr_5174;
                }();
                var statearr_5175_5195 = state_5171__$1;
                statearr_5175_5195[2] = null;
                statearr_5175_5195[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5172 === 4) {
                  var inst_5148 = state_5171[7];
                  var inst_5151 = cljs.core.first.call(null, inst_5148);
                  var state_5171__$1 = state_5171;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5171__$1, 7, ch, inst_5151);
                } else {
                  if (state_val_5172 === 13) {
                    var inst_5165 = state_5171[2];
                    var state_5171__$1 = state_5171;
                    var statearr_5176_5196 = state_5171__$1;
                    statearr_5176_5196[2] = inst_5165;
                    statearr_5176_5196[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5172 === 6) {
                      var inst_5156 = state_5171[2];
                      var state_5171__$1 = state_5171;
                      if (cljs.core.truth_(inst_5156)) {
                        var statearr_5177_5197 = state_5171__$1;
                        statearr_5177_5197[1] = 8;
                      } else {
                        var statearr_5178_5198 = state_5171__$1;
                        statearr_5178_5198[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5172 === 3) {
                        var inst_5169 = state_5171[2];
                        var state_5171__$1 = state_5171;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5171__$1, inst_5169);
                      } else {
                        if (state_val_5172 === 12) {
                          var state_5171__$1 = state_5171;
                          var statearr_5179_5199 = state_5171__$1;
                          statearr_5179_5199[2] = null;
                          statearr_5179_5199[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5172 === 2) {
                            var inst_5148 = state_5171[7];
                            var state_5171__$1 = state_5171;
                            if (cljs.core.truth_(inst_5148)) {
                              var statearr_5180_5200 = state_5171__$1;
                              statearr_5180_5200[1] = 4;
                            } else {
                              var statearr_5181_5201 = state_5171__$1;
                              statearr_5181_5201[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5172 === 11) {
                              var inst_5162 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_5171__$1 = state_5171;
                              var statearr_5182_5202 = state_5171__$1;
                              statearr_5182_5202[2] = inst_5162;
                              statearr_5182_5202[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5172 === 9) {
                                var state_5171__$1 = state_5171;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_5183_5203 = state_5171__$1;
                                  statearr_5183_5203[1] = 11;
                                } else {
                                  var statearr_5184_5204 = state_5171__$1;
                                  statearr_5184_5204[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5172 === 5) {
                                  var inst_5148 = state_5171[7];
                                  var state_5171__$1 = state_5171;
                                  var statearr_5185_5205 = state_5171__$1;
                                  statearr_5185_5205[2] = inst_5148;
                                  statearr_5185_5205[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5172 === 10) {
                                    var inst_5167 = state_5171[2];
                                    var state_5171__$1 = state_5171;
                                    var statearr_5186_5206 = state_5171__$1;
                                    statearr_5186_5206[2] = inst_5167;
                                    statearr_5186_5206[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5172 === 8) {
                                      var inst_5148 = state_5171[7];
                                      var inst_5158 = cljs.core.next.call(null, inst_5148);
                                      var inst_5148__$1 = inst_5158;
                                      var state_5171__$1 = function() {
                                        var statearr_5187 = state_5171;
                                        statearr_5187[7] = inst_5148__$1;
                                        return statearr_5187;
                                      }();
                                      var statearr_5188_5207 = state_5171__$1;
                                      statearr_5188_5207[2] = null;
                                      statearr_5188_5207[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto__);
        return function(switch__3805__auto__, c__3820__auto__) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_5189 = [null, null, null, null, null, null, null, null];
              statearr_5189[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_5189[1] = 1;
              return statearr_5189;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_5171) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5171);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5190) {
                    if (e5190 instanceof Object) {
                      var ex__3809__auto__ = e5190;
                      var statearr_5191_5208 = state_5171;
                      statearr_5191_5208[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5171);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5190;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5209 = state_5171;
                  state_5171 = G__5209;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_5171) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_5171);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto__);
      }();
      var state__3822__auto__ = function() {
        var statearr_5192 = f__3821__auto__.call(null);
        statearr_5192[6] = c__3820__auto__;
        return statearr_5192;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto__));
  return c__3820__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4211__auto__ = _ == null ? null : _;
    var m__4212__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, _);
    } else {
      var m__4212__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__4212__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, ch);
    } else {
      var m__4212__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m);
    } else {
      var m__4212__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async5210 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5210 = function(ch, cs, meta5211) {
        this.ch = ch;
        this.cs = cs;
        this.meta5211 = meta5211;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_5212, meta5211__$1) {
          var self__ = this;
          var _5212__$1 = this;
          return new cljs.core.async.t_cljs$core$async5210(self__.ch, self__.cs, meta5211__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_5212) {
          var self__ = this;
          var _5212__$1 = this;
          return self__.meta5211;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mult$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta5211", "meta5211", 1661772474, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5210.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5210.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5210";
      cljs.core.async.t_cljs$core$async5210.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
          return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async5210");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async5210 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async5210(ch__$1, cs__$1, meta5211) {
          return new cljs.core.async.t_cljs$core$async5210(ch__$1, cs__$1, meta5211);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async5210(ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__3820__auto___5432 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___5432, cs, m, dchan, dctr, done) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___5432, cs, m, dchan, dctr, done) {
          return function(state_5347) {
            var state_val_5348 = state_5347[1];
            if (state_val_5348 === 7) {
              var inst_5343 = state_5347[2];
              var state_5347__$1 = state_5347;
              var statearr_5349_5433 = state_5347__$1;
              statearr_5349_5433[2] = inst_5343;
              statearr_5349_5433[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5348 === 20) {
                var inst_5246 = state_5347[7];
                var inst_5258 = cljs.core.first.call(null, inst_5246);
                var inst_5259 = cljs.core.nth.call(null, inst_5258, 0, null);
                var inst_5260 = cljs.core.nth.call(null, inst_5258, 1, null);
                var state_5347__$1 = function() {
                  var statearr_5350 = state_5347;
                  statearr_5350[8] = inst_5259;
                  return statearr_5350;
                }();
                if (cljs.core.truth_(inst_5260)) {
                  var statearr_5351_5434 = state_5347__$1;
                  statearr_5351_5434[1] = 22;
                } else {
                  var statearr_5352_5435 = state_5347__$1;
                  statearr_5352_5435[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5348 === 27) {
                  var inst_5290 = state_5347[9];
                  var inst_5295 = state_5347[10];
                  var inst_5288 = state_5347[11];
                  var inst_5215 = state_5347[12];
                  var inst_5295__$1 = cljs.core._nth.call(null, inst_5288, inst_5290);
                  var inst_5296 = cljs.core.async.put_BANG_.call(null, inst_5295__$1, inst_5215, done);
                  var state_5347__$1 = function() {
                    var statearr_5353 = state_5347;
                    statearr_5353[10] = inst_5295__$1;
                    return statearr_5353;
                  }();
                  if (cljs.core.truth_(inst_5296)) {
                    var statearr_5354_5436 = state_5347__$1;
                    statearr_5354_5436[1] = 30;
                  } else {
                    var statearr_5355_5437 = state_5347__$1;
                    statearr_5355_5437[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5348 === 1) {
                    var state_5347__$1 = state_5347;
                    var statearr_5356_5438 = state_5347__$1;
                    statearr_5356_5438[2] = null;
                    statearr_5356_5438[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5348 === 24) {
                      var inst_5246 = state_5347[7];
                      var inst_5265 = state_5347[2];
                      var inst_5266 = cljs.core.next.call(null, inst_5246);
                      var inst_5224 = inst_5266;
                      var inst_5225 = null;
                      var inst_5226 = 0;
                      var inst_5227 = 0;
                      var state_5347__$1 = function() {
                        var statearr_5357 = state_5347;
                        statearr_5357[13] = inst_5227;
                        statearr_5357[14] = inst_5224;
                        statearr_5357[15] = inst_5225;
                        statearr_5357[16] = inst_5226;
                        statearr_5357[17] = inst_5265;
                        return statearr_5357;
                      }();
                      var statearr_5358_5439 = state_5347__$1;
                      statearr_5358_5439[2] = null;
                      statearr_5358_5439[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5348 === 39) {
                        var state_5347__$1 = state_5347;
                        var statearr_5362_5440 = state_5347__$1;
                        statearr_5362_5440[2] = null;
                        statearr_5362_5440[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5348 === 4) {
                          var inst_5215 = state_5347[12];
                          var inst_5215__$1 = state_5347[2];
                          var inst_5216 = inst_5215__$1 == null;
                          var state_5347__$1 = function() {
                            var statearr_5363 = state_5347;
                            statearr_5363[12] = inst_5215__$1;
                            return statearr_5363;
                          }();
                          if (cljs.core.truth_(inst_5216)) {
                            var statearr_5364_5441 = state_5347__$1;
                            statearr_5364_5441[1] = 5;
                          } else {
                            var statearr_5365_5442 = state_5347__$1;
                            statearr_5365_5442[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5348 === 15) {
                            var inst_5227 = state_5347[13];
                            var inst_5224 = state_5347[14];
                            var inst_5225 = state_5347[15];
                            var inst_5226 = state_5347[16];
                            var inst_5242 = state_5347[2];
                            var inst_5243 = inst_5227 + 1;
                            var tmp5359 = inst_5224;
                            var tmp5360 = inst_5225;
                            var tmp5361 = inst_5226;
                            var inst_5224__$1 = tmp5359;
                            var inst_5225__$1 = tmp5360;
                            var inst_5226__$1 = tmp5361;
                            var inst_5227__$1 = inst_5243;
                            var state_5347__$1 = function() {
                              var statearr_5366 = state_5347;
                              statearr_5366[13] = inst_5227__$1;
                              statearr_5366[14] = inst_5224__$1;
                              statearr_5366[15] = inst_5225__$1;
                              statearr_5366[16] = inst_5226__$1;
                              statearr_5366[18] = inst_5242;
                              return statearr_5366;
                            }();
                            var statearr_5367_5443 = state_5347__$1;
                            statearr_5367_5443[2] = null;
                            statearr_5367_5443[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5348 === 21) {
                              var inst_5269 = state_5347[2];
                              var state_5347__$1 = state_5347;
                              var statearr_5371_5444 = state_5347__$1;
                              statearr_5371_5444[2] = inst_5269;
                              statearr_5371_5444[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5348 === 31) {
                                var inst_5295 = state_5347[10];
                                var inst_5299 = done.call(null, null);
                                var inst_5300 = cljs.core.async.untap_STAR_.call(null, m, inst_5295);
                                var state_5347__$1 = function() {
                                  var statearr_5372 = state_5347;
                                  statearr_5372[19] = inst_5299;
                                  return statearr_5372;
                                }();
                                var statearr_5373_5445 = state_5347__$1;
                                statearr_5373_5445[2] = inst_5300;
                                statearr_5373_5445[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5348 === 32) {
                                  var inst_5290 = state_5347[9];
                                  var inst_5287 = state_5347[20];
                                  var inst_5288 = state_5347[11];
                                  var inst_5289 = state_5347[21];
                                  var inst_5302 = state_5347[2];
                                  var inst_5303 = inst_5290 + 1;
                                  var tmp5368 = inst_5287;
                                  var tmp5369 = inst_5288;
                                  var tmp5370 = inst_5289;
                                  var inst_5287__$1 = tmp5368;
                                  var inst_5288__$1 = tmp5369;
                                  var inst_5289__$1 = tmp5370;
                                  var inst_5290__$1 = inst_5303;
                                  var state_5347__$1 = function() {
                                    var statearr_5374 = state_5347;
                                    statearr_5374[9] = inst_5290__$1;
                                    statearr_5374[22] = inst_5302;
                                    statearr_5374[20] = inst_5287__$1;
                                    statearr_5374[11] = inst_5288__$1;
                                    statearr_5374[21] = inst_5289__$1;
                                    return statearr_5374;
                                  }();
                                  var statearr_5375_5446 = state_5347__$1;
                                  statearr_5375_5446[2] = null;
                                  statearr_5375_5446[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5348 === 40) {
                                    var inst_5315 = state_5347[23];
                                    var inst_5319 = done.call(null, null);
                                    var inst_5320 = cljs.core.async.untap_STAR_.call(null, m, inst_5315);
                                    var state_5347__$1 = function() {
                                      var statearr_5376 = state_5347;
                                      statearr_5376[24] = inst_5319;
                                      return statearr_5376;
                                    }();
                                    var statearr_5377_5447 = state_5347__$1;
                                    statearr_5377_5447[2] = inst_5320;
                                    statearr_5377_5447[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5348 === 33) {
                                      var inst_5306 = state_5347[25];
                                      var inst_5308 = cljs.core.chunked_seq_QMARK_.call(null, inst_5306);
                                      var state_5347__$1 = state_5347;
                                      if (inst_5308) {
                                        var statearr_5378_5448 = state_5347__$1;
                                        statearr_5378_5448[1] = 36;
                                      } else {
                                        var statearr_5379_5449 = state_5347__$1;
                                        statearr_5379_5449[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_5348 === 13) {
                                        var inst_5236 = state_5347[26];
                                        var inst_5239 = cljs.core.async.close_BANG_.call(null, inst_5236);
                                        var state_5347__$1 = state_5347;
                                        var statearr_5380_5450 = state_5347__$1;
                                        statearr_5380_5450[2] = inst_5239;
                                        statearr_5380_5450[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5348 === 22) {
                                          var inst_5259 = state_5347[8];
                                          var inst_5262 = cljs.core.async.close_BANG_.call(null, inst_5259);
                                          var state_5347__$1 = state_5347;
                                          var statearr_5381_5451 = state_5347__$1;
                                          statearr_5381_5451[2] = inst_5262;
                                          statearr_5381_5451[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5348 === 36) {
                                            var inst_5306 = state_5347[25];
                                            var inst_5310 = cljs.core.chunk_first.call(null, inst_5306);
                                            var inst_5311 = cljs.core.chunk_rest.call(null, inst_5306);
                                            var inst_5312 = cljs.core.count.call(null, inst_5310);
                                            var inst_5287 = inst_5311;
                                            var inst_5288 = inst_5310;
                                            var inst_5289 = inst_5312;
                                            var inst_5290 = 0;
                                            var state_5347__$1 = function() {
                                              var statearr_5382 = state_5347;
                                              statearr_5382[9] = inst_5290;
                                              statearr_5382[20] = inst_5287;
                                              statearr_5382[11] = inst_5288;
                                              statearr_5382[21] = inst_5289;
                                              return statearr_5382;
                                            }();
                                            var statearr_5383_5452 = state_5347__$1;
                                            statearr_5383_5452[2] = null;
                                            statearr_5383_5452[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5348 === 41) {
                                              var inst_5306 = state_5347[25];
                                              var inst_5322 = state_5347[2];
                                              var inst_5323 = cljs.core.next.call(null, inst_5306);
                                              var inst_5287 = inst_5323;
                                              var inst_5288 = null;
                                              var inst_5289 = 0;
                                              var inst_5290 = 0;
                                              var state_5347__$1 = function() {
                                                var statearr_5384 = state_5347;
                                                statearr_5384[9] = inst_5290;
                                                statearr_5384[20] = inst_5287;
                                                statearr_5384[27] = inst_5322;
                                                statearr_5384[11] = inst_5288;
                                                statearr_5384[21] = inst_5289;
                                                return statearr_5384;
                                              }();
                                              var statearr_5385_5453 = state_5347__$1;
                                              statearr_5385_5453[2] = null;
                                              statearr_5385_5453[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_5348 === 43) {
                                                var state_5347__$1 = state_5347;
                                                var statearr_5386_5454 = state_5347__$1;
                                                statearr_5386_5454[2] = null;
                                                statearr_5386_5454[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5348 === 29) {
                                                  var inst_5331 = state_5347[2];
                                                  var state_5347__$1 = state_5347;
                                                  var statearr_5387_5455 = state_5347__$1;
                                                  statearr_5387_5455[2] = inst_5331;
                                                  statearr_5387_5455[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5348 === 44) {
                                                    var inst_5340 = state_5347[2];
                                                    var state_5347__$1 = function() {
                                                      var statearr_5388 = state_5347;
                                                      statearr_5388[28] = inst_5340;
                                                      return statearr_5388;
                                                    }();
                                                    var statearr_5389_5456 = state_5347__$1;
                                                    statearr_5389_5456[2] = null;
                                                    statearr_5389_5456[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5348 === 6) {
                                                      var inst_5279 = state_5347[29];
                                                      var inst_5278 = cljs.core.deref.call(null, cs);
                                                      var inst_5279__$1 = cljs.core.keys.call(null, inst_5278);
                                                      var inst_5280 = cljs.core.count.call(null, inst_5279__$1);
                                                      var inst_5281 = cljs.core.reset_BANG_.call(null, dctr, inst_5280);
                                                      var inst_5286 = cljs.core.seq.call(null, inst_5279__$1);
                                                      var inst_5287 = inst_5286;
                                                      var inst_5288 = null;
                                                      var inst_5289 = 0;
                                                      var inst_5290 = 0;
                                                      var state_5347__$1 = function() {
                                                        var statearr_5390 = state_5347;
                                                        statearr_5390[9] = inst_5290;
                                                        statearr_5390[20] = inst_5287;
                                                        statearr_5390[29] = inst_5279__$1;
                                                        statearr_5390[11] = inst_5288;
                                                        statearr_5390[30] = inst_5281;
                                                        statearr_5390[21] = inst_5289;
                                                        return statearr_5390;
                                                      }();
                                                      var statearr_5391_5457 = state_5347__$1;
                                                      statearr_5391_5457[2] = null;
                                                      statearr_5391_5457[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5348 === 28) {
                                                        var inst_5287 = state_5347[20];
                                                        var inst_5306 = state_5347[25];
                                                        var inst_5306__$1 = cljs.core.seq.call(null, inst_5287);
                                                        var state_5347__$1 = function() {
                                                          var statearr_5392 = state_5347;
                                                          statearr_5392[25] = inst_5306__$1;
                                                          return statearr_5392;
                                                        }();
                                                        if (inst_5306__$1) {
                                                          var statearr_5393_5458 = state_5347__$1;
                                                          statearr_5393_5458[1] = 33;
                                                        } else {
                                                          var statearr_5394_5459 = state_5347__$1;
                                                          statearr_5394_5459[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_5348 === 25) {
                                                          var inst_5290 = state_5347[9];
                                                          var inst_5289 = state_5347[21];
                                                          var inst_5292 = inst_5290 < inst_5289;
                                                          var inst_5293 = inst_5292;
                                                          var state_5347__$1 = state_5347;
                                                          if (cljs.core.truth_(inst_5293)) {
                                                            var statearr_5395_5460 = state_5347__$1;
                                                            statearr_5395_5460[1] = 27;
                                                          } else {
                                                            var statearr_5396_5461 = state_5347__$1;
                                                            statearr_5396_5461[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5348 === 34) {
                                                            var state_5347__$1 = state_5347;
                                                            var statearr_5397_5462 = state_5347__$1;
                                                            statearr_5397_5462[2] = null;
                                                            statearr_5397_5462[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5348 === 17) {
                                                              var state_5347__$1 = state_5347;
                                                              var statearr_5398_5463 = state_5347__$1;
                                                              statearr_5398_5463[2] = null;
                                                              statearr_5398_5463[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_5348 === 3) {
                                                                var inst_5345 = state_5347[2];
                                                                var state_5347__$1 = state_5347;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5347__$1, inst_5345);
                                                              } else {
                                                                if (state_val_5348 === 12) {
                                                                  var inst_5274 = state_5347[2];
                                                                  var state_5347__$1 = state_5347;
                                                                  var statearr_5399_5464 = state_5347__$1;
                                                                  statearr_5399_5464[2] = inst_5274;
                                                                  statearr_5399_5464[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_5348 === 2) {
                                                                    var state_5347__$1 = state_5347;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5347__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_5348 === 23) {
                                                                      var state_5347__$1 = state_5347;
                                                                      var statearr_5400_5465 = state_5347__$1;
                                                                      statearr_5400_5465[2] = null;
                                                                      statearr_5400_5465[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_5348 === 35) {
                                                                        var inst_5329 = state_5347[2];
                                                                        var state_5347__$1 = state_5347;
                                                                        var statearr_5401_5466 = state_5347__$1;
                                                                        statearr_5401_5466[2] = inst_5329;
                                                                        statearr_5401_5466[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_5348 === 19) {
                                                                          var inst_5246 = state_5347[7];
                                                                          var inst_5250 = cljs.core.chunk_first.call(null, inst_5246);
                                                                          var inst_5251 = cljs.core.chunk_rest.call(null, inst_5246);
                                                                          var inst_5252 = cljs.core.count.call(null, inst_5250);
                                                                          var inst_5224 = inst_5251;
                                                                          var inst_5225 = inst_5250;
                                                                          var inst_5226 = inst_5252;
                                                                          var inst_5227 = 0;
                                                                          var state_5347__$1 = function() {
                                                                            var statearr_5402 = state_5347;
                                                                            statearr_5402[13] = inst_5227;
                                                                            statearr_5402[14] = inst_5224;
                                                                            statearr_5402[15] = inst_5225;
                                                                            statearr_5402[16] = inst_5226;
                                                                            return statearr_5402;
                                                                          }();
                                                                          var statearr_5403_5467 = state_5347__$1;
                                                                          statearr_5403_5467[2] = null;
                                                                          statearr_5403_5467[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_5348 === 11) {
                                                                            var inst_5224 = state_5347[14];
                                                                            var inst_5246 = state_5347[7];
                                                                            var inst_5246__$1 = cljs.core.seq.call(null, inst_5224);
                                                                            var state_5347__$1 = function() {
                                                                              var statearr_5404 = state_5347;
                                                                              statearr_5404[7] = inst_5246__$1;
                                                                              return statearr_5404;
                                                                            }();
                                                                            if (inst_5246__$1) {
                                                                              var statearr_5405_5468 = state_5347__$1;
                                                                              statearr_5405_5468[1] = 16;
                                                                            } else {
                                                                              var statearr_5406_5469 = state_5347__$1;
                                                                              statearr_5406_5469[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_5348 === 9) {
                                                                              var inst_5276 = state_5347[2];
                                                                              var state_5347__$1 = state_5347;
                                                                              var statearr_5407_5470 = state_5347__$1;
                                                                              statearr_5407_5470[2] = inst_5276;
                                                                              statearr_5407_5470[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_5348 === 5) {
                                                                                var inst_5222 = cljs.core.deref.call(null, cs);
                                                                                var inst_5223 = cljs.core.seq.call(null, inst_5222);
                                                                                var inst_5224 = inst_5223;
                                                                                var inst_5225 = null;
                                                                                var inst_5226 = 0;
                                                                                var inst_5227 = 0;
                                                                                var state_5347__$1 = function() {
                                                                                  var statearr_5408 = state_5347;
                                                                                  statearr_5408[13] = inst_5227;
                                                                                  statearr_5408[14] = inst_5224;
                                                                                  statearr_5408[15] = inst_5225;
                                                                                  statearr_5408[16] = inst_5226;
                                                                                  return statearr_5408;
                                                                                }();
                                                                                var statearr_5409_5471 = state_5347__$1;
                                                                                statearr_5409_5471[2] = null;
                                                                                statearr_5409_5471[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_5348 === 14) {
                                                                                  var state_5347__$1 = state_5347;
                                                                                  var statearr_5410_5472 = state_5347__$1;
                                                                                  statearr_5410_5472[2] = null;
                                                                                  statearr_5410_5472[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_5348 === 45) {
                                                                                    var inst_5337 = state_5347[2];
                                                                                    var state_5347__$1 = state_5347;
                                                                                    var statearr_5411_5473 = state_5347__$1;
                                                                                    statearr_5411_5473[2] = inst_5337;
                                                                                    statearr_5411_5473[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_5348 === 26) {
                                                                                      var inst_5279 = state_5347[29];
                                                                                      var inst_5333 = state_5347[2];
                                                                                      var inst_5334 = cljs.core.seq.call(null, inst_5279);
                                                                                      var state_5347__$1 = function() {
                                                                                        var statearr_5412 = state_5347;
                                                                                        statearr_5412[31] = inst_5333;
                                                                                        return statearr_5412;
                                                                                      }();
                                                                                      if (inst_5334) {
                                                                                        var statearr_5413_5474 = state_5347__$1;
                                                                                        statearr_5413_5474[1] = 42;
                                                                                      } else {
                                                                                        var statearr_5414_5475 = state_5347__$1;
                                                                                        statearr_5414_5475[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_5348 === 16) {
                                                                                        var inst_5246 = state_5347[7];
                                                                                        var inst_5248 = cljs.core.chunked_seq_QMARK_.call(null, inst_5246);
                                                                                        var state_5347__$1 = state_5347;
                                                                                        if (inst_5248) {
                                                                                          var statearr_5415_5476 = state_5347__$1;
                                                                                          statearr_5415_5476[1] = 19;
                                                                                        } else {
                                                                                          var statearr_5416_5477 = state_5347__$1;
                                                                                          statearr_5416_5477[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_5348 === 38) {
                                                                                          var inst_5326 = state_5347[2];
                                                                                          var state_5347__$1 = state_5347;
                                                                                          var statearr_5417_5478 = state_5347__$1;
                                                                                          statearr_5417_5478[2] = inst_5326;
                                                                                          statearr_5417_5478[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_5348 === 30) {
                                                                                            var state_5347__$1 = state_5347;
                                                                                            var statearr_5418_5479 = state_5347__$1;
                                                                                            statearr_5418_5479[2] = null;
                                                                                            statearr_5418_5479[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_5348 === 10) {
                                                                                              var inst_5227 = state_5347[13];
                                                                                              var inst_5225 = state_5347[15];
                                                                                              var inst_5235 = cljs.core._nth.call(null, inst_5225, inst_5227);
                                                                                              var inst_5236 = cljs.core.nth.call(null, inst_5235, 0, null);
                                                                                              var inst_5237 = cljs.core.nth.call(null, inst_5235, 1, null);
                                                                                              var state_5347__$1 = function() {
                                                                                                var statearr_5419 = state_5347;
                                                                                                statearr_5419[26] = inst_5236;
                                                                                                return statearr_5419;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_5237)) {
                                                                                                var statearr_5420_5480 = state_5347__$1;
                                                                                                statearr_5420_5480[1] = 13;
                                                                                              } else {
                                                                                                var statearr_5421_5481 = state_5347__$1;
                                                                                                statearr_5421_5481[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_5348 === 18) {
                                                                                                var inst_5272 = state_5347[2];
                                                                                                var state_5347__$1 = state_5347;
                                                                                                var statearr_5422_5482 = state_5347__$1;
                                                                                                statearr_5422_5482[2] = inst_5272;
                                                                                                statearr_5422_5482[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_5348 === 42) {
                                                                                                  var state_5347__$1 = state_5347;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5347__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_5348 === 37) {
                                                                                                    var inst_5306 = state_5347[25];
                                                                                                    var inst_5215 = state_5347[12];
                                                                                                    var inst_5315 = state_5347[23];
                                                                                                    var inst_5315__$1 = cljs.core.first.call(null, inst_5306);
                                                                                                    var inst_5316 = cljs.core.async.put_BANG_.call(null, inst_5315__$1, inst_5215, done);
                                                                                                    var state_5347__$1 = function() {
                                                                                                      var statearr_5423 = state_5347;
                                                                                                      statearr_5423[23] = inst_5315__$1;
                                                                                                      return statearr_5423;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_5316)) {
                                                                                                      var statearr_5424_5483 = state_5347__$1;
                                                                                                      statearr_5424_5483[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_5425_5484 = state_5347__$1;
                                                                                                      statearr_5425_5484[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_5348 === 8) {
                                                                                                      var inst_5227 = state_5347[13];
                                                                                                      var inst_5226 = state_5347[16];
                                                                                                      var inst_5229 = inst_5227 < inst_5226;
                                                                                                      var inst_5230 = inst_5229;
                                                                                                      var state_5347__$1 = state_5347;
                                                                                                      if (cljs.core.truth_(inst_5230)) {
                                                                                                        var statearr_5426_5485 = state_5347__$1;
                                                                                                        statearr_5426_5485[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_5427_5486 = state_5347__$1;
                                                                                                        statearr_5427_5486[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___5432, cs, m, dchan, dctr, done);
        return function(switch__3805__auto__, c__3820__auto___5432, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__3806__auto__ = null;
            var cljs$core$async$mult_$_state_machine__3806__auto____0 = function() {
              var statearr_5428 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5428[0] = cljs$core$async$mult_$_state_machine__3806__auto__;
              statearr_5428[1] = 1;
              return statearr_5428;
            };
            var cljs$core$async$mult_$_state_machine__3806__auto____1 = function(state_5347) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5347);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5429) {
                    if (e5429 instanceof Object) {
                      var ex__3809__auto__ = e5429;
                      var statearr_5430_5487 = state_5347;
                      statearr_5430_5487[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5347);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5429;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5488 = state_5347;
                  state_5347 = G__5488;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__3806__auto__ = function(state_5347) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__3806__auto____1.call(this, state_5347);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$mult_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__3806__auto____0;
            cljs$core$async$mult_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__3806__auto____1;
            return cljs$core$async$mult_$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___5432, cs, m, dchan, dctr, done);
      }();
      var state__3822__auto__ = function() {
        var statearr_5431 = f__3821__auto__.call(null);
        statearr_5431[6] = c__3820__auto___5432;
        return statearr_5431;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___5432, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var G__5490 = arguments.length;
  switch(G__5490) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, ch);
    } else {
      var m__4212__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, ch);
    } else {
      var m__4212__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m);
    } else {
      var m__4212__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, state_map);
    } else {
      var m__4212__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4211__auto__ = m == null ? null : m;
    var m__4212__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, m, mode);
    } else {
      var m__4212__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___5502 = arguments.length;
  var i__4500__auto___5503 = 0;
  while (true) {
    if (i__4500__auto___5503 < len__4499__auto___5502) {
      args__4502__auto__.push(arguments[i__4500__auto___5503]);
      var G__5504 = i__4500__auto___5503 + 1;
      i__4500__auto___5503 = G__5504;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 3 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4503__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__5496) {
  var map__5497 = p__5496;
  var map__5497__$1 = (!(map__5497 == null) ? map__5497.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5497.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5497) : map__5497;
  var opts = map__5497__$1;
  var statearr_5499_5505 = state;
  statearr_5499_5505[1] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__5497, map__5497__$1, opts) {
    return function(val) {
      var statearr_5500_5506 = state;
      statearr_5500_5506[2] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__5497, map__5497__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_5501_5507 = state;
    statearr_5501_5507[2] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq5492) {
  var G__5493 = cljs.core.first.call(null, seq5492);
  var seq5492__$1 = cljs.core.next.call(null, seq5492);
  var G__5494 = cljs.core.first.call(null, seq5492__$1);
  var seq5492__$2 = cljs.core.next.call(null, seq5492__$1);
  var G__5495 = cljs.core.first.call(null, seq5492__$2);
  var seq5492__$3 = cljs.core.next.call(null, seq5492__$2);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__5493, G__5494, G__5495, seq5492__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async5508 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5508 = function(out, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, meta5509) {
        this.out = out;
        this.cs = cs;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.solo_mode = solo_mode;
        this.change = change;
        this.changed = changed;
        this.pick = pick;
        this.calc_state = calc_state;
        this.meta5509 = meta5509;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_5510, meta5509__$1) {
          var self__ = this;
          var _5510__$1 = this;
          return new cljs.core.async.t_cljs$core$async5508(self__.out, self__.cs, self__.solo_modes, self__.attrs, self__.solo_mode, self__.change, self__.changed, self__.pick, self__.calc_state, meta5509__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_5510) {
          var self__ = this;
          var _5510__$1 = this;
          return self__.meta5509;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["mode must be one of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)].join("")), "\n", "(solo-modes mode)"].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "change", "change", 477485025, null), new cljs.core.Symbol(null, 
          "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "meta5509", "meta5509", 316713261, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5508.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5508.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5508";
      cljs.core.async.t_cljs$core$async5508.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
          return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async5508");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async5508 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async5508(out__$1, cs__$1, solo_modes__$1, attrs__$1, solo_mode__$1, change__$1, changed__$1, pick__$1, calc_state__$1, meta5509) {
          return new cljs.core.async.t_cljs$core$async5508(out__$1, cs__$1, solo_modes__$1, attrs__$1, solo_mode__$1, change__$1, changed__$1, pick__$1, calc_state__$1, meta5509);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async5508(out, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__3820__auto___5672 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_5612) {
            var state_val_5613 = state_5612[1];
            if (state_val_5613 === 7) {
              var inst_5527 = state_5612[2];
              var state_5612__$1 = state_5612;
              var statearr_5614_5673 = state_5612__$1;
              statearr_5614_5673[2] = inst_5527;
              statearr_5614_5673[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5613 === 20) {
                var inst_5539 = state_5612[7];
                var state_5612__$1 = state_5612;
                var statearr_5615_5674 = state_5612__$1;
                statearr_5615_5674[2] = inst_5539;
                statearr_5615_5674[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5613 === 27) {
                  var state_5612__$1 = state_5612;
                  var statearr_5616_5675 = state_5612__$1;
                  statearr_5616_5675[2] = null;
                  statearr_5616_5675[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5613 === 1) {
                    var inst_5514 = state_5612[8];
                    var inst_5514__$1 = calc_state.call(null);
                    var inst_5516 = inst_5514__$1 == null;
                    var inst_5517 = cljs.core.not.call(null, inst_5516);
                    var state_5612__$1 = function() {
                      var statearr_5617 = state_5612;
                      statearr_5617[8] = inst_5514__$1;
                      return statearr_5617;
                    }();
                    if (inst_5517) {
                      var statearr_5618_5676 = state_5612__$1;
                      statearr_5618_5676[1] = 2;
                    } else {
                      var statearr_5619_5677 = state_5612__$1;
                      statearr_5619_5677[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5613 === 24) {
                      var inst_5563 = state_5612[9];
                      var inst_5586 = state_5612[10];
                      var inst_5572 = state_5612[11];
                      var inst_5586__$1 = inst_5563.call(null, inst_5572);
                      var state_5612__$1 = function() {
                        var statearr_5620 = state_5612;
                        statearr_5620[10] = inst_5586__$1;
                        return statearr_5620;
                      }();
                      if (cljs.core.truth_(inst_5586__$1)) {
                        var statearr_5621_5678 = state_5612__$1;
                        statearr_5621_5678[1] = 29;
                      } else {
                        var statearr_5622_5679 = state_5612__$1;
                        statearr_5622_5679[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5613 === 4) {
                        var inst_5530 = state_5612[2];
                        var state_5612__$1 = state_5612;
                        if (cljs.core.truth_(inst_5530)) {
                          var statearr_5623_5680 = state_5612__$1;
                          statearr_5623_5680[1] = 8;
                        } else {
                          var statearr_5624_5681 = state_5612__$1;
                          statearr_5624_5681[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5613 === 15) {
                          var inst_5557 = state_5612[2];
                          var state_5612__$1 = state_5612;
                          if (cljs.core.truth_(inst_5557)) {
                            var statearr_5625_5682 = state_5612__$1;
                            statearr_5625_5682[1] = 19;
                          } else {
                            var statearr_5626_5683 = state_5612__$1;
                            statearr_5626_5683[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5613 === 21) {
                            var inst_5562 = state_5612[12];
                            var inst_5562__$1 = state_5612[2];
                            var inst_5563 = cljs.core.get.call(null, inst_5562__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_5564 = cljs.core.get.call(null, inst_5562__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_5565 = cljs.core.get.call(null, inst_5562__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_5612__$1 = function() {
                              var statearr_5627 = state_5612;
                              statearr_5627[12] = inst_5562__$1;
                              statearr_5627[9] = inst_5563;
                              statearr_5627[13] = inst_5564;
                              return statearr_5627;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_5612__$1, 22, inst_5565);
                          } else {
                            if (state_val_5613 === 31) {
                              var inst_5594 = state_5612[2];
                              var state_5612__$1 = state_5612;
                              if (cljs.core.truth_(inst_5594)) {
                                var statearr_5628_5684 = state_5612__$1;
                                statearr_5628_5684[1] = 32;
                              } else {
                                var statearr_5629_5685 = state_5612__$1;
                                statearr_5629_5685[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5613 === 32) {
                                var inst_5571 = state_5612[14];
                                var state_5612__$1 = state_5612;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5612__$1, 35, out, inst_5571);
                              } else {
                                if (state_val_5613 === 33) {
                                  var inst_5562 = state_5612[12];
                                  var inst_5539 = inst_5562;
                                  var state_5612__$1 = function() {
                                    var statearr_5630 = state_5612;
                                    statearr_5630[7] = inst_5539;
                                    return statearr_5630;
                                  }();
                                  var statearr_5631_5686 = state_5612__$1;
                                  statearr_5631_5686[2] = null;
                                  statearr_5631_5686[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5613 === 13) {
                                    var inst_5539 = state_5612[7];
                                    var inst_5546 = inst_5539.cljs$lang$protocol_mask$partition0$;
                                    var inst_5547 = inst_5546 & 64;
                                    var inst_5548 = inst_5539.cljs$core$ISeq$;
                                    var inst_5549 = cljs.core.PROTOCOL_SENTINEL === inst_5548;
                                    var inst_5550 = inst_5547 || inst_5549;
                                    var state_5612__$1 = state_5612;
                                    if (cljs.core.truth_(inst_5550)) {
                                      var statearr_5632_5687 = state_5612__$1;
                                      statearr_5632_5687[1] = 16;
                                    } else {
                                      var statearr_5633_5688 = state_5612__$1;
                                      statearr_5633_5688[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5613 === 22) {
                                      var inst_5571 = state_5612[14];
                                      var inst_5572 = state_5612[11];
                                      var inst_5570 = state_5612[2];
                                      var inst_5571__$1 = cljs.core.nth.call(null, inst_5570, 0, null);
                                      var inst_5572__$1 = cljs.core.nth.call(null, inst_5570, 1, null);
                                      var inst_5573 = inst_5571__$1 == null;
                                      var inst_5574 = cljs.core._EQ_.call(null, inst_5572__$1, change);
                                      var inst_5575 = inst_5573 || inst_5574;
                                      var state_5612__$1 = function() {
                                        var statearr_5634 = state_5612;
                                        statearr_5634[14] = inst_5571__$1;
                                        statearr_5634[11] = inst_5572__$1;
                                        return statearr_5634;
                                      }();
                                      if (cljs.core.truth_(inst_5575)) {
                                        var statearr_5635_5689 = state_5612__$1;
                                        statearr_5635_5689[1] = 23;
                                      } else {
                                        var statearr_5636_5690 = state_5612__$1;
                                        statearr_5636_5690[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_5613 === 36) {
                                        var inst_5562 = state_5612[12];
                                        var inst_5539 = inst_5562;
                                        var state_5612__$1 = function() {
                                          var statearr_5637 = state_5612;
                                          statearr_5637[7] = inst_5539;
                                          return statearr_5637;
                                        }();
                                        var statearr_5638_5691 = state_5612__$1;
                                        statearr_5638_5691[2] = null;
                                        statearr_5638_5691[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5613 === 29) {
                                          var inst_5586 = state_5612[10];
                                          var state_5612__$1 = state_5612;
                                          var statearr_5639_5692 = state_5612__$1;
                                          statearr_5639_5692[2] = inst_5586;
                                          statearr_5639_5692[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5613 === 6) {
                                            var state_5612__$1 = state_5612;
                                            var statearr_5640_5693 = state_5612__$1;
                                            statearr_5640_5693[2] = false;
                                            statearr_5640_5693[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5613 === 28) {
                                              var inst_5582 = state_5612[2];
                                              var inst_5583 = calc_state.call(null);
                                              var inst_5539 = inst_5583;
                                              var state_5612__$1 = function() {
                                                var statearr_5641 = state_5612;
                                                statearr_5641[7] = inst_5539;
                                                statearr_5641[15] = inst_5582;
                                                return statearr_5641;
                                              }();
                                              var statearr_5642_5694 = state_5612__$1;
                                              statearr_5642_5694[2] = null;
                                              statearr_5642_5694[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_5613 === 25) {
                                                var inst_5608 = state_5612[2];
                                                var state_5612__$1 = state_5612;
                                                var statearr_5643_5695 = state_5612__$1;
                                                statearr_5643_5695[2] = inst_5608;
                                                statearr_5643_5695[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5613 === 34) {
                                                  var inst_5606 = state_5612[2];
                                                  var state_5612__$1 = state_5612;
                                                  var statearr_5644_5696 = state_5612__$1;
                                                  statearr_5644_5696[2] = inst_5606;
                                                  statearr_5644_5696[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5613 === 17) {
                                                    var state_5612__$1 = state_5612;
                                                    var statearr_5645_5697 = state_5612__$1;
                                                    statearr_5645_5697[2] = false;
                                                    statearr_5645_5697[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5613 === 3) {
                                                      var state_5612__$1 = state_5612;
                                                      var statearr_5646_5698 = state_5612__$1;
                                                      statearr_5646_5698[2] = false;
                                                      statearr_5646_5698[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5613 === 12) {
                                                        var inst_5610 = state_5612[2];
                                                        var state_5612__$1 = state_5612;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5612__$1, inst_5610);
                                                      } else {
                                                        if (state_val_5613 === 2) {
                                                          var inst_5514 = state_5612[8];
                                                          var inst_5519 = inst_5514.cljs$lang$protocol_mask$partition0$;
                                                          var inst_5520 = inst_5519 & 64;
                                                          var inst_5521 = inst_5514.cljs$core$ISeq$;
                                                          var inst_5522 = cljs.core.PROTOCOL_SENTINEL === inst_5521;
                                                          var inst_5523 = inst_5520 || inst_5522;
                                                          var state_5612__$1 = state_5612;
                                                          if (cljs.core.truth_(inst_5523)) {
                                                            var statearr_5647_5699 = state_5612__$1;
                                                            statearr_5647_5699[1] = 5;
                                                          } else {
                                                            var statearr_5648_5700 = state_5612__$1;
                                                            statearr_5648_5700[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5613 === 23) {
                                                            var inst_5571 = state_5612[14];
                                                            var inst_5577 = inst_5571 == null;
                                                            var state_5612__$1 = state_5612;
                                                            if (cljs.core.truth_(inst_5577)) {
                                                              var statearr_5649_5701 = state_5612__$1;
                                                              statearr_5649_5701[1] = 26;
                                                            } else {
                                                              var statearr_5650_5702 = state_5612__$1;
                                                              statearr_5650_5702[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5613 === 35) {
                                                              var inst_5597 = state_5612[2];
                                                              var state_5612__$1 = state_5612;
                                                              if (cljs.core.truth_(inst_5597)) {
                                                                var statearr_5651_5703 = state_5612__$1;
                                                                statearr_5651_5703[1] = 36;
                                                              } else {
                                                                var statearr_5652_5704 = state_5612__$1;
                                                                statearr_5652_5704[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_5613 === 19) {
                                                                var inst_5539 = state_5612[7];
                                                                var inst_5559 = cljs.core.apply.call(null, cljs.core.hash_map, inst_5539);
                                                                var state_5612__$1 = state_5612;
                                                                var statearr_5653_5705 = state_5612__$1;
                                                                statearr_5653_5705[2] = inst_5559;
                                                                statearr_5653_5705[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_5613 === 11) {
                                                                  var inst_5539 = state_5612[7];
                                                                  var inst_5543 = inst_5539 == null;
                                                                  var inst_5544 = cljs.core.not.call(null, inst_5543);
                                                                  var state_5612__$1 = state_5612;
                                                                  if (inst_5544) {
                                                                    var statearr_5654_5706 = state_5612__$1;
                                                                    statearr_5654_5706[1] = 13;
                                                                  } else {
                                                                    var statearr_5655_5707 = state_5612__$1;
                                                                    statearr_5655_5707[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_5613 === 9) {
                                                                    var inst_5514 = state_5612[8];
                                                                    var state_5612__$1 = state_5612;
                                                                    var statearr_5656_5708 = state_5612__$1;
                                                                    statearr_5656_5708[2] = inst_5514;
                                                                    statearr_5656_5708[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_5613 === 5) {
                                                                      var state_5612__$1 = state_5612;
                                                                      var statearr_5657_5709 = state_5612__$1;
                                                                      statearr_5657_5709[2] = true;
                                                                      statearr_5657_5709[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_5613 === 14) {
                                                                        var state_5612__$1 = state_5612;
                                                                        var statearr_5658_5710 = state_5612__$1;
                                                                        statearr_5658_5710[2] = false;
                                                                        statearr_5658_5710[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_5613 === 26) {
                                                                          var inst_5572 = state_5612[11];
                                                                          var inst_5579 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_5572);
                                                                          var state_5612__$1 = state_5612;
                                                                          var statearr_5659_5711 = state_5612__$1;
                                                                          statearr_5659_5711[2] = inst_5579;
                                                                          statearr_5659_5711[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_5613 === 16) {
                                                                            var state_5612__$1 = state_5612;
                                                                            var statearr_5660_5712 = state_5612__$1;
                                                                            statearr_5660_5712[2] = true;
                                                                            statearr_5660_5712[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_5613 === 38) {
                                                                              var inst_5602 = state_5612[2];
                                                                              var state_5612__$1 = state_5612;
                                                                              var statearr_5661_5713 = state_5612__$1;
                                                                              statearr_5661_5713[2] = inst_5602;
                                                                              statearr_5661_5713[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_5613 === 30) {
                                                                                var inst_5563 = state_5612[9];
                                                                                var inst_5564 = state_5612[13];
                                                                                var inst_5572 = state_5612[11];
                                                                                var inst_5589 = cljs.core.empty_QMARK_.call(null, inst_5563);
                                                                                var inst_5590 = inst_5564.call(null, inst_5572);
                                                                                var inst_5591 = cljs.core.not.call(null, inst_5590);
                                                                                var inst_5592 = inst_5589 && inst_5591;
                                                                                var state_5612__$1 = state_5612;
                                                                                var statearr_5662_5714 = state_5612__$1;
                                                                                statearr_5662_5714[2] = inst_5592;
                                                                                statearr_5662_5714[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_5613 === 10) {
                                                                                  var inst_5514 = state_5612[8];
                                                                                  var inst_5535 = state_5612[2];
                                                                                  var inst_5536 = cljs.core.get.call(null, inst_5535, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_5537 = cljs.core.get.call(null, inst_5535, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_5538 = cljs.core.get.call(null, inst_5535, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_5539 = inst_5514;
                                                                                  var state_5612__$1 = function() {
                                                                                    var statearr_5663 = state_5612;
                                                                                    statearr_5663[7] = inst_5539;
                                                                                    statearr_5663[16] = inst_5536;
                                                                                    statearr_5663[17] = inst_5537;
                                                                                    statearr_5663[18] = inst_5538;
                                                                                    return statearr_5663;
                                                                                  }();
                                                                                  var statearr_5664_5715 = state_5612__$1;
                                                                                  statearr_5664_5715[2] = null;
                                                                                  statearr_5664_5715[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_5613 === 18) {
                                                                                    var inst_5554 = state_5612[2];
                                                                                    var state_5612__$1 = state_5612;
                                                                                    var statearr_5665_5716 = state_5612__$1;
                                                                                    statearr_5665_5716[2] = inst_5554;
                                                                                    statearr_5665_5716[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_5613 === 37) {
                                                                                      var state_5612__$1 = state_5612;
                                                                                      var statearr_5666_5717 = state_5612__$1;
                                                                                      statearr_5666_5717[2] = null;
                                                                                      statearr_5666_5717[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_5613 === 8) {
                                                                                        var inst_5514 = state_5612[8];
                                                                                        var inst_5532 = cljs.core.apply.call(null, cljs.core.hash_map, inst_5514);
                                                                                        var state_5612__$1 = state_5612;
                                                                                        var statearr_5667_5718 = state_5612__$1;
                                                                                        statearr_5667_5718[2] = inst_5532;
                                                                                        statearr_5667_5718[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__3805__auto__, c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__3806__auto__ = null;
            var cljs$core$async$mix_$_state_machine__3806__auto____0 = function() {
              var statearr_5668 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5668[0] = cljs$core$async$mix_$_state_machine__3806__auto__;
              statearr_5668[1] = 1;
              return statearr_5668;
            };
            var cljs$core$async$mix_$_state_machine__3806__auto____1 = function(state_5612) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5612);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5669) {
                    if (e5669 instanceof Object) {
                      var ex__3809__auto__ = e5669;
                      var statearr_5670_5719 = state_5612;
                      statearr_5670_5719[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5612);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5669;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5720 = state_5612;
                  state_5612 = G__5720;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__3806__auto__ = function(state_5612) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__3806__auto____1.call(this, state_5612);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$mix_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__3806__auto____0;
            cljs$core$async$mix_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__3806__auto____1;
            return cljs$core$async$mix_$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__3822__auto__ = function() {
        var statearr_5671 = f__3821__auto__.call(null);
        statearr_5671[6] = c__3820__auto___5672;
        return statearr_5671;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___5672, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4211__auto__ = p == null ? null : p;
    var m__4212__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__4212__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4211__auto__ = p == null ? null : p;
    var m__4212__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, p, v, ch);
    } else {
      var m__4212__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var G__5722 = arguments.length;
  switch(G__5722) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__4211__auto__ = p == null ? null : p;
    var m__4212__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, p);
    } else {
      var m__4212__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__4211__auto__ = p == null ? null : p;
    var m__4212__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, p, v);
    } else {
      var m__4212__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var G__5726 = arguments.length;
  switch(G__5726) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__3922__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__3922__auto__)) {
        return or__3922__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3922__auto__, mults) {
          return function(p1__5724_SHARP_) {
            if (cljs.core.truth_(p1__5724_SHARP_.call(null, topic))) {
              return p1__5724_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__5724_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__3922__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async5727 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5727 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta5728) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta5728 = meta5728;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_5729, meta5728__$1) {
          var self__ = this;
          var _5729__$1 = this;
          return new cljs.core.async.t_cljs$core$async5727(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta5728__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_5729) {
          var self__ = this;
          var _5729__$1 = this;
          return self__.meta5728;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Pub$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta5728", "meta5728", 1422014521, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5727.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5727.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5727";
      cljs.core.async.t_cljs$core$async5727.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
          return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async5727");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async5727 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async5727(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta5728) {
          return new cljs.core.async.t_cljs$core$async5727(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta5728);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async5727(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__3820__auto___5847 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___5847, mults, ensure_mult, p) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___5847, mults, ensure_mult, p) {
          return function(state_5801) {
            var state_val_5802 = state_5801[1];
            if (state_val_5802 === 7) {
              var inst_5797 = state_5801[2];
              var state_5801__$1 = state_5801;
              var statearr_5803_5848 = state_5801__$1;
              statearr_5803_5848[2] = inst_5797;
              statearr_5803_5848[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5802 === 20) {
                var state_5801__$1 = state_5801;
                var statearr_5804_5849 = state_5801__$1;
                statearr_5804_5849[2] = null;
                statearr_5804_5849[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5802 === 1) {
                  var state_5801__$1 = state_5801;
                  var statearr_5805_5850 = state_5801__$1;
                  statearr_5805_5850[2] = null;
                  statearr_5805_5850[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5802 === 24) {
                    var inst_5780 = state_5801[7];
                    var inst_5789 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_5780);
                    var state_5801__$1 = state_5801;
                    var statearr_5806_5851 = state_5801__$1;
                    statearr_5806_5851[2] = inst_5789;
                    statearr_5806_5851[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5802 === 4) {
                      var inst_5732 = state_5801[8];
                      var inst_5732__$1 = state_5801[2];
                      var inst_5733 = inst_5732__$1 == null;
                      var state_5801__$1 = function() {
                        var statearr_5807 = state_5801;
                        statearr_5807[8] = inst_5732__$1;
                        return statearr_5807;
                      }();
                      if (cljs.core.truth_(inst_5733)) {
                        var statearr_5808_5852 = state_5801__$1;
                        statearr_5808_5852[1] = 5;
                      } else {
                        var statearr_5809_5853 = state_5801__$1;
                        statearr_5809_5853[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5802 === 15) {
                        var inst_5774 = state_5801[2];
                        var state_5801__$1 = state_5801;
                        var statearr_5810_5854 = state_5801__$1;
                        statearr_5810_5854[2] = inst_5774;
                        statearr_5810_5854[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5802 === 21) {
                          var inst_5794 = state_5801[2];
                          var state_5801__$1 = function() {
                            var statearr_5811 = state_5801;
                            statearr_5811[9] = inst_5794;
                            return statearr_5811;
                          }();
                          var statearr_5812_5855 = state_5801__$1;
                          statearr_5812_5855[2] = null;
                          statearr_5812_5855[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5802 === 13) {
                            var inst_5756 = state_5801[10];
                            var inst_5758 = cljs.core.chunked_seq_QMARK_.call(null, inst_5756);
                            var state_5801__$1 = state_5801;
                            if (inst_5758) {
                              var statearr_5813_5856 = state_5801__$1;
                              statearr_5813_5856[1] = 16;
                            } else {
                              var statearr_5814_5857 = state_5801__$1;
                              statearr_5814_5857[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5802 === 22) {
                              var inst_5786 = state_5801[2];
                              var state_5801__$1 = state_5801;
                              if (cljs.core.truth_(inst_5786)) {
                                var statearr_5815_5858 = state_5801__$1;
                                statearr_5815_5858[1] = 23;
                              } else {
                                var statearr_5816_5859 = state_5801__$1;
                                statearr_5816_5859[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5802 === 6) {
                                var inst_5780 = state_5801[7];
                                var inst_5732 = state_5801[8];
                                var inst_5782 = state_5801[11];
                                var inst_5780__$1 = topic_fn.call(null, inst_5732);
                                var inst_5781 = cljs.core.deref.call(null, mults);
                                var inst_5782__$1 = cljs.core.get.call(null, inst_5781, inst_5780__$1);
                                var state_5801__$1 = function() {
                                  var statearr_5817 = state_5801;
                                  statearr_5817[7] = inst_5780__$1;
                                  statearr_5817[11] = inst_5782__$1;
                                  return statearr_5817;
                                }();
                                if (cljs.core.truth_(inst_5782__$1)) {
                                  var statearr_5818_5860 = state_5801__$1;
                                  statearr_5818_5860[1] = 19;
                                } else {
                                  var statearr_5819_5861 = state_5801__$1;
                                  statearr_5819_5861[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5802 === 25) {
                                  var inst_5791 = state_5801[2];
                                  var state_5801__$1 = state_5801;
                                  var statearr_5820_5862 = state_5801__$1;
                                  statearr_5820_5862[2] = inst_5791;
                                  statearr_5820_5862[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5802 === 17) {
                                    var inst_5756 = state_5801[10];
                                    var inst_5765 = cljs.core.first.call(null, inst_5756);
                                    var inst_5766 = cljs.core.async.muxch_STAR_.call(null, inst_5765);
                                    var inst_5767 = cljs.core.async.close_BANG_.call(null, inst_5766);
                                    var inst_5768 = cljs.core.next.call(null, inst_5756);
                                    var inst_5742 = inst_5768;
                                    var inst_5743 = null;
                                    var inst_5744 = 0;
                                    var inst_5745 = 0;
                                    var state_5801__$1 = function() {
                                      var statearr_5821 = state_5801;
                                      statearr_5821[12] = inst_5744;
                                      statearr_5821[13] = inst_5742;
                                      statearr_5821[14] = inst_5767;
                                      statearr_5821[15] = inst_5743;
                                      statearr_5821[16] = inst_5745;
                                      return statearr_5821;
                                    }();
                                    var statearr_5822_5863 = state_5801__$1;
                                    statearr_5822_5863[2] = null;
                                    statearr_5822_5863[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5802 === 3) {
                                      var inst_5799 = state_5801[2];
                                      var state_5801__$1 = state_5801;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5801__$1, inst_5799);
                                    } else {
                                      if (state_val_5802 === 12) {
                                        var inst_5776 = state_5801[2];
                                        var state_5801__$1 = state_5801;
                                        var statearr_5823_5864 = state_5801__$1;
                                        statearr_5823_5864[2] = inst_5776;
                                        statearr_5823_5864[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5802 === 2) {
                                          var state_5801__$1 = state_5801;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5801__$1, 4, ch);
                                        } else {
                                          if (state_val_5802 === 23) {
                                            var state_5801__$1 = state_5801;
                                            var statearr_5824_5865 = state_5801__$1;
                                            statearr_5824_5865[2] = null;
                                            statearr_5824_5865[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5802 === 19) {
                                              var inst_5732 = state_5801[8];
                                              var inst_5782 = state_5801[11];
                                              var inst_5784 = cljs.core.async.muxch_STAR_.call(null, inst_5782);
                                              var state_5801__$1 = state_5801;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5801__$1, 22, inst_5784, inst_5732);
                                            } else {
                                              if (state_val_5802 === 11) {
                                                var inst_5742 = state_5801[13];
                                                var inst_5756 = state_5801[10];
                                                var inst_5756__$1 = cljs.core.seq.call(null, inst_5742);
                                                var state_5801__$1 = function() {
                                                  var statearr_5825 = state_5801;
                                                  statearr_5825[10] = inst_5756__$1;
                                                  return statearr_5825;
                                                }();
                                                if (inst_5756__$1) {
                                                  var statearr_5826_5866 = state_5801__$1;
                                                  statearr_5826_5866[1] = 13;
                                                } else {
                                                  var statearr_5827_5867 = state_5801__$1;
                                                  statearr_5827_5867[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5802 === 9) {
                                                  var inst_5778 = state_5801[2];
                                                  var state_5801__$1 = state_5801;
                                                  var statearr_5828_5868 = state_5801__$1;
                                                  statearr_5828_5868[2] = inst_5778;
                                                  statearr_5828_5868[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5802 === 5) {
                                                    var inst_5739 = cljs.core.deref.call(null, mults);
                                                    var inst_5740 = cljs.core.vals.call(null, inst_5739);
                                                    var inst_5741 = cljs.core.seq.call(null, inst_5740);
                                                    var inst_5742 = inst_5741;
                                                    var inst_5743 = null;
                                                    var inst_5744 = 0;
                                                    var inst_5745 = 0;
                                                    var state_5801__$1 = function() {
                                                      var statearr_5829 = state_5801;
                                                      statearr_5829[12] = inst_5744;
                                                      statearr_5829[13] = inst_5742;
                                                      statearr_5829[15] = inst_5743;
                                                      statearr_5829[16] = inst_5745;
                                                      return statearr_5829;
                                                    }();
                                                    var statearr_5830_5869 = state_5801__$1;
                                                    statearr_5830_5869[2] = null;
                                                    statearr_5830_5869[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5802 === 14) {
                                                      var state_5801__$1 = state_5801;
                                                      var statearr_5834_5870 = state_5801__$1;
                                                      statearr_5834_5870[2] = null;
                                                      statearr_5834_5870[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5802 === 16) {
                                                        var inst_5756 = state_5801[10];
                                                        var inst_5760 = cljs.core.chunk_first.call(null, inst_5756);
                                                        var inst_5761 = cljs.core.chunk_rest.call(null, inst_5756);
                                                        var inst_5762 = cljs.core.count.call(null, inst_5760);
                                                        var inst_5742 = inst_5761;
                                                        var inst_5743 = inst_5760;
                                                        var inst_5744 = inst_5762;
                                                        var inst_5745 = 0;
                                                        var state_5801__$1 = function() {
                                                          var statearr_5835 = state_5801;
                                                          statearr_5835[12] = inst_5744;
                                                          statearr_5835[13] = inst_5742;
                                                          statearr_5835[15] = inst_5743;
                                                          statearr_5835[16] = inst_5745;
                                                          return statearr_5835;
                                                        }();
                                                        var statearr_5836_5871 = state_5801__$1;
                                                        statearr_5836_5871[2] = null;
                                                        statearr_5836_5871[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_5802 === 10) {
                                                          var inst_5744 = state_5801[12];
                                                          var inst_5742 = state_5801[13];
                                                          var inst_5743 = state_5801[15];
                                                          var inst_5745 = state_5801[16];
                                                          var inst_5750 = cljs.core._nth.call(null, inst_5743, inst_5745);
                                                          var inst_5751 = cljs.core.async.muxch_STAR_.call(null, inst_5750);
                                                          var inst_5752 = cljs.core.async.close_BANG_.call(null, inst_5751);
                                                          var inst_5753 = inst_5745 + 1;
                                                          var tmp5831 = inst_5744;
                                                          var tmp5832 = inst_5742;
                                                          var tmp5833 = inst_5743;
                                                          var inst_5742__$1 = tmp5832;
                                                          var inst_5743__$1 = tmp5833;
                                                          var inst_5744__$1 = tmp5831;
                                                          var inst_5745__$1 = inst_5753;
                                                          var state_5801__$1 = function() {
                                                            var statearr_5837 = state_5801;
                                                            statearr_5837[12] = inst_5744__$1;
                                                            statearr_5837[13] = inst_5742__$1;
                                                            statearr_5837[17] = inst_5752;
                                                            statearr_5837[15] = inst_5743__$1;
                                                            statearr_5837[16] = inst_5745__$1;
                                                            return statearr_5837;
                                                          }();
                                                          var statearr_5838_5872 = state_5801__$1;
                                                          statearr_5838_5872[2] = null;
                                                          statearr_5838_5872[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5802 === 18) {
                                                            var inst_5771 = state_5801[2];
                                                            var state_5801__$1 = state_5801;
                                                            var statearr_5839_5873 = state_5801__$1;
                                                            statearr_5839_5873[2] = inst_5771;
                                                            statearr_5839_5873[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5802 === 8) {
                                                              var inst_5744 = state_5801[12];
                                                              var inst_5745 = state_5801[16];
                                                              var inst_5747 = inst_5745 < inst_5744;
                                                              var inst_5748 = inst_5747;
                                                              var state_5801__$1 = state_5801;
                                                              if (cljs.core.truth_(inst_5748)) {
                                                                var statearr_5840_5874 = state_5801__$1;
                                                                statearr_5840_5874[1] = 10;
                                                              } else {
                                                                var statearr_5841_5875 = state_5801__$1;
                                                                statearr_5841_5875[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___5847, mults, ensure_mult, p);
        return function(switch__3805__auto__, c__3820__auto___5847, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_5842 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5842[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_5842[1] = 1;
              return statearr_5842;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_5801) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5801);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5843) {
                    if (e5843 instanceof Object) {
                      var ex__3809__auto__ = e5843;
                      var statearr_5844_5876 = state_5801;
                      statearr_5844_5876[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5801);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5843;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5877 = state_5801;
                  state_5801 = G__5877;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_5801) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_5801);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___5847, mults, ensure_mult, p);
      }();
      var state__3822__auto__ = function() {
        var statearr_5845 = f__3821__auto__.call(null);
        statearr_5845[6] = c__3820__auto___5847;
        return statearr_5845;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___5847, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var G__5879 = arguments.length;
  switch(G__5879) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var G__5882 = arguments.length;
  switch(G__5882) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var G__5885 = arguments.length;
  switch(G__5885) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__3820__auto___5952 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_5924) {
            var state_val_5925 = state_5924[1];
            if (state_val_5925 === 7) {
              var state_5924__$1 = state_5924;
              var statearr_5926_5953 = state_5924__$1;
              statearr_5926_5953[2] = null;
              statearr_5926_5953[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5925 === 1) {
                var state_5924__$1 = state_5924;
                var statearr_5927_5954 = state_5924__$1;
                statearr_5927_5954[2] = null;
                statearr_5927_5954[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5925 === 4) {
                  var inst_5888 = state_5924[7];
                  var inst_5890 = inst_5888 < cnt;
                  var state_5924__$1 = state_5924;
                  if (cljs.core.truth_(inst_5890)) {
                    var statearr_5928_5955 = state_5924__$1;
                    statearr_5928_5955[1] = 6;
                  } else {
                    var statearr_5929_5956 = state_5924__$1;
                    statearr_5929_5956[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5925 === 15) {
                    var inst_5920 = state_5924[2];
                    var state_5924__$1 = state_5924;
                    var statearr_5930_5957 = state_5924__$1;
                    statearr_5930_5957[2] = inst_5920;
                    statearr_5930_5957[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5925 === 13) {
                      var inst_5913 = cljs.core.async.close_BANG_.call(null, out);
                      var state_5924__$1 = state_5924;
                      var statearr_5931_5958 = state_5924__$1;
                      statearr_5931_5958[2] = inst_5913;
                      statearr_5931_5958[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5925 === 6) {
                        var state_5924__$1 = state_5924;
                        var statearr_5932_5959 = state_5924__$1;
                        statearr_5932_5959[2] = null;
                        statearr_5932_5959[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5925 === 3) {
                          var inst_5922 = state_5924[2];
                          var state_5924__$1 = state_5924;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5924__$1, inst_5922);
                        } else {
                          if (state_val_5925 === 12) {
                            var inst_5910 = state_5924[8];
                            var inst_5910__$1 = state_5924[2];
                            var inst_5911 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_5910__$1);
                            var state_5924__$1 = function() {
                              var statearr_5933 = state_5924;
                              statearr_5933[8] = inst_5910__$1;
                              return statearr_5933;
                            }();
                            if (cljs.core.truth_(inst_5911)) {
                              var statearr_5934_5960 = state_5924__$1;
                              statearr_5934_5960[1] = 13;
                            } else {
                              var statearr_5935_5961 = state_5924__$1;
                              statearr_5935_5961[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5925 === 2) {
                              var inst_5887 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_5888 = 0;
                              var state_5924__$1 = function() {
                                var statearr_5936 = state_5924;
                                statearr_5936[9] = inst_5887;
                                statearr_5936[7] = inst_5888;
                                return statearr_5936;
                              }();
                              var statearr_5937_5962 = state_5924__$1;
                              statearr_5937_5962[2] = null;
                              statearr_5937_5962[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5925 === 11) {
                                var inst_5888 = state_5924[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_5924, 10, Object, null, 9);
                                var inst_5897 = chs__$1.call(null, inst_5888);
                                var inst_5898 = done.call(null, inst_5888);
                                var inst_5899 = cljs.core.async.take_BANG_.call(null, inst_5897, inst_5898);
                                var state_5924__$1 = state_5924;
                                var statearr_5938_5963 = state_5924__$1;
                                statearr_5938_5963[2] = inst_5899;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5924__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5925 === 9) {
                                  var inst_5888 = state_5924[7];
                                  var inst_5901 = state_5924[2];
                                  var inst_5902 = inst_5888 + 1;
                                  var inst_5888__$1 = inst_5902;
                                  var state_5924__$1 = function() {
                                    var statearr_5939 = state_5924;
                                    statearr_5939[7] = inst_5888__$1;
                                    statearr_5939[10] = inst_5901;
                                    return statearr_5939;
                                  }();
                                  var statearr_5940_5964 = state_5924__$1;
                                  statearr_5940_5964[2] = null;
                                  statearr_5940_5964[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5925 === 5) {
                                    var inst_5908 = state_5924[2];
                                    var state_5924__$1 = function() {
                                      var statearr_5941 = state_5924;
                                      statearr_5941[11] = inst_5908;
                                      return statearr_5941;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5924__$1, 12, dchan);
                                  } else {
                                    if (state_val_5925 === 14) {
                                      var inst_5910 = state_5924[8];
                                      var inst_5915 = cljs.core.apply.call(null, f, inst_5910);
                                      var state_5924__$1 = state_5924;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5924__$1, 16, out, inst_5915);
                                    } else {
                                      if (state_val_5925 === 16) {
                                        var inst_5917 = state_5924[2];
                                        var state_5924__$1 = function() {
                                          var statearr_5942 = state_5924;
                                          statearr_5942[12] = inst_5917;
                                          return statearr_5942;
                                        }();
                                        var statearr_5943_5965 = state_5924__$1;
                                        statearr_5943_5965[2] = null;
                                        statearr_5943_5965[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5925 === 10) {
                                          var inst_5892 = state_5924[2];
                                          var inst_5893 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_5924__$1 = function() {
                                            var statearr_5944 = state_5924;
                                            statearr_5944[13] = inst_5892;
                                            return statearr_5944;
                                          }();
                                          var statearr_5945_5966 = state_5924__$1;
                                          statearr_5945_5966[2] = inst_5893;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5924__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5925 === 8) {
                                            var inst_5906 = state_5924[2];
                                            var state_5924__$1 = state_5924;
                                            var statearr_5946_5967 = state_5924__$1;
                                            statearr_5946_5967[2] = inst_5906;
                                            statearr_5946_5967[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__3805__auto__, c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_5947 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5947[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_5947[1] = 1;
              return statearr_5947;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_5924) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_5924);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e5948) {
                    if (e5948 instanceof Object) {
                      var ex__3809__auto__ = e5948;
                      var statearr_5949_5968 = state_5924;
                      statearr_5949_5968[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5924);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5948;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5969 = state_5924;
                  state_5924 = G__5969;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_5924) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_5924);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__3822__auto__ = function() {
        var statearr_5950 = f__3821__auto__.call(null);
        statearr_5950[6] = c__3820__auto___5952;
        return statearr_5950;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___5952, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var G__5972 = arguments.length;
  switch(G__5972) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6026 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6026, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6026, out) {
          return function(state_6004) {
            var state_val_6005 = state_6004[1];
            if (state_val_6005 === 7) {
              var inst_5983 = state_6004[7];
              var inst_5984 = state_6004[8];
              var inst_5983__$1 = state_6004[2];
              var inst_5984__$1 = cljs.core.nth.call(null, inst_5983__$1, 0, null);
              var inst_5985 = cljs.core.nth.call(null, inst_5983__$1, 1, null);
              var inst_5986 = inst_5984__$1 == null;
              var state_6004__$1 = function() {
                var statearr_6006 = state_6004;
                statearr_6006[7] = inst_5983__$1;
                statearr_6006[8] = inst_5984__$1;
                statearr_6006[9] = inst_5985;
                return statearr_6006;
              }();
              if (cljs.core.truth_(inst_5986)) {
                var statearr_6007_6027 = state_6004__$1;
                statearr_6007_6027[1] = 8;
              } else {
                var statearr_6008_6028 = state_6004__$1;
                statearr_6008_6028[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6005 === 1) {
                var inst_5973 = cljs.core.vec.call(null, chs);
                var inst_5974 = inst_5973;
                var state_6004__$1 = function() {
                  var statearr_6009 = state_6004;
                  statearr_6009[10] = inst_5974;
                  return statearr_6009;
                }();
                var statearr_6010_6029 = state_6004__$1;
                statearr_6010_6029[2] = null;
                statearr_6010_6029[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6005 === 4) {
                  var inst_5974 = state_6004[10];
                  var state_6004__$1 = state_6004;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_6004__$1, 7, inst_5974);
                } else {
                  if (state_val_6005 === 6) {
                    var inst_6000 = state_6004[2];
                    var state_6004__$1 = state_6004;
                    var statearr_6011_6030 = state_6004__$1;
                    statearr_6011_6030[2] = inst_6000;
                    statearr_6011_6030[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6005 === 3) {
                      var inst_6002 = state_6004[2];
                      var state_6004__$1 = state_6004;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6004__$1, inst_6002);
                    } else {
                      if (state_val_6005 === 2) {
                        var inst_5974 = state_6004[10];
                        var inst_5976 = cljs.core.count.call(null, inst_5974);
                        var inst_5977 = inst_5976 > 0;
                        var state_6004__$1 = state_6004;
                        if (cljs.core.truth_(inst_5977)) {
                          var statearr_6013_6031 = state_6004__$1;
                          statearr_6013_6031[1] = 4;
                        } else {
                          var statearr_6014_6032 = state_6004__$1;
                          statearr_6014_6032[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6005 === 11) {
                          var inst_5974 = state_6004[10];
                          var inst_5993 = state_6004[2];
                          var tmp6012 = inst_5974;
                          var inst_5974__$1 = tmp6012;
                          var state_6004__$1 = function() {
                            var statearr_6015 = state_6004;
                            statearr_6015[11] = inst_5993;
                            statearr_6015[10] = inst_5974__$1;
                            return statearr_6015;
                          }();
                          var statearr_6016_6033 = state_6004__$1;
                          statearr_6016_6033[2] = null;
                          statearr_6016_6033[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6005 === 9) {
                            var inst_5984 = state_6004[8];
                            var state_6004__$1 = state_6004;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6004__$1, 11, out, inst_5984);
                          } else {
                            if (state_val_6005 === 5) {
                              var inst_5998 = cljs.core.async.close_BANG_.call(null, out);
                              var state_6004__$1 = state_6004;
                              var statearr_6017_6034 = state_6004__$1;
                              statearr_6017_6034[2] = inst_5998;
                              statearr_6017_6034[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6005 === 10) {
                                var inst_5996 = state_6004[2];
                                var state_6004__$1 = state_6004;
                                var statearr_6018_6035 = state_6004__$1;
                                statearr_6018_6035[2] = inst_5996;
                                statearr_6018_6035[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6005 === 8) {
                                  var inst_5983 = state_6004[7];
                                  var inst_5984 = state_6004[8];
                                  var inst_5985 = state_6004[9];
                                  var inst_5974 = state_6004[10];
                                  var inst_5988 = function() {
                                    var cs = inst_5974;
                                    var vec__5979 = inst_5983;
                                    var v = inst_5984;
                                    var c = inst_5985;
                                    return function(cs, vec__5979, v, c, inst_5983, inst_5984, inst_5985, inst_5974, state_val_6005, c__3820__auto___6026, out) {
                                      return function(p1__5970_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__5970_SHARP_);
                                      };
                                    }(cs, vec__5979, v, c, inst_5983, inst_5984, inst_5985, inst_5974, state_val_6005, c__3820__auto___6026, out);
                                  }();
                                  var inst_5989 = cljs.core.filterv.call(null, inst_5988, inst_5974);
                                  var inst_5974__$1 = inst_5989;
                                  var state_6004__$1 = function() {
                                    var statearr_6019 = state_6004;
                                    statearr_6019[10] = inst_5974__$1;
                                    return statearr_6019;
                                  }();
                                  var statearr_6020_6036 = state_6004__$1;
                                  statearr_6020_6036[2] = null;
                                  statearr_6020_6036[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6026, out);
        return function(switch__3805__auto__, c__3820__auto___6026, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6021 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6021[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6021[1] = 1;
              return statearr_6021;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6004) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6004);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6022) {
                    if (e6022 instanceof Object) {
                      var ex__3809__auto__ = e6022;
                      var statearr_6023_6037 = state_6004;
                      statearr_6023_6037[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6004);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6022;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6038 = state_6004;
                  state_6004 = G__6038;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6004) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6004);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6026, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6024 = f__3821__auto__.call(null);
        statearr_6024[6] = c__3820__auto___6026;
        return statearr_6024;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6026, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var G__6040 = arguments.length;
  switch(G__6040) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6085 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6085, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6085, out) {
          return function(state_6064) {
            var state_val_6065 = state_6064[1];
            if (state_val_6065 === 7) {
              var inst_6046 = state_6064[7];
              var inst_6046__$1 = state_6064[2];
              var inst_6047 = inst_6046__$1 == null;
              var inst_6048 = cljs.core.not.call(null, inst_6047);
              var state_6064__$1 = function() {
                var statearr_6066 = state_6064;
                statearr_6066[7] = inst_6046__$1;
                return statearr_6066;
              }();
              if (inst_6048) {
                var statearr_6067_6086 = state_6064__$1;
                statearr_6067_6086[1] = 8;
              } else {
                var statearr_6068_6087 = state_6064__$1;
                statearr_6068_6087[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6065 === 1) {
                var inst_6041 = 0;
                var state_6064__$1 = function() {
                  var statearr_6069 = state_6064;
                  statearr_6069[8] = inst_6041;
                  return statearr_6069;
                }();
                var statearr_6070_6088 = state_6064__$1;
                statearr_6070_6088[2] = null;
                statearr_6070_6088[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6065 === 4) {
                  var state_6064__$1 = state_6064;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6064__$1, 7, ch);
                } else {
                  if (state_val_6065 === 6) {
                    var inst_6059 = state_6064[2];
                    var state_6064__$1 = state_6064;
                    var statearr_6071_6089 = state_6064__$1;
                    statearr_6071_6089[2] = inst_6059;
                    statearr_6071_6089[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6065 === 3) {
                      var inst_6061 = state_6064[2];
                      var inst_6062 = cljs.core.async.close_BANG_.call(null, out);
                      var state_6064__$1 = function() {
                        var statearr_6072 = state_6064;
                        statearr_6072[9] = inst_6061;
                        return statearr_6072;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6064__$1, inst_6062);
                    } else {
                      if (state_val_6065 === 2) {
                        var inst_6041 = state_6064[8];
                        var inst_6043 = inst_6041 < n;
                        var state_6064__$1 = state_6064;
                        if (cljs.core.truth_(inst_6043)) {
                          var statearr_6073_6090 = state_6064__$1;
                          statearr_6073_6090[1] = 4;
                        } else {
                          var statearr_6074_6091 = state_6064__$1;
                          statearr_6074_6091[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6065 === 11) {
                          var inst_6041 = state_6064[8];
                          var inst_6051 = state_6064[2];
                          var inst_6052 = inst_6041 + 1;
                          var inst_6041__$1 = inst_6052;
                          var state_6064__$1 = function() {
                            var statearr_6075 = state_6064;
                            statearr_6075[10] = inst_6051;
                            statearr_6075[8] = inst_6041__$1;
                            return statearr_6075;
                          }();
                          var statearr_6076_6092 = state_6064__$1;
                          statearr_6076_6092[2] = null;
                          statearr_6076_6092[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6065 === 9) {
                            var state_6064__$1 = state_6064;
                            var statearr_6077_6093 = state_6064__$1;
                            statearr_6077_6093[2] = null;
                            statearr_6077_6093[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_6065 === 5) {
                              var state_6064__$1 = state_6064;
                              var statearr_6078_6094 = state_6064__$1;
                              statearr_6078_6094[2] = null;
                              statearr_6078_6094[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6065 === 10) {
                                var inst_6056 = state_6064[2];
                                var state_6064__$1 = state_6064;
                                var statearr_6079_6095 = state_6064__$1;
                                statearr_6079_6095[2] = inst_6056;
                                statearr_6079_6095[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6065 === 8) {
                                  var inst_6046 = state_6064[7];
                                  var state_6064__$1 = state_6064;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6064__$1, 11, out, inst_6046);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6085, out);
        return function(switch__3805__auto__, c__3820__auto___6085, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6080 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_6080[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6080[1] = 1;
              return statearr_6080;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6064) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6064);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6081) {
                    if (e6081 instanceof Object) {
                      var ex__3809__auto__ = e6081;
                      var statearr_6082_6096 = state_6064;
                      statearr_6082_6096[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6064);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6081;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6097 = state_6064;
                  state_6064 = G__6097;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6064) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6064);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6085, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6083 = f__3821__auto__.call(null);
        statearr_6083[6] = c__3820__auto___6085;
        return statearr_6083;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6085, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async6099 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async6099 = function(f, ch, meta6100) {
      this.f = f;
      this.ch = ch;
      this.meta6100 = meta6100;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6101, meta6100__$1) {
      var self__ = this;
      var _6101__$1 = this;
      return new cljs.core.async.t_cljs$core$async6099(self__.f, self__.ch, meta6100__$1);
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6101) {
      var self__ = this;
      var _6101__$1 = this;
      return self__.meta6100;
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async6102 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async6102 = function(f, ch, meta6100, _, fn1, meta6103) {
            this.f = f;
            this.ch = ch;
            this.meta6100 = meta6100;
            this._ = _;
            this.fn1 = fn1;
            this.meta6103 = meta6103;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_6104, meta6103__$1) {
              var self__ = this;
              var _6104__$1 = this;
              return new cljs.core.async.t_cljs$core$async6102(self__.f, self__.ch, self__.meta6100, self__._, self__.fn1, meta6103__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_6104) {
              var self__ = this;
              var _6104__$1 = this;
              return self__.meta6103;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__6098_SHARP_) {
                  return f1.call(null, p1__6098_SHARP_ == null ? null : self__.f.call(null, p1__6098_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta6100", "meta6100", -70200190, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", 
              "t_cljs$core$async6099", "cljs.core.async/t_cljs$core$async6099", -20073173, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta6103", "meta6103", 203705099, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async6102.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async6102.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async6102";
          cljs.core.async.t_cljs$core$async6102.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
              return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async6102");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async6102 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async6102(f__$1, ch__$1, meta6100__$1, ___$2, fn1__$1, meta6103) {
              return new cljs.core.async.t_cljs$core$async6102(f__$1, ch__$1, meta6100__$1, ___$2, fn1__$1, meta6103);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async6102(self__.f, self__.ch, self__.meta6100, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__3911__auto__ = ret;
        if (cljs.core.truth_(and__3911__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3911__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6099.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async6099.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta6100", "meta6100", -70200190, null)], null);
    };
    cljs.core.async.t_cljs$core$async6099.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async6099.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async6099";
    cljs.core.async.t_cljs$core$async6099.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async6099");
    };
    cljs.core.async.__GT_t_cljs$core$async6099 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async6099(f__$1, ch__$1, meta6100) {
      return new cljs.core.async.t_cljs$core$async6099(f__$1, ch__$1, meta6100);
    };
  }
  return new cljs.core.async.t_cljs$core$async6099(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async6105 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async6105 = function(f, ch, meta6106) {
      this.f = f;
      this.ch = ch;
      this.meta6106 = meta6106;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6107, meta6106__$1) {
      var self__ = this;
      var _6107__$1 = this;
      return new cljs.core.async.t_cljs$core$async6105(self__.f, self__.ch, meta6106__$1);
    };
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6107) {
      var self__ = this;
      var _6107__$1 = this;
      return self__.meta6106;
    };
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6105.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async6105.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta6106", "meta6106", -1108717039, null)], null);
    };
    cljs.core.async.t_cljs$core$async6105.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async6105.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async6105";
    cljs.core.async.t_cljs$core$async6105.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async6105");
    };
    cljs.core.async.__GT_t_cljs$core$async6105 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async6105(f__$1, ch__$1, meta6106) {
      return new cljs.core.async.t_cljs$core$async6105(f__$1, ch__$1, meta6106);
    };
  }
  return new cljs.core.async.t_cljs$core$async6105(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async6108 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async6108 = function(p, ch, meta6109) {
      this.p = p;
      this.ch = ch;
      this.meta6109 = meta6109;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6110, meta6109__$1) {
      var self__ = this;
      var _6110__$1 = this;
      return new cljs.core.async.t_cljs$core$async6108(self__.p, self__.ch, meta6109__$1);
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6110) {
      var self__ = this;
      var _6110__$1 = this;
      return self__.meta6109;
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async6108.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async6108.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta6109", "meta6109", 439537982, null)], null);
    };
    cljs.core.async.t_cljs$core$async6108.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async6108.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async6108";
    cljs.core.async.t_cljs$core$async6108.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async/t_cljs$core$async6108");
    };
    cljs.core.async.__GT_t_cljs$core$async6108 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async6108(p__$1, ch__$1, meta6109) {
      return new cljs.core.async.t_cljs$core$async6108(p__$1, ch__$1, meta6109);
    };
  }
  return new cljs.core.async.t_cljs$core$async6108(p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var G__6112 = arguments.length;
  switch(G__6112) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6152 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6152, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6152, out) {
          return function(state_6133) {
            var state_val_6134 = state_6133[1];
            if (state_val_6134 === 7) {
              var inst_6129 = state_6133[2];
              var state_6133__$1 = state_6133;
              var statearr_6135_6153 = state_6133__$1;
              statearr_6135_6153[2] = inst_6129;
              statearr_6135_6153[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6134 === 1) {
                var state_6133__$1 = state_6133;
                var statearr_6136_6154 = state_6133__$1;
                statearr_6136_6154[2] = null;
                statearr_6136_6154[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6134 === 4) {
                  var inst_6115 = state_6133[7];
                  var inst_6115__$1 = state_6133[2];
                  var inst_6116 = inst_6115__$1 == null;
                  var state_6133__$1 = function() {
                    var statearr_6137 = state_6133;
                    statearr_6137[7] = inst_6115__$1;
                    return statearr_6137;
                  }();
                  if (cljs.core.truth_(inst_6116)) {
                    var statearr_6138_6155 = state_6133__$1;
                    statearr_6138_6155[1] = 5;
                  } else {
                    var statearr_6139_6156 = state_6133__$1;
                    statearr_6139_6156[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6134 === 6) {
                    var inst_6115 = state_6133[7];
                    var inst_6120 = p.call(null, inst_6115);
                    var state_6133__$1 = state_6133;
                    if (cljs.core.truth_(inst_6120)) {
                      var statearr_6140_6157 = state_6133__$1;
                      statearr_6140_6157[1] = 8;
                    } else {
                      var statearr_6141_6158 = state_6133__$1;
                      statearr_6141_6158[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6134 === 3) {
                      var inst_6131 = state_6133[2];
                      var state_6133__$1 = state_6133;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6133__$1, inst_6131);
                    } else {
                      if (state_val_6134 === 2) {
                        var state_6133__$1 = state_6133;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6133__$1, 4, ch);
                      } else {
                        if (state_val_6134 === 11) {
                          var inst_6123 = state_6133[2];
                          var state_6133__$1 = state_6133;
                          var statearr_6142_6159 = state_6133__$1;
                          statearr_6142_6159[2] = inst_6123;
                          statearr_6142_6159[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6134 === 9) {
                            var state_6133__$1 = state_6133;
                            var statearr_6143_6160 = state_6133__$1;
                            statearr_6143_6160[2] = null;
                            statearr_6143_6160[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_6134 === 5) {
                              var inst_6118 = cljs.core.async.close_BANG_.call(null, out);
                              var state_6133__$1 = state_6133;
                              var statearr_6144_6161 = state_6133__$1;
                              statearr_6144_6161[2] = inst_6118;
                              statearr_6144_6161[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6134 === 10) {
                                var inst_6126 = state_6133[2];
                                var state_6133__$1 = function() {
                                  var statearr_6145 = state_6133;
                                  statearr_6145[8] = inst_6126;
                                  return statearr_6145;
                                }();
                                var statearr_6146_6162 = state_6133__$1;
                                statearr_6146_6162[2] = null;
                                statearr_6146_6162[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6134 === 8) {
                                  var inst_6115 = state_6133[7];
                                  var state_6133__$1 = state_6133;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6133__$1, 11, out, inst_6115);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6152, out);
        return function(switch__3805__auto__, c__3820__auto___6152, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6147 = [null, null, null, null, null, null, null, null, null];
              statearr_6147[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6147[1] = 1;
              return statearr_6147;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6133) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6133);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6148) {
                    if (e6148 instanceof Object) {
                      var ex__3809__auto__ = e6148;
                      var statearr_6149_6163 = state_6133;
                      statearr_6149_6163[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6133);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6148;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6164 = state_6133;
                  state_6133 = G__6164;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6133) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6133);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6152, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6150 = f__3821__auto__.call(null);
        statearr_6150[6] = c__3820__auto___6152;
        return statearr_6150;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6152, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var G__6166 = arguments.length;
  switch(G__6166) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__3820__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto__) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto__) {
          return function(state_6229) {
            var state_val_6230 = state_6229[1];
            if (state_val_6230 === 7) {
              var inst_6225 = state_6229[2];
              var state_6229__$1 = state_6229;
              var statearr_6231_6269 = state_6229__$1;
              statearr_6231_6269[2] = inst_6225;
              statearr_6231_6269[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6230 === 20) {
                var inst_6195 = state_6229[7];
                var inst_6206 = state_6229[2];
                var inst_6207 = cljs.core.next.call(null, inst_6195);
                var inst_6181 = inst_6207;
                var inst_6182 = null;
                var inst_6183 = 0;
                var inst_6184 = 0;
                var state_6229__$1 = function() {
                  var statearr_6232 = state_6229;
                  statearr_6232[8] = inst_6206;
                  statearr_6232[9] = inst_6181;
                  statearr_6232[10] = inst_6183;
                  statearr_6232[11] = inst_6182;
                  statearr_6232[12] = inst_6184;
                  return statearr_6232;
                }();
                var statearr_6233_6270 = state_6229__$1;
                statearr_6233_6270[2] = null;
                statearr_6233_6270[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6230 === 1) {
                  var state_6229__$1 = state_6229;
                  var statearr_6234_6271 = state_6229__$1;
                  statearr_6234_6271[2] = null;
                  statearr_6234_6271[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6230 === 4) {
                    var inst_6170 = state_6229[13];
                    var inst_6170__$1 = state_6229[2];
                    var inst_6171 = inst_6170__$1 == null;
                    var state_6229__$1 = function() {
                      var statearr_6235 = state_6229;
                      statearr_6235[13] = inst_6170__$1;
                      return statearr_6235;
                    }();
                    if (cljs.core.truth_(inst_6171)) {
                      var statearr_6236_6272 = state_6229__$1;
                      statearr_6236_6272[1] = 5;
                    } else {
                      var statearr_6237_6273 = state_6229__$1;
                      statearr_6237_6273[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6230 === 15) {
                      var state_6229__$1 = state_6229;
                      var statearr_6241_6274 = state_6229__$1;
                      statearr_6241_6274[2] = null;
                      statearr_6241_6274[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6230 === 21) {
                        var state_6229__$1 = state_6229;
                        var statearr_6242_6275 = state_6229__$1;
                        statearr_6242_6275[2] = null;
                        statearr_6242_6275[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6230 === 13) {
                          var inst_6181 = state_6229[9];
                          var inst_6183 = state_6229[10];
                          var inst_6182 = state_6229[11];
                          var inst_6184 = state_6229[12];
                          var inst_6191 = state_6229[2];
                          var inst_6192 = inst_6184 + 1;
                          var tmp6238 = inst_6181;
                          var tmp6239 = inst_6183;
                          var tmp6240 = inst_6182;
                          var inst_6181__$1 = tmp6238;
                          var inst_6182__$1 = tmp6240;
                          var inst_6183__$1 = tmp6239;
                          var inst_6184__$1 = inst_6192;
                          var state_6229__$1 = function() {
                            var statearr_6243 = state_6229;
                            statearr_6243[14] = inst_6191;
                            statearr_6243[9] = inst_6181__$1;
                            statearr_6243[10] = inst_6183__$1;
                            statearr_6243[11] = inst_6182__$1;
                            statearr_6243[12] = inst_6184__$1;
                            return statearr_6243;
                          }();
                          var statearr_6244_6276 = state_6229__$1;
                          statearr_6244_6276[2] = null;
                          statearr_6244_6276[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6230 === 22) {
                            var state_6229__$1 = state_6229;
                            var statearr_6245_6277 = state_6229__$1;
                            statearr_6245_6277[2] = null;
                            statearr_6245_6277[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_6230 === 6) {
                              var inst_6170 = state_6229[13];
                              var inst_6179 = f.call(null, inst_6170);
                              var inst_6180 = cljs.core.seq.call(null, inst_6179);
                              var inst_6181 = inst_6180;
                              var inst_6182 = null;
                              var inst_6183 = 0;
                              var inst_6184 = 0;
                              var state_6229__$1 = function() {
                                var statearr_6246 = state_6229;
                                statearr_6246[9] = inst_6181;
                                statearr_6246[10] = inst_6183;
                                statearr_6246[11] = inst_6182;
                                statearr_6246[12] = inst_6184;
                                return statearr_6246;
                              }();
                              var statearr_6247_6278 = state_6229__$1;
                              statearr_6247_6278[2] = null;
                              statearr_6247_6278[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6230 === 17) {
                                var inst_6195 = state_6229[7];
                                var inst_6199 = cljs.core.chunk_first.call(null, inst_6195);
                                var inst_6200 = cljs.core.chunk_rest.call(null, inst_6195);
                                var inst_6201 = cljs.core.count.call(null, inst_6199);
                                var inst_6181 = inst_6200;
                                var inst_6182 = inst_6199;
                                var inst_6183 = inst_6201;
                                var inst_6184 = 0;
                                var state_6229__$1 = function() {
                                  var statearr_6248 = state_6229;
                                  statearr_6248[9] = inst_6181;
                                  statearr_6248[10] = inst_6183;
                                  statearr_6248[11] = inst_6182;
                                  statearr_6248[12] = inst_6184;
                                  return statearr_6248;
                                }();
                                var statearr_6249_6279 = state_6229__$1;
                                statearr_6249_6279[2] = null;
                                statearr_6249_6279[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6230 === 3) {
                                  var inst_6227 = state_6229[2];
                                  var state_6229__$1 = state_6229;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6229__$1, inst_6227);
                                } else {
                                  if (state_val_6230 === 12) {
                                    var inst_6215 = state_6229[2];
                                    var state_6229__$1 = state_6229;
                                    var statearr_6250_6280 = state_6229__$1;
                                    statearr_6250_6280[2] = inst_6215;
                                    statearr_6250_6280[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6230 === 2) {
                                      var state_6229__$1 = state_6229;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6229__$1, 4, in$);
                                    } else {
                                      if (state_val_6230 === 23) {
                                        var inst_6223 = state_6229[2];
                                        var state_6229__$1 = state_6229;
                                        var statearr_6251_6281 = state_6229__$1;
                                        statearr_6251_6281[2] = inst_6223;
                                        statearr_6251_6281[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6230 === 19) {
                                          var inst_6210 = state_6229[2];
                                          var state_6229__$1 = state_6229;
                                          var statearr_6252_6282 = state_6229__$1;
                                          statearr_6252_6282[2] = inst_6210;
                                          statearr_6252_6282[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_6230 === 11) {
                                            var inst_6181 = state_6229[9];
                                            var inst_6195 = state_6229[7];
                                            var inst_6195__$1 = cljs.core.seq.call(null, inst_6181);
                                            var state_6229__$1 = function() {
                                              var statearr_6253 = state_6229;
                                              statearr_6253[7] = inst_6195__$1;
                                              return statearr_6253;
                                            }();
                                            if (inst_6195__$1) {
                                              var statearr_6254_6283 = state_6229__$1;
                                              statearr_6254_6283[1] = 14;
                                            } else {
                                              var statearr_6255_6284 = state_6229__$1;
                                              statearr_6255_6284[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_6230 === 9) {
                                              var inst_6217 = state_6229[2];
                                              var inst_6218 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_6229__$1 = function() {
                                                var statearr_6256 = state_6229;
                                                statearr_6256[15] = inst_6217;
                                                return statearr_6256;
                                              }();
                                              if (cljs.core.truth_(inst_6218)) {
                                                var statearr_6257_6285 = state_6229__$1;
                                                statearr_6257_6285[1] = 21;
                                              } else {
                                                var statearr_6258_6286 = state_6229__$1;
                                                statearr_6258_6286[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_6230 === 5) {
                                                var inst_6173 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_6229__$1 = state_6229;
                                                var statearr_6259_6287 = state_6229__$1;
                                                statearr_6259_6287[2] = inst_6173;
                                                statearr_6259_6287[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_6230 === 14) {
                                                  var inst_6195 = state_6229[7];
                                                  var inst_6197 = cljs.core.chunked_seq_QMARK_.call(null, inst_6195);
                                                  var state_6229__$1 = state_6229;
                                                  if (inst_6197) {
                                                    var statearr_6260_6288 = state_6229__$1;
                                                    statearr_6260_6288[1] = 17;
                                                  } else {
                                                    var statearr_6261_6289 = state_6229__$1;
                                                    statearr_6261_6289[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_6230 === 16) {
                                                    var inst_6213 = state_6229[2];
                                                    var state_6229__$1 = state_6229;
                                                    var statearr_6262_6290 = state_6229__$1;
                                                    statearr_6262_6290[2] = inst_6213;
                                                    statearr_6262_6290[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_6230 === 10) {
                                                      var inst_6182 = state_6229[11];
                                                      var inst_6184 = state_6229[12];
                                                      var inst_6189 = cljs.core._nth.call(null, inst_6182, inst_6184);
                                                      var state_6229__$1 = state_6229;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6229__$1, 13, out, inst_6189);
                                                    } else {
                                                      if (state_val_6230 === 18) {
                                                        var inst_6195 = state_6229[7];
                                                        var inst_6204 = cljs.core.first.call(null, inst_6195);
                                                        var state_6229__$1 = state_6229;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6229__$1, 20, out, inst_6204);
                                                      } else {
                                                        if (state_val_6230 === 8) {
                                                          var inst_6183 = state_6229[10];
                                                          var inst_6184 = state_6229[12];
                                                          var inst_6186 = inst_6184 < inst_6183;
                                                          var inst_6187 = inst_6186;
                                                          var state_6229__$1 = state_6229;
                                                          if (cljs.core.truth_(inst_6187)) {
                                                            var statearr_6263_6291 = state_6229__$1;
                                                            statearr_6263_6291[1] = 10;
                                                          } else {
                                                            var statearr_6264_6292 = state_6229__$1;
                                                            statearr_6264_6292[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto__);
        return function(switch__3805__auto__, c__3820__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____0 = function() {
              var statearr_6265 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6265[0] = cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__;
              statearr_6265[1] = 1;
              return statearr_6265;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____1 = function(state_6229) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6229);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6266) {
                    if (e6266 instanceof Object) {
                      var ex__3809__auto__ = e6266;
                      var statearr_6267_6293 = state_6229;
                      statearr_6267_6293[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6229);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6266;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6294 = state_6229;
                  state_6229 = G__6294;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__ = function(state_6229) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____1.call(this, state_6229);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__3806__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto__);
      }();
      var state__3822__auto__ = function() {
        var statearr_6268 = f__3821__auto__.call(null);
        statearr_6268[6] = c__3820__auto__;
        return statearr_6268;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto__));
  return c__3820__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var G__6296 = arguments.length;
  switch(G__6296) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var G__6299 = arguments.length;
  switch(G__6299) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var G__6302 = arguments.length;
  switch(G__6302) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6349 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6349, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6349, out) {
          return function(state_6326) {
            var state_val_6327 = state_6326[1];
            if (state_val_6327 === 7) {
              var inst_6321 = state_6326[2];
              var state_6326__$1 = state_6326;
              var statearr_6328_6350 = state_6326__$1;
              statearr_6328_6350[2] = inst_6321;
              statearr_6328_6350[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6327 === 1) {
                var inst_6303 = null;
                var state_6326__$1 = function() {
                  var statearr_6329 = state_6326;
                  statearr_6329[7] = inst_6303;
                  return statearr_6329;
                }();
                var statearr_6330_6351 = state_6326__$1;
                statearr_6330_6351[2] = null;
                statearr_6330_6351[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6327 === 4) {
                  var inst_6306 = state_6326[8];
                  var inst_6306__$1 = state_6326[2];
                  var inst_6307 = inst_6306__$1 == null;
                  var inst_6308 = cljs.core.not.call(null, inst_6307);
                  var state_6326__$1 = function() {
                    var statearr_6331 = state_6326;
                    statearr_6331[8] = inst_6306__$1;
                    return statearr_6331;
                  }();
                  if (inst_6308) {
                    var statearr_6332_6352 = state_6326__$1;
                    statearr_6332_6352[1] = 5;
                  } else {
                    var statearr_6333_6353 = state_6326__$1;
                    statearr_6333_6353[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6327 === 6) {
                    var state_6326__$1 = state_6326;
                    var statearr_6334_6354 = state_6326__$1;
                    statearr_6334_6354[2] = null;
                    statearr_6334_6354[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6327 === 3) {
                      var inst_6323 = state_6326[2];
                      var inst_6324 = cljs.core.async.close_BANG_.call(null, out);
                      var state_6326__$1 = function() {
                        var statearr_6335 = state_6326;
                        statearr_6335[9] = inst_6323;
                        return statearr_6335;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6326__$1, inst_6324);
                    } else {
                      if (state_val_6327 === 2) {
                        var state_6326__$1 = state_6326;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6326__$1, 4, ch);
                      } else {
                        if (state_val_6327 === 11) {
                          var inst_6306 = state_6326[8];
                          var inst_6315 = state_6326[2];
                          var inst_6303 = inst_6306;
                          var state_6326__$1 = function() {
                            var statearr_6336 = state_6326;
                            statearr_6336[7] = inst_6303;
                            statearr_6336[10] = inst_6315;
                            return statearr_6336;
                          }();
                          var statearr_6337_6355 = state_6326__$1;
                          statearr_6337_6355[2] = null;
                          statearr_6337_6355[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6327 === 9) {
                            var inst_6306 = state_6326[8];
                            var state_6326__$1 = state_6326;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6326__$1, 11, out, inst_6306);
                          } else {
                            if (state_val_6327 === 5) {
                              var inst_6303 = state_6326[7];
                              var inst_6306 = state_6326[8];
                              var inst_6310 = cljs.core._EQ_.call(null, inst_6306, inst_6303);
                              var state_6326__$1 = state_6326;
                              if (inst_6310) {
                                var statearr_6339_6356 = state_6326__$1;
                                statearr_6339_6356[1] = 8;
                              } else {
                                var statearr_6340_6357 = state_6326__$1;
                                statearr_6340_6357[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6327 === 10) {
                                var inst_6318 = state_6326[2];
                                var state_6326__$1 = state_6326;
                                var statearr_6341_6358 = state_6326__$1;
                                statearr_6341_6358[2] = inst_6318;
                                statearr_6341_6358[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6327 === 8) {
                                  var inst_6303 = state_6326[7];
                                  var tmp6338 = inst_6303;
                                  var inst_6303__$1 = tmp6338;
                                  var state_6326__$1 = function() {
                                    var statearr_6342 = state_6326;
                                    statearr_6342[7] = inst_6303__$1;
                                    return statearr_6342;
                                  }();
                                  var statearr_6343_6359 = state_6326__$1;
                                  statearr_6343_6359[2] = null;
                                  statearr_6343_6359[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6349, out);
        return function(switch__3805__auto__, c__3820__auto___6349, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6344 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_6344[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6344[1] = 1;
              return statearr_6344;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6326) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6326);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6345) {
                    if (e6345 instanceof Object) {
                      var ex__3809__auto__ = e6345;
                      var statearr_6346_6360 = state_6326;
                      statearr_6346_6360[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6326);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6345;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6361 = state_6326;
                  state_6326 = G__6361;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6326) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6326);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6349, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6347 = f__3821__auto__.call(null);
        statearr_6347[6] = c__3820__auto___6349;
        return statearr_6347;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6349, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var G__6363 = arguments.length;
  switch(G__6363) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6429 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6429, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6429, out) {
          return function(state_6401) {
            var state_val_6402 = state_6401[1];
            if (state_val_6402 === 7) {
              var inst_6397 = state_6401[2];
              var state_6401__$1 = state_6401;
              var statearr_6403_6430 = state_6401__$1;
              statearr_6403_6430[2] = inst_6397;
              statearr_6403_6430[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6402 === 1) {
                var inst_6364 = new Array(n);
                var inst_6365 = inst_6364;
                var inst_6366 = 0;
                var state_6401__$1 = function() {
                  var statearr_6404 = state_6401;
                  statearr_6404[7] = inst_6365;
                  statearr_6404[8] = inst_6366;
                  return statearr_6404;
                }();
                var statearr_6405_6431 = state_6401__$1;
                statearr_6405_6431[2] = null;
                statearr_6405_6431[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6402 === 4) {
                  var inst_6369 = state_6401[9];
                  var inst_6369__$1 = state_6401[2];
                  var inst_6370 = inst_6369__$1 == null;
                  var inst_6371 = cljs.core.not.call(null, inst_6370);
                  var state_6401__$1 = function() {
                    var statearr_6406 = state_6401;
                    statearr_6406[9] = inst_6369__$1;
                    return statearr_6406;
                  }();
                  if (inst_6371) {
                    var statearr_6407_6432 = state_6401__$1;
                    statearr_6407_6432[1] = 5;
                  } else {
                    var statearr_6408_6433 = state_6401__$1;
                    statearr_6408_6433[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6402 === 15) {
                    var inst_6391 = state_6401[2];
                    var state_6401__$1 = state_6401;
                    var statearr_6409_6434 = state_6401__$1;
                    statearr_6409_6434[2] = inst_6391;
                    statearr_6409_6434[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6402 === 13) {
                      var state_6401__$1 = state_6401;
                      var statearr_6410_6435 = state_6401__$1;
                      statearr_6410_6435[2] = null;
                      statearr_6410_6435[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6402 === 6) {
                        var inst_6366 = state_6401[8];
                        var inst_6387 = inst_6366 > 0;
                        var state_6401__$1 = state_6401;
                        if (cljs.core.truth_(inst_6387)) {
                          var statearr_6411_6436 = state_6401__$1;
                          statearr_6411_6436[1] = 12;
                        } else {
                          var statearr_6412_6437 = state_6401__$1;
                          statearr_6412_6437[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6402 === 3) {
                          var inst_6399 = state_6401[2];
                          var state_6401__$1 = state_6401;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6401__$1, inst_6399);
                        } else {
                          if (state_val_6402 === 12) {
                            var inst_6365 = state_6401[7];
                            var inst_6389 = cljs.core.vec.call(null, inst_6365);
                            var state_6401__$1 = state_6401;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6401__$1, 15, out, inst_6389);
                          } else {
                            if (state_val_6402 === 2) {
                              var state_6401__$1 = state_6401;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6401__$1, 4, ch);
                            } else {
                              if (state_val_6402 === 11) {
                                var inst_6381 = state_6401[2];
                                var inst_6382 = new Array(n);
                                var inst_6365 = inst_6382;
                                var inst_6366 = 0;
                                var state_6401__$1 = function() {
                                  var statearr_6413 = state_6401;
                                  statearr_6413[10] = inst_6381;
                                  statearr_6413[7] = inst_6365;
                                  statearr_6413[8] = inst_6366;
                                  return statearr_6413;
                                }();
                                var statearr_6414_6438 = state_6401__$1;
                                statearr_6414_6438[2] = null;
                                statearr_6414_6438[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6402 === 9) {
                                  var inst_6365 = state_6401[7];
                                  var inst_6379 = cljs.core.vec.call(null, inst_6365);
                                  var state_6401__$1 = state_6401;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6401__$1, 11, out, inst_6379);
                                } else {
                                  if (state_val_6402 === 5) {
                                    var inst_6369 = state_6401[9];
                                    var inst_6374 = state_6401[11];
                                    var inst_6365 = state_6401[7];
                                    var inst_6366 = state_6401[8];
                                    var inst_6373 = inst_6365[inst_6366] = inst_6369;
                                    var inst_6374__$1 = inst_6366 + 1;
                                    var inst_6375 = inst_6374__$1 < n;
                                    var state_6401__$1 = function() {
                                      var statearr_6415 = state_6401;
                                      statearr_6415[12] = inst_6373;
                                      statearr_6415[11] = inst_6374__$1;
                                      return statearr_6415;
                                    }();
                                    if (cljs.core.truth_(inst_6375)) {
                                      var statearr_6416_6439 = state_6401__$1;
                                      statearr_6416_6439[1] = 8;
                                    } else {
                                      var statearr_6417_6440 = state_6401__$1;
                                      statearr_6417_6440[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6402 === 14) {
                                      var inst_6394 = state_6401[2];
                                      var inst_6395 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_6401__$1 = function() {
                                        var statearr_6419 = state_6401;
                                        statearr_6419[13] = inst_6394;
                                        return statearr_6419;
                                      }();
                                      var statearr_6420_6441 = state_6401__$1;
                                      statearr_6420_6441[2] = inst_6395;
                                      statearr_6420_6441[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_6402 === 10) {
                                        var inst_6385 = state_6401[2];
                                        var state_6401__$1 = state_6401;
                                        var statearr_6421_6442 = state_6401__$1;
                                        statearr_6421_6442[2] = inst_6385;
                                        statearr_6421_6442[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6402 === 8) {
                                          var inst_6374 = state_6401[11];
                                          var inst_6365 = state_6401[7];
                                          var tmp6418 = inst_6365;
                                          var inst_6365__$1 = tmp6418;
                                          var inst_6366 = inst_6374;
                                          var state_6401__$1 = function() {
                                            var statearr_6422 = state_6401;
                                            statearr_6422[7] = inst_6365__$1;
                                            statearr_6422[8] = inst_6366;
                                            return statearr_6422;
                                          }();
                                          var statearr_6423_6443 = state_6401__$1;
                                          statearr_6423_6443[2] = null;
                                          statearr_6423_6443[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6429, out);
        return function(switch__3805__auto__, c__3820__auto___6429, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6424 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6424[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6424[1] = 1;
              return statearr_6424;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6401) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6401);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6425) {
                    if (e6425 instanceof Object) {
                      var ex__3809__auto__ = e6425;
                      var statearr_6426_6444 = state_6401;
                      statearr_6426_6444[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6401);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6425;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6445 = state_6401;
                  state_6401 = G__6445;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6401) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6401);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6429, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6427 = f__3821__auto__.call(null);
        statearr_6427[6] = c__3820__auto___6429;
        return statearr_6427;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6429, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var G__6447 = arguments.length;
  switch(G__6447) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__3820__auto___6517 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6517, out) {
    return function() {
      var f__3821__auto__ = function() {
        var switch__3805__auto__ = function(c__3820__auto___6517, out) {
          return function(state_6489) {
            var state_val_6490 = state_6489[1];
            if (state_val_6490 === 7) {
              var inst_6485 = state_6489[2];
              var state_6489__$1 = state_6489;
              var statearr_6491_6518 = state_6489__$1;
              statearr_6491_6518[2] = inst_6485;
              statearr_6491_6518[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6490 === 1) {
                var inst_6448 = [];
                var inst_6449 = inst_6448;
                var inst_6450 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_6489__$1 = function() {
                  var statearr_6492 = state_6489;
                  statearr_6492[7] = inst_6450;
                  statearr_6492[8] = inst_6449;
                  return statearr_6492;
                }();
                var statearr_6493_6519 = state_6489__$1;
                statearr_6493_6519[2] = null;
                statearr_6493_6519[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6490 === 4) {
                  var inst_6453 = state_6489[9];
                  var inst_6453__$1 = state_6489[2];
                  var inst_6454 = inst_6453__$1 == null;
                  var inst_6455 = cljs.core.not.call(null, inst_6454);
                  var state_6489__$1 = function() {
                    var statearr_6494 = state_6489;
                    statearr_6494[9] = inst_6453__$1;
                    return statearr_6494;
                  }();
                  if (inst_6455) {
                    var statearr_6495_6520 = state_6489__$1;
                    statearr_6495_6520[1] = 5;
                  } else {
                    var statearr_6496_6521 = state_6489__$1;
                    statearr_6496_6521[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6490 === 15) {
                    var inst_6479 = state_6489[2];
                    var state_6489__$1 = state_6489;
                    var statearr_6497_6522 = state_6489__$1;
                    statearr_6497_6522[2] = inst_6479;
                    statearr_6497_6522[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6490 === 13) {
                      var state_6489__$1 = state_6489;
                      var statearr_6498_6523 = state_6489__$1;
                      statearr_6498_6523[2] = null;
                      statearr_6498_6523[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6490 === 6) {
                        var inst_6449 = state_6489[8];
                        var inst_6474 = inst_6449.length;
                        var inst_6475 = inst_6474 > 0;
                        var state_6489__$1 = state_6489;
                        if (cljs.core.truth_(inst_6475)) {
                          var statearr_6499_6524 = state_6489__$1;
                          statearr_6499_6524[1] = 12;
                        } else {
                          var statearr_6500_6525 = state_6489__$1;
                          statearr_6500_6525[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6490 === 3) {
                          var inst_6487 = state_6489[2];
                          var state_6489__$1 = state_6489;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6489__$1, inst_6487);
                        } else {
                          if (state_val_6490 === 12) {
                            var inst_6449 = state_6489[8];
                            var inst_6477 = cljs.core.vec.call(null, inst_6449);
                            var state_6489__$1 = state_6489;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6489__$1, 15, out, inst_6477);
                          } else {
                            if (state_val_6490 === 2) {
                              var state_6489__$1 = state_6489;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6489__$1, 4, ch);
                            } else {
                              if (state_val_6490 === 11) {
                                var inst_6457 = state_6489[10];
                                var inst_6453 = state_6489[9];
                                var inst_6467 = state_6489[2];
                                var inst_6468 = [];
                                var inst_6469 = inst_6468.push(inst_6453);
                                var inst_6449 = inst_6468;
                                var inst_6450 = inst_6457;
                                var state_6489__$1 = function() {
                                  var statearr_6501 = state_6489;
                                  statearr_6501[7] = inst_6450;
                                  statearr_6501[8] = inst_6449;
                                  statearr_6501[11] = inst_6467;
                                  statearr_6501[12] = inst_6469;
                                  return statearr_6501;
                                }();
                                var statearr_6502_6526 = state_6489__$1;
                                statearr_6502_6526[2] = null;
                                statearr_6502_6526[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6490 === 9) {
                                  var inst_6449 = state_6489[8];
                                  var inst_6465 = cljs.core.vec.call(null, inst_6449);
                                  var state_6489__$1 = state_6489;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6489__$1, 11, out, inst_6465);
                                } else {
                                  if (state_val_6490 === 5) {
                                    var inst_6450 = state_6489[7];
                                    var inst_6457 = state_6489[10];
                                    var inst_6453 = state_6489[9];
                                    var inst_6457__$1 = f.call(null, inst_6453);
                                    var inst_6458 = cljs.core._EQ_.call(null, inst_6457__$1, inst_6450);
                                    var inst_6459 = cljs.core.keyword_identical_QMARK_.call(null, inst_6450, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_6460 = inst_6458 || inst_6459;
                                    var state_6489__$1 = function() {
                                      var statearr_6503 = state_6489;
                                      statearr_6503[10] = inst_6457__$1;
                                      return statearr_6503;
                                    }();
                                    if (cljs.core.truth_(inst_6460)) {
                                      var statearr_6504_6527 = state_6489__$1;
                                      statearr_6504_6527[1] = 8;
                                    } else {
                                      var statearr_6505_6528 = state_6489__$1;
                                      statearr_6505_6528[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6490 === 14) {
                                      var inst_6482 = state_6489[2];
                                      var inst_6483 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_6489__$1 = function() {
                                        var statearr_6507 = state_6489;
                                        statearr_6507[13] = inst_6482;
                                        return statearr_6507;
                                      }();
                                      var statearr_6508_6529 = state_6489__$1;
                                      statearr_6508_6529[2] = inst_6483;
                                      statearr_6508_6529[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_6490 === 10) {
                                        var inst_6472 = state_6489[2];
                                        var state_6489__$1 = state_6489;
                                        var statearr_6509_6530 = state_6489__$1;
                                        statearr_6509_6530[2] = inst_6472;
                                        statearr_6509_6530[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6490 === 8) {
                                          var inst_6449 = state_6489[8];
                                          var inst_6457 = state_6489[10];
                                          var inst_6453 = state_6489[9];
                                          var inst_6462 = inst_6449.push(inst_6453);
                                          var tmp6506 = inst_6449;
                                          var inst_6449__$1 = tmp6506;
                                          var inst_6450 = inst_6457;
                                          var state_6489__$1 = function() {
                                            var statearr_6510 = state_6489;
                                            statearr_6510[7] = inst_6450;
                                            statearr_6510[8] = inst_6449__$1;
                                            statearr_6510[14] = inst_6462;
                                            return statearr_6510;
                                          }();
                                          var statearr_6511_6531 = state_6489__$1;
                                          statearr_6511_6531[2] = null;
                                          statearr_6511_6531[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__3820__auto___6517, out);
        return function(switch__3805__auto__, c__3820__auto___6517, out) {
          return function() {
            var cljs$core$async$state_machine__3806__auto__ = null;
            var cljs$core$async$state_machine__3806__auto____0 = function() {
              var statearr_6512 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6512[0] = cljs$core$async$state_machine__3806__auto__;
              statearr_6512[1] = 1;
              return statearr_6512;
            };
            var cljs$core$async$state_machine__3806__auto____1 = function(state_6489) {
              while (true) {
                var ret_value__3807__auto__ = function() {
                  try {
                    while (true) {
                      var result__3808__auto__ = switch__3805__auto__.call(null, state_6489);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__3808__auto__;
                      }
                      break;
                    }
                  } catch (e6513) {
                    if (e6513 instanceof Object) {
                      var ex__3809__auto__ = e6513;
                      var statearr_6514_6532 = state_6489;
                      statearr_6514_6532[5] = ex__3809__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6489);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6513;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6533 = state_6489;
                  state_6489 = G__6533;
                  continue;
                } else {
                  return ret_value__3807__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__3806__auto__ = function(state_6489) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__3806__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__3806__auto____1.call(this, state_6489);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__3806__auto____0;
            cljs$core$async$state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__3806__auto____1;
            return cljs$core$async$state_machine__3806__auto__;
          }();
        }(switch__3805__auto__, c__3820__auto___6517, out);
      }();
      var state__3822__auto__ = function() {
        var statearr_6515 = f__3821__auto__.call(null);
        statearr_6515[6] = c__3820__auto___6517;
        return statearr_6515;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
    };
  }(c__3820__auto___6517, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("cljs_http.core");
goog.require("cljs.core");
goog.require("goog.net.EventType");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.XhrIo");
goog.require("goog.net.Jsonp");
goog.require("cljs_http.util");
goog.require("cljs.core.async");
goog.require("clojure.string");
cljs_http.core.pending_requests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cljs_http.core.abort_BANG_ = function cljs_http$core$abort_BANG_(channel) {
  var temp__4657__auto__ = cljs.core.deref.call(null, cljs_http.core.pending_requests).call(null, channel);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var req = temp__4657__auto__;
    cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
    cljs.core.async.close_BANG_.call(null, channel);
    if (cljs.core.truth_(req.hasOwnProperty("abort"))) {
      return req.abort();
    } else {
      return (new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588)).cljs$core$IFn$_invoke$arity$1(req).cancel((new cljs.core.Keyword(null, "request", "request", 1772954723)).cljs$core$IFn$_invoke$arity$1(req));
    }
  } else {
    return null;
  }
};
cljs_http.core.aborted_QMARK_ = function cljs_http$core$aborted_QMARK_(xhr) {
  return cljs.core._EQ_.call(null, xhr.getLastErrorCode(), goog.net.ErrorCode.ABORT);
};
cljs_http.core.apply_default_headers_BANG_ = function cljs_http$core$apply_default_headers_BANG_(xhr, headers) {
  var formatted_h = cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, headers)), cljs.core.vals.call(null, headers));
  return cljs.core.dorun.call(null, cljs.core.map.call(null, function(formatted_h) {
    return function(p__6536) {
      var vec__6537 = p__6536;
      var k = cljs.core.nth.call(null, vec__6537, 0, null);
      var v = cljs.core.nth.call(null, vec__6537, 1, null);
      return xhr.headers.set(k, v);
    };
  }(formatted_h), formatted_h));
};
cljs_http.core.apply_response_type_BANG_ = function cljs_http$core$apply_response_type_BANG_(xhr, response_type) {
  return xhr.setResponseType(function() {
    var G__6540 = response_type;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "array-buffer", "array-buffer", 519008380), G__6540)) {
      return goog.net.XhrIo.ResponseType.ARRAY_BUFFER;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "blob", "blob", 1636965233), G__6540)) {
        return goog.net.XhrIo.ResponseType.BLOB;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "document", "document", -1329188687), G__6540)) {
          return goog.net.XhrIo.ResponseType.DOCUMENT;
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), G__6540)) {
            return goog.net.XhrIo.ResponseType.TEXT;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), G__6540)) {
              return goog.net.XhrIo.ResponseType.DEFAULT;
            } else {
              if (cljs.core._EQ_.call(null, null, G__6540)) {
                return goog.net.XhrIo.ResponseType.DEFAULT;
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6540)].join(""));
              }
            }
          }
        }
      }
    }
  }());
};
cljs_http.core.build_xhr = function cljs_http$core$build_xhr(p__6541) {
  var map__6542 = p__6541;
  var map__6542__$1 = (!(map__6542 == null) ? map__6542.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6542.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6542) : map__6542;
  var request = map__6542__$1;
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__6542__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var default_headers = cljs.core.get.call(null, map__6542__$1, new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094));
  var response_type = cljs.core.get.call(null, map__6542__$1, new cljs.core.Keyword(null, "response-type", "response-type", -1493770458));
  var timeout = function() {
    var or__3922__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return 0;
    }
  }();
  var send_credentials = with_credentials_QMARK_ == null ? true : with_credentials_QMARK_;
  var G__6544 = new goog.net.XhrIo;
  cljs_http.core.apply_default_headers_BANG_.call(null, G__6544, default_headers);
  cljs_http.core.apply_response_type_BANG_.call(null, G__6544, response_type);
  G__6544.setTimeoutInterval(timeout);
  G__6544.setWithCredentials(send_credentials);
  return G__6544;
};
cljs_http.core.error_kw = cljs.core.PersistentHashMap.fromArrays([0, 7, 1, 4, 6, 3, 2, 9, 5, 8], [new cljs.core.Keyword(null, "no-error", "no-error", 1984610064), new cljs.core.Keyword(null, "abort", "abort", 521193198), new cljs.core.Keyword(null, "access-denied", "access-denied", 959449406), new cljs.core.Keyword(null, "custom-error", "custom-error", -1565161123), new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), new cljs.core.Keyword(null, "ff-silent-error", "ff-silent-error", 
189390514), new cljs.core.Keyword(null, "file-not-found", "file-not-found", -65398940), new cljs.core.Keyword(null, "offline", "offline", -107631935), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "timeout", "timeout", -318625318)]);
cljs_http.core.xhr = function cljs_http$core$xhr(p__6545) {
  var map__6546 = p__6545;
  var map__6546__$1 = (!(map__6546 == null) ? map__6546.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6546.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6546) : map__6546;
  var request = map__6546__$1;
  var request_method = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  var headers = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var body = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var cancel = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "cancel", "cancel", -1964088360));
  var progress = cljs.core.get.call(null, map__6546__$1, new cljs.core.Keyword(null, "progress", "progress", 244323547));
  var channel = cljs.core.async.chan.call(null);
  var request_url = cljs_http.util.build_url.call(null, request);
  var method = cljs.core.name.call(null, function() {
    var or__3922__auto__ = request_method;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return new cljs.core.Keyword(null, "get", "get", 1683182755);
    }
  }());
  var headers__$1 = cljs_http.util.build_headers.call(null, headers);
  var xhr = cljs_http.core.build_xhr.call(null, request);
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, xhr);
  xhr.listen(goog.net.EventType.COMPLETE, function(channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
    return function(evt) {
      var target = evt.target;
      var response = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "status", "status", -1997798413), target.getStatus(), new cljs.core.Keyword(null, "success", "success", 1890645906), target.isSuccess(), new cljs.core.Keyword(null, "body", "body", -2049205669), target.getResponse(), new cljs.core.Keyword(null, "headers", "headers", -835030129), cljs_http.util.parse_headers.call(null, target.getAllResponseHeaders()), new cljs.core.Keyword(null, "trace-redirects", "trace-redirects", 
      -1149427907), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [request_url, target.getLastUri()], null), new cljs.core.Keyword(null, "error-code", "error-code", 180497232), cljs_http.core.error_kw.call(null, target.getLastErrorCode()), new cljs.core.Keyword(null, "error-text", "error-text", 2021893718), target.getLastError()], null);
      if (cljs.core.not.call(null, cljs_http.core.aborted_QMARK_.call(null, xhr))) {
        cljs.core.async.put_BANG_.call(null, channel, response);
      } else {
      }
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress));
  if (cljs.core.truth_(progress)) {
    var listener_6570 = function(channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
      return function(direction, evt) {
        return cljs.core.async.put_BANG_.call(null, progress, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "direction", "direction", -633359395), direction, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), evt.loaded], null), cljs.core.truth_(evt.lengthComputable) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "total", "total", 1916810418), evt.total], null) : null));
      };
    }(channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
    var G__6548_6571 = xhr;
    G__6548_6571.setProgressEventsEnabled(true);
    G__6548_6571.listen(goog.net.EventType.UPLOAD_PROGRESS, cljs.core.partial.call(null, listener_6570, new cljs.core.Keyword(null, "upload", "upload", -255769218)));
    G__6548_6571.listen(goog.net.EventType.DOWNLOAD_PROGRESS, cljs.core.partial.call(null, listener_6570, new cljs.core.Keyword(null, "download", "download", -300081668)));
  } else {
  }
  xhr.send(request_url, method, body, headers__$1);
  if (cljs.core.truth_(cancel)) {
    var c__3820__auto___6572 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
      return function() {
        var f__3821__auto__ = function() {
          var switch__3805__auto__ = function(c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
            return function(state_6559) {
              var state_val_6560 = state_6559[1];
              if (state_val_6560 === 1) {
                var state_6559__$1 = state_6559;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6559__$1, 2, cancel);
              } else {
                if (state_val_6560 === 2) {
                  var inst_6550 = state_6559[2];
                  var inst_6551 = xhr.isComplete();
                  var inst_6552 = cljs.core.not.call(null, inst_6551);
                  var state_6559__$1 = function() {
                    var statearr_6561 = state_6559;
                    statearr_6561[7] = inst_6550;
                    return statearr_6561;
                  }();
                  if (inst_6552) {
                    var statearr_6562_6573 = state_6559__$1;
                    statearr_6562_6573[1] = 3;
                  } else {
                    var statearr_6563_6574 = state_6559__$1;
                    statearr_6563_6574[1] = 4;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6560 === 3) {
                    var inst_6554 = xhr.abort();
                    var state_6559__$1 = state_6559;
                    var statearr_6564_6575 = state_6559__$1;
                    statearr_6564_6575[2] = inst_6554;
                    statearr_6564_6575[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6560 === 4) {
                      var state_6559__$1 = state_6559;
                      var statearr_6565_6576 = state_6559__$1;
                      statearr_6565_6576[2] = null;
                      statearr_6565_6576[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6560 === 5) {
                        var inst_6557 = state_6559[2];
                        var state_6559__$1 = state_6559;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6559__$1, inst_6557);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
          return function(switch__3805__auto__, c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
            return function() {
              var cljs_http$core$xhr_$_state_machine__3806__auto__ = null;
              var cljs_http$core$xhr_$_state_machine__3806__auto____0 = function() {
                var statearr_6566 = [null, null, null, null, null, null, null, null];
                statearr_6566[0] = cljs_http$core$xhr_$_state_machine__3806__auto__;
                statearr_6566[1] = 1;
                return statearr_6566;
              };
              var cljs_http$core$xhr_$_state_machine__3806__auto____1 = function(state_6559) {
                while (true) {
                  var ret_value__3807__auto__ = function() {
                    try {
                      while (true) {
                        var result__3808__auto__ = switch__3805__auto__.call(null, state_6559);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__3808__auto__;
                        }
                        break;
                      }
                    } catch (e6567) {
                      if (e6567 instanceof Object) {
                        var ex__3809__auto__ = e6567;
                        var statearr_6568_6577 = state_6559;
                        statearr_6568_6577[5] = ex__3809__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6559);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6567;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6578 = state_6559;
                    state_6559 = G__6578;
                    continue;
                  } else {
                    return ret_value__3807__auto__;
                  }
                  break;
                }
              };
              cljs_http$core$xhr_$_state_machine__3806__auto__ = function(state_6559) {
                switch(arguments.length) {
                  case 0:
                    return cljs_http$core$xhr_$_state_machine__3806__auto____0.call(this);
                  case 1:
                    return cljs_http$core$xhr_$_state_machine__3806__auto____1.call(this, state_6559);
                }
                throw new Error("Invalid arity: " + (arguments.length - 1));
              };
              cljs_http$core$xhr_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs_http$core$xhr_$_state_machine__3806__auto____0;
              cljs_http$core$xhr_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs_http$core$xhr_$_state_machine__3806__auto____1;
              return cljs_http$core$xhr_$_state_machine__3806__auto__;
            }();
          }(switch__3805__auto__, c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
        }();
        var state__3822__auto__ = function() {
          var statearr_6569 = f__3821__auto__.call(null);
          statearr_6569[6] = c__3820__auto___6572;
          return statearr_6569;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
      };
    }(c__3820__auto___6572, channel, request_url, method, headers__$1, xhr, map__6546, map__6546__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress));
  } else {
  }
  return channel;
};
cljs_http.core.jsonp = function cljs_http$core$jsonp(p__6579) {
  var map__6580 = p__6579;
  var map__6580__$1 = (!(map__6580 == null) ? map__6580.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6580.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6580) : map__6580;
  var request = map__6580__$1;
  var timeout = cljs.core.get.call(null, map__6580__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
  var callback_name = cljs.core.get.call(null, map__6580__$1, new cljs.core.Keyword(null, "callback-name", "callback-name", 336964714));
  var cancel = cljs.core.get.call(null, map__6580__$1, new cljs.core.Keyword(null, "cancel", "cancel", -1964088360));
  var keywordize_keys_QMARK_ = cljs.core.get.call(null, map__6580__$1, new cljs.core.Keyword(null, "keywordize-keys?", "keywordize-keys?", -254545987), true);
  var channel = cljs.core.async.chan.call(null);
  var jsonp = new goog.net.Jsonp(cljs_http.util.build_url.call(null, request), callback_name);
  jsonp.setRequestTimeout(timeout);
  var req_6593 = jsonp.send(null, function(channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
    return function cljs_http$core$jsonp_$_success_callback(data) {
      var response = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), 200, new cljs.core.Keyword(null, "success", "success", 1890645906), true, new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.js__GT_clj.call(null, data, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywordize_keys_QMARK_)], null);
      cljs.core.async.put_BANG_.call(null, channel, response);
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_), function(channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
    return function cljs_http$core$jsonp_$_error_callback() {
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_));
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588), jsonp, new cljs.core.Keyword(null, "request", "request", 1772954723), req_6593], null));
  if (cljs.core.truth_(cancel)) {
    var c__3820__auto___6594 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
      return function() {
        var f__3821__auto__ = function() {
          var switch__3805__auto__ = function(c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
            return function(state_6586) {
              var state_val_6587 = state_6586[1];
              if (state_val_6587 === 1) {
                var state_6586__$1 = state_6586;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6586__$1, 2, cancel);
              } else {
                if (state_val_6587 === 2) {
                  var inst_6583 = state_6586[2];
                  var inst_6584 = jsonp.cancel(req_6593);
                  var state_6586__$1 = function() {
                    var statearr_6588 = state_6586;
                    statearr_6588[7] = inst_6583;
                    return statearr_6588;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6586__$1, inst_6584);
                } else {
                  return null;
                }
              }
            };
          }(c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_);
          return function(switch__3805__auto__, c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
            return function() {
              var cljs_http$core$jsonp_$_state_machine__3806__auto__ = null;
              var cljs_http$core$jsonp_$_state_machine__3806__auto____0 = function() {
                var statearr_6589 = [null, null, null, null, null, null, null, null];
                statearr_6589[0] = cljs_http$core$jsonp_$_state_machine__3806__auto__;
                statearr_6589[1] = 1;
                return statearr_6589;
              };
              var cljs_http$core$jsonp_$_state_machine__3806__auto____1 = function(state_6586) {
                while (true) {
                  var ret_value__3807__auto__ = function() {
                    try {
                      while (true) {
                        var result__3808__auto__ = switch__3805__auto__.call(null, state_6586);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__3808__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__3808__auto__;
                        }
                        break;
                      }
                    } catch (e6590) {
                      if (e6590 instanceof Object) {
                        var ex__3809__auto__ = e6590;
                        var statearr_6591_6595 = state_6586;
                        statearr_6591_6595[5] = ex__3809__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6586);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6590;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__3807__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6596 = state_6586;
                    state_6586 = G__6596;
                    continue;
                  } else {
                    return ret_value__3807__auto__;
                  }
                  break;
                }
              };
              cljs_http$core$jsonp_$_state_machine__3806__auto__ = function(state_6586) {
                switch(arguments.length) {
                  case 0:
                    return cljs_http$core$jsonp_$_state_machine__3806__auto____0.call(this);
                  case 1:
                    return cljs_http$core$jsonp_$_state_machine__3806__auto____1.call(this, state_6586);
                }
                throw new Error("Invalid arity: " + (arguments.length - 1));
              };
              cljs_http$core$jsonp_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$0 = cljs_http$core$jsonp_$_state_machine__3806__auto____0;
              cljs_http$core$jsonp_$_state_machine__3806__auto__.cljs$core$IFn$_invoke$arity$1 = cljs_http$core$jsonp_$_state_machine__3806__auto____1;
              return cljs_http$core$jsonp_$_state_machine__3806__auto__;
            }();
          }(switch__3805__auto__, c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_);
        }();
        var state__3822__auto__ = function() {
          var statearr_6592 = f__3821__auto__.call(null);
          statearr_6592[6] = c__3820__auto___6594;
          return statearr_6592;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__3822__auto__);
      };
    }(c__3820__auto___6594, req_6593, channel, jsonp, map__6580, map__6580__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_));
  } else {
  }
  return channel;
};
cljs_http.core.request = function cljs_http$core$request(p__6597) {
  var map__6598 = p__6597;
  var map__6598__$1 = (!(map__6598 == null) ? map__6598.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6598.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6598) : map__6598;
  var request = map__6598__$1;
  var request_method = cljs.core.get.call(null, map__6598__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  if (cljs.core._EQ_.call(null, request_method, new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588))) {
    return cljs_http.core.jsonp.call(null, request);
  } else {
    return cljs_http.core.xhr.call(null, request);
  }
};
goog.provide("cljs_http.client");
goog.require("cljs.core");
goog.require("cljs_http.core");
goog.require("cljs_http.util");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("goog.Uri");
goog.require("no.en.core");
cljs_http.client.if_pos = function cljs_http$client$if_pos(v) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = v;
    if (cljs.core.truth_(and__3911__auto__)) {
      return v > 0;
    } else {
      return and__3911__auto__;
    }
  }())) {
    return v;
  } else {
    return null;
  }
};
cljs_http.client.acc_param = function cljs_http$client$acc_param(o, v) {
  if (cljs.core.coll_QMARK_.call(null, o)) {
    return cljs.core.conj.call(null, o, v);
  } else {
    if (!(o == null)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, v], null);
    } else {
      return v;
    }
  }
};
cljs_http.client.parse_query_params = function cljs_http$client$parse_query_params(s) {
  if (!clojure.string.blank_QMARK_.call(null, s)) {
    return cljs.core.reduce.call(null, function(p1__6603_SHARP_, p2__6602_SHARP_) {
      var vec__6604 = clojure.string.split.call(null, p2__6602_SHARP_, /=/);
      var k = cljs.core.nth.call(null, vec__6604, 0, null);
      var v = cljs.core.nth.call(null, vec__6604, 1, null);
      return cljs.core.update.call(null, p1__6603_SHARP_, cljs.core.keyword.call(null, no.en.core.url_decode.call(null, k)), cljs_http.client.acc_param, no.en.core.url_decode.call(null, v));
    }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""), /&/));
  } else {
    return null;
  }
};
cljs_http.client.parse_url = function cljs_http$client$parse_url(url) {
  if (!clojure.string.blank_QMARK_.call(null, url)) {
    var uri = goog.Uri.parse(url);
    var query_data = uri.getQueryData();
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), cljs.core.keyword.call(null, uri.getScheme()), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), uri.getDomain(), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), cljs_http.client.if_pos.call(null, uri.getPort()), new cljs.core.Keyword(null, "uri", "uri", -774711847), uri.getPath(), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), 
    cljs.core.not.call(null, query_data.isEmpty()) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_data)].join("") : null, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), cljs.core.not.call(null, query_data.isEmpty()) ? cljs_http.client.parse_query_params.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_data)].join("")) : null], null);
  } else {
    return null;
  }
};
cljs_http.client.unexceptional_status_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [205, null, 206, null, 300, null, 204, null, 307, null, 303, null, 301, null, 201, null, 302, null, 202, null, 200, null, 203, null, 207, null], null), null);
cljs_http.client.encode_val = function cljs_http$client$encode_val(k, v) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.url_encode.call(null, cljs.core.name.call(null, k))), "\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.url_encode.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)].join("")))].join("");
};
cljs_http.client.encode_vals = function cljs_http$client$encode_vals(k, vs) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__6607_SHARP_) {
    return cljs_http.client.encode_val.call(null, k, p1__6607_SHARP_);
  }, vs));
};
cljs_http.client.encode_param = function cljs_http$client$encode_param(p__6608) {
  var vec__6609 = p__6608;
  var k = cljs.core.nth.call(null, vec__6609, 0, null);
  var v = cljs.core.nth.call(null, vec__6609, 1, null);
  if (cljs.core.coll_QMARK_.call(null, v)) {
    return cljs_http.client.encode_vals.call(null, k, v);
  } else {
    return cljs_http.client.encode_val.call(null, k, v);
  }
};
cljs_http.client.generate_query_string = function cljs_http$client$generate_query_string(params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, cljs_http.client.encode_param, params));
};
cljs_http.client.regex_char_esc_smap = function() {
  var esc_chars = "()*\x26^%$#!+";
  return cljs.core.zipmap.call(null, esc_chars, cljs.core.map.call(null, function(esc_chars) {
    return function(p1__6612_SHARP_) {
      return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__6612_SHARP_)].join("");
    };
  }(esc_chars), esc_chars));
}();
cljs_http.client.escape_special = function cljs_http$client$escape_special(string) {
  return cljs.core.reduce.call(null, cljs.core.str, cljs.core.replace.call(null, cljs_http.client.regex_char_esc_smap, string));
};
cljs_http.client.decode_body = function cljs_http$client$decode_body(response, decode_fn, content_type, request_method) {
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "head", "head", -771383919), request_method);
    if (and__3911__auto__) {
      var and__3911__auto____$1 = cljs.core.not_EQ_.call(null, 204, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(response));
      if (and__3911__auto____$1) {
        return cljs.core.re_find.call(null, cljs.core.re_pattern.call(null, ["(?i)", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_http.client.escape_special.call(null, content_type))].join("")), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(response), "content-type", ""))].join(""));
      } else {
        return and__3911__auto____$1;
      }
    } else {
      return and__3911__auto__;
    }
  }())) {
    return cljs.core.update_in.call(null, response, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "body", "body", -2049205669)], null), decode_fn);
  } else {
    return response;
  }
};
cljs_http.client.wrap_edn_params = function cljs_http$client$wrap_edn_params(client) {
  return function(request) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var params = temp__4655__auto__;
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/edn"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.pr_str.call(null, params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_edn_response = function cljs_http$client$wrap_edn_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__6613_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__6613_SHARP_, cljs.reader.read_string, "application/edn", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_default_headers = function cljs_http$client$wrap_default_headers(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6620 = arguments.length;
  var i__4500__auto___6621 = 0;
  while (true) {
    if (i__4500__auto___6621 < len__4499__auto___6620) {
      args__4502__auto__.push(arguments[i__4500__auto___6621]);
      var G__6622 = i__4500__auto___6621 + 1;
      i__4500__auto___6621 = G__6622;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_default_headers.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.wrap_default_headers.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6616) {
  var vec__6617 = p__6616;
  var default_headers = cljs.core.nth.call(null, vec__6617, 0, null);
  return function(vec__6617, default_headers) {
    return function(request) {
      var temp__4655__auto__ = function() {
        var or__3922__auto__ = (new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return default_headers;
        }
      }();
      if (cljs.core.truth_(temp__4655__auto__)) {
        var default_headers__$1 = temp__4655__auto__;
        return client.call(null, cljs.core.assoc.call(null, request, new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094), default_headers__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6617, default_headers);
};
cljs_http.client.wrap_default_headers.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_default_headers.cljs$lang$applyTo = function(seq6614) {
  var G__6615 = cljs.core.first.call(null, seq6614);
  var seq6614__$1 = cljs.core.next.call(null, seq6614);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6615, seq6614__$1);
};
cljs_http.client.wrap_accept = function cljs_http$client$wrap_accept(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6629 = arguments.length;
  var i__4500__auto___6630 = 0;
  while (true) {
    if (i__4500__auto___6630 < len__4499__auto___6629) {
      args__4502__auto__.push(arguments[i__4500__auto___6630]);
      var G__6631 = i__4500__auto___6630 + 1;
      i__4500__auto___6630 = G__6631;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_accept.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.wrap_accept.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6625) {
  var vec__6626 = p__6625;
  var accept = cljs.core.nth.call(null, vec__6626, 0, null);
  return function(vec__6626, accept) {
    return function(request) {
      var temp__4655__auto__ = function() {
        var or__3922__auto__ = (new cljs.core.Keyword(null, "accept", "accept", 1874130431)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return accept;
        }
      }();
      if (cljs.core.truth_(temp__4655__auto__)) {
        var accept__$1 = temp__4655__auto__;
        return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "accept"], null), accept__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6626, accept);
};
cljs_http.client.wrap_accept.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_accept.cljs$lang$applyTo = function(seq6623) {
  var G__6624 = cljs.core.first.call(null, seq6623);
  var seq6623__$1 = cljs.core.next.call(null, seq6623);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6624, seq6623__$1);
};
cljs_http.client.wrap_content_type = function cljs_http$client$wrap_content_type(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6638 = arguments.length;
  var i__4500__auto___6639 = 0;
  while (true) {
    if (i__4500__auto___6639 < len__4499__auto___6638) {
      args__4502__auto__.push(arguments[i__4500__auto___6639]);
      var G__6640 = i__4500__auto___6639 + 1;
      i__4500__auto___6639 = G__6640;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_content_type.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.wrap_content_type.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6634) {
  var vec__6635 = p__6634;
  var content_type = cljs.core.nth.call(null, vec__6635, 0, null);
  return function(vec__6635, content_type) {
    return function(request) {
      var temp__4655__auto__ = function() {
        var or__3922__auto__ = (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return content_type;
        }
      }();
      if (cljs.core.truth_(temp__4655__auto__)) {
        var content_type__$1 = temp__4655__auto__;
        return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), content_type__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6635, content_type);
};
cljs_http.client.wrap_content_type.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_content_type.cljs$lang$applyTo = function(seq6632) {
  var G__6633 = cljs.core.first.call(null, seq6632);
  var seq6632__$1 = cljs.core.next.call(null, seq6632);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6633, seq6632__$1);
};
cljs_http.client.default_transit_opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "decoding", "decoding", -568180903), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 
1050289140), cljs.core.PersistentArrayMap.EMPTY], null);
cljs_http.client.wrap_transit_params = function cljs_http$client$wrap_transit_params(client) {
  return function(request) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var params = temp__4655__auto__;
      var map__6641 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
      var map__6641__$1 = (!(map__6641 == null) ? map__6641.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6641.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6641) : map__6641;
      var encoding = cljs.core.get.call(null, map__6641__$1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272));
      var encoding_opts = cljs.core.get.call(null, map__6641__$1, new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631));
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/transit+json"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.transit_encode.call(null, params, encoding, encoding_opts)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_transit_response = function cljs_http$client$wrap_transit_response(client) {
  return function(request) {
    var map__6645 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
    var map__6645__$1 = (!(map__6645 == null) ? map__6645.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6645.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6645) : map__6645;
    var decoding = cljs.core.get.call(null, map__6645__$1, new cljs.core.Keyword(null, "decoding", "decoding", -568180903));
    var decoding_opts = cljs.core.get.call(null, map__6645__$1, new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 1050289140));
    var transit_decode = function(map__6645, map__6645__$1, decoding, decoding_opts) {
      return function(p1__6643_SHARP_) {
        return cljs_http.util.transit_decode.call(null, p1__6643_SHARP_, decoding, decoding_opts);
      };
    }(map__6645, map__6645__$1, decoding, decoding_opts);
    return cljs.core.async.map.call(null, function(map__6645, map__6645__$1, decoding, decoding_opts, transit_decode) {
      return function(p1__6644_SHARP_) {
        return cljs_http.client.decode_body.call(null, p1__6644_SHARP_, transit_decode, "application/transit+json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
      };
    }(map__6645, map__6645__$1, decoding, decoding_opts, transit_decode), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_json_params = function cljs_http$client$wrap_json_params(client) {
  return function(request) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var params = temp__4655__auto__;
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/json"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.json_encode.call(null, params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_json_response = function cljs_http$client$wrap_json_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__6647_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__6647_SHARP_, cljs_http.util.json_decode, "application/json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_query_params = function cljs_http$client$wrap_query_params(client) {
  return function(p__6648) {
    var map__6649 = p__6648;
    var map__6649__$1 = (!(map__6649 == null) ? map__6649.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6649.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6649) : map__6649;
    var req = map__6649__$1;
    var query_params = cljs.core.get.call(null, map__6649__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    if (cljs.core.truth_(query_params)) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "query-params", "query-params", 900640534)), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), cljs_http.client.generate_query_string.call(null, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_form_params = function cljs_http$client$wrap_form_params(client) {
  return function(p__6651) {
    var map__6652 = p__6651;
    var map__6652__$1 = (!(map__6652 == null) ? map__6652.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6652.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6652) : map__6652;
    var request = map__6652__$1;
    var form_params = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467));
    var request_method = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    var headers = cljs.core.get.call(null, map__6652__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = form_params;
      if (cljs.core.truth_(and__3911__auto__)) {
        return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__3911__auto__;
      }
    }())) {
      var headers__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/x-www-form-urlencoded"], null), headers);
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_query_string.call(null, form_params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers__$1));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.generate_form_data = function cljs_http$client$generate_form_data(params) {
  var form_data = new FormData;
  var seq__6654_6664 = cljs.core.seq.call(null, params);
  var chunk__6655_6665 = null;
  var count__6656_6666 = 0;
  var i__6657_6667 = 0;
  while (true) {
    if (i__6657_6667 < count__6656_6666) {
      var vec__6658_6668 = cljs.core._nth.call(null, chunk__6655_6665, i__6657_6667);
      var k_6669 = cljs.core.nth.call(null, vec__6658_6668, 0, null);
      var v_6670 = cljs.core.nth.call(null, vec__6658_6668, 1, null);
      if (cljs.core.coll_QMARK_.call(null, v_6670)) {
        form_data.append(cljs.core.name.call(null, k_6669), cljs.core.first.call(null, v_6670), cljs.core.second.call(null, v_6670));
      } else {
        form_data.append(cljs.core.name.call(null, k_6669), v_6670);
      }
      var G__6671 = seq__6654_6664;
      var G__6672 = chunk__6655_6665;
      var G__6673 = count__6656_6666;
      var G__6674 = i__6657_6667 + 1;
      seq__6654_6664 = G__6671;
      chunk__6655_6665 = G__6672;
      count__6656_6666 = G__6673;
      i__6657_6667 = G__6674;
      continue;
    } else {
      var temp__4657__auto___6675 = cljs.core.seq.call(null, seq__6654_6664);
      if (temp__4657__auto___6675) {
        var seq__6654_6676__$1 = temp__4657__auto___6675;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6654_6676__$1)) {
          var c__4319__auto___6677 = cljs.core.chunk_first.call(null, seq__6654_6676__$1);
          var G__6678 = cljs.core.chunk_rest.call(null, seq__6654_6676__$1);
          var G__6679 = c__4319__auto___6677;
          var G__6680 = cljs.core.count.call(null, c__4319__auto___6677);
          var G__6681 = 0;
          seq__6654_6664 = G__6678;
          chunk__6655_6665 = G__6679;
          count__6656_6666 = G__6680;
          i__6657_6667 = G__6681;
          continue;
        } else {
          var vec__6661_6682 = cljs.core.first.call(null, seq__6654_6676__$1);
          var k_6683 = cljs.core.nth.call(null, vec__6661_6682, 0, null);
          var v_6684 = cljs.core.nth.call(null, vec__6661_6682, 1, null);
          if (cljs.core.coll_QMARK_.call(null, v_6684)) {
            form_data.append(cljs.core.name.call(null, k_6683), cljs.core.first.call(null, v_6684), cljs.core.second.call(null, v_6684));
          } else {
            form_data.append(cljs.core.name.call(null, k_6683), v_6684);
          }
          var G__6685 = cljs.core.next.call(null, seq__6654_6676__$1);
          var G__6686 = null;
          var G__6687 = 0;
          var G__6688 = 0;
          seq__6654_6664 = G__6685;
          chunk__6655_6665 = G__6686;
          count__6656_6666 = G__6687;
          i__6657_6667 = G__6688;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return form_data;
};
cljs_http.client.wrap_multipart_params = function cljs_http$client$wrap_multipart_params(client) {
  return function(p__6689) {
    var map__6690 = p__6689;
    var map__6690__$1 = (!(map__6690 == null) ? map__6690.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6690.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6690) : map__6690;
    var request = map__6690__$1;
    var multipart_params = cljs.core.get.call(null, map__6690__$1, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707));
    var request_method = cljs.core.get.call(null, map__6690__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = multipart_params;
      if (cljs.core.truth_(and__3911__auto__)) {
        return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__3911__auto__;
      }
    }())) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_form_data.call(null, multipart_params)));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_method = function cljs_http$client$wrap_method(client) {
  return function(req) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "method", "method", 55703592)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var m = temp__4655__auto__;
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "method", "method", 55703592)), new cljs.core.Keyword(null, "request-method", "request-method", 1764796830), m));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_server_name = function cljs_http$client$wrap_server_name(client, server_name) {
  return function(p1__6692_SHARP_) {
    return client.call(null, cljs.core.assoc.call(null, p1__6692_SHARP_, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), server_name));
  };
};
cljs_http.client.wrap_url = function cljs_http$client$wrap_url(client) {
  return function(p__6694) {
    var map__6695 = p__6694;
    var map__6695__$1 = (!(map__6695 == null) ? map__6695.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6695.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6695) : map__6695;
    var req = map__6695__$1;
    var query_params = cljs.core.get.call(null, map__6695__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var temp__4655__auto__ = cljs_http.client.parse_url.call(null, (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(req));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var spec = temp__4655__auto__;
      return client.call(null, cljs.core.update_in.call(null, cljs.core.dissoc.call(null, cljs.core.merge.call(null, req, spec), new cljs.core.Keyword(null, "url", "url", 276297046)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534)], null), function(spec, temp__4655__auto__, map__6695, map__6695__$1, req, query_params) {
        return function(p1__6693_SHARP_) {
          return cljs.core.merge.call(null, p1__6693_SHARP_, query_params);
        };
      }(spec, temp__4655__auto__, map__6695, map__6695__$1, req, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_basic_auth = function cljs_http$client$wrap_basic_auth(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6703 = arguments.length;
  var i__4500__auto___6704 = 0;
  while (true) {
    if (i__4500__auto___6704 < len__4499__auto___6703) {
      args__4502__auto__.push(arguments[i__4500__auto___6704]);
      var G__6705 = i__4500__auto___6704 + 1;
      i__4500__auto___6704 = G__6705;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6699) {
  var vec__6700 = p__6699;
  var credentials = cljs.core.nth.call(null, vec__6700, 0, null);
  return function(vec__6700, credentials) {
    return function(req) {
      var credentials__$1 = function() {
        var or__3922__auto__ = (new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)).cljs$core$IFn$_invoke$arity$1(req);
        if (cljs.core.truth_(or__3922__auto__)) {
          return or__3922__auto__;
        } else {
          return credentials;
        }
      }();
      if (!cljs.core.empty_QMARK_.call(null, credentials__$1)) {
        return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), cljs_http.util.basic_auth.call(null, credentials__$1)));
      } else {
        return client.call(null, req);
      }
    };
  }(vec__6700, credentials);
};
cljs_http.client.wrap_basic_auth.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_basic_auth.cljs$lang$applyTo = function(seq6697) {
  var G__6698 = cljs.core.first.call(null, seq6697);
  var seq6697__$1 = cljs.core.next.call(null, seq6697);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6698, seq6697__$1);
};
cljs_http.client.wrap_oauth = function cljs_http$client$wrap_oauth(client) {
  return function(req) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var oauth_token = temp__4655__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), ["Bearer ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(oauth_token)].join("")));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_channel_from_request_map = function cljs_http$client$wrap_channel_from_request_map(client) {
  return function(request) {
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "channel", "channel", 734187692)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var custom_channel = temp__4655__auto__;
      return cljs.core.async.pipe.call(null, client.call(null, request), custom_channel);
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_request = function cljs_http$client$wrap_request(request) {
  return cljs_http.client.wrap_default_headers.call(null, cljs_http.client.wrap_channel_from_request_map.call(null, cljs_http.client.wrap_url.call(null, cljs_http.client.wrap_method.call(null, cljs_http.client.wrap_oauth.call(null, cljs_http.client.wrap_basic_auth.call(null, cljs_http.client.wrap_query_params.call(null, cljs_http.client.wrap_content_type.call(null, cljs_http.client.wrap_json_response.call(null, cljs_http.client.wrap_json_params.call(null, cljs_http.client.wrap_transit_response.call(null, 
  cljs_http.client.wrap_transit_params.call(null, cljs_http.client.wrap_edn_response.call(null, cljs_http.client.wrap_edn_params.call(null, cljs_http.client.wrap_multipart_params.call(null, cljs_http.client.wrap_form_params.call(null, cljs_http.client.wrap_accept.call(null, request)))))))))))))))));
};
cljs_http.client.request = cljs_http.client.wrap_request.call(null, cljs_http.core.request);
cljs_http.client.delete$ = function cljs_http$client$delete(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6712 = arguments.length;
  var i__4500__auto___6713 = 0;
  while (true) {
    if (i__4500__auto___6713 < len__4499__auto___6712) {
      args__4502__auto__.push(arguments[i__4500__auto___6713]);
      var G__6714 = i__4500__auto___6713 + 1;
      i__4500__auto___6713 = G__6714;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.delete$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.delete$.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6708) {
  var vec__6709 = p__6708;
  var req = cljs.core.nth.call(null, vec__6709, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.delete$.cljs$lang$maxFixedArity = 1;
cljs_http.client.delete$.cljs$lang$applyTo = function(seq6706) {
  var G__6707 = cljs.core.first.call(null, seq6706);
  var seq6706__$1 = cljs.core.next.call(null, seq6706);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6707, seq6706__$1);
};
cljs_http.client.get = function cljs_http$client$get(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6721 = arguments.length;
  var i__4500__auto___6722 = 0;
  while (true) {
    if (i__4500__auto___6722 < len__4499__auto___6721) {
      args__4502__auto__.push(arguments[i__4500__auto___6722]);
      var G__6723 = i__4500__auto___6722 + 1;
      i__4500__auto___6722 = G__6723;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6717) {
  var vec__6718 = p__6717;
  var req = cljs.core.nth.call(null, vec__6718, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.get.cljs$lang$maxFixedArity = 1;
cljs_http.client.get.cljs$lang$applyTo = function(seq6715) {
  var G__6716 = cljs.core.first.call(null, seq6715);
  var seq6715__$1 = cljs.core.next.call(null, seq6715);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6716, seq6715__$1);
};
cljs_http.client.head = function cljs_http$client$head(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6730 = arguments.length;
  var i__4500__auto___6731 = 0;
  while (true) {
    if (i__4500__auto___6731 < len__4499__auto___6730) {
      args__4502__auto__.push(arguments[i__4500__auto___6731]);
      var G__6732 = i__4500__auto___6731 + 1;
      i__4500__auto___6731 = G__6732;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.head.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6726) {
  var vec__6727 = p__6726;
  var req = cljs.core.nth.call(null, vec__6727, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.head.cljs$lang$maxFixedArity = 1;
cljs_http.client.head.cljs$lang$applyTo = function(seq6724) {
  var G__6725 = cljs.core.first.call(null, seq6724);
  var seq6724__$1 = cljs.core.next.call(null, seq6724);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6725, seq6724__$1);
};
cljs_http.client.jsonp = function cljs_http$client$jsonp(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6739 = arguments.length;
  var i__4500__auto___6740 = 0;
  while (true) {
    if (i__4500__auto___6740 < len__4499__auto___6739) {
      args__4502__auto__.push(arguments[i__4500__auto___6740]);
      var G__6741 = i__4500__auto___6740 + 1;
      i__4500__auto___6740 = G__6741;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.jsonp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.jsonp.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6735) {
  var vec__6736 = p__6735;
  var req = cljs.core.nth.call(null, vec__6736, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.jsonp.cljs$lang$maxFixedArity = 1;
cljs_http.client.jsonp.cljs$lang$applyTo = function(seq6733) {
  var G__6734 = cljs.core.first.call(null, seq6733);
  var seq6733__$1 = cljs.core.next.call(null, seq6733);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6734, seq6733__$1);
};
cljs_http.client.move = function cljs_http$client$move(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6748 = arguments.length;
  var i__4500__auto___6749 = 0;
  while (true) {
    if (i__4500__auto___6749 < len__4499__auto___6748) {
      args__4502__auto__.push(arguments[i__4500__auto___6749]);
      var G__6750 = i__4500__auto___6749 + 1;
      i__4500__auto___6749 = G__6750;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.move.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.move.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6744) {
  var vec__6745 = p__6744;
  var req = cljs.core.nth.call(null, vec__6745, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "move", "move", -2110884309), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.move.cljs$lang$maxFixedArity = 1;
cljs_http.client.move.cljs$lang$applyTo = function(seq6742) {
  var G__6743 = cljs.core.first.call(null, seq6742);
  var seq6742__$1 = cljs.core.next.call(null, seq6742);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6743, seq6742__$1);
};
cljs_http.client.options = function cljs_http$client$options(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6757 = arguments.length;
  var i__4500__auto___6758 = 0;
  while (true) {
    if (i__4500__auto___6758 < len__4499__auto___6757) {
      args__4502__auto__.push(arguments[i__4500__auto___6758]);
      var G__6759 = i__4500__auto___6758 + 1;
      i__4500__auto___6758 = G__6759;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.options.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.options.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6753) {
  var vec__6754 = p__6753;
  var req = cljs.core.nth.call(null, vec__6754, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.options.cljs$lang$maxFixedArity = 1;
cljs_http.client.options.cljs$lang$applyTo = function(seq6751) {
  var G__6752 = cljs.core.first.call(null, seq6751);
  var seq6751__$1 = cljs.core.next.call(null, seq6751);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6752, seq6751__$1);
};
cljs_http.client.patch = function cljs_http$client$patch(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6766 = arguments.length;
  var i__4500__auto___6767 = 0;
  while (true) {
    if (i__4500__auto___6767 < len__4499__auto___6766) {
      args__4502__auto__.push(arguments[i__4500__auto___6767]);
      var G__6768 = i__4500__auto___6767 + 1;
      i__4500__auto___6767 = G__6768;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.patch.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.patch.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6762) {
  var vec__6763 = p__6762;
  var req = cljs.core.nth.call(null, vec__6763, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "patch", "patch", 380775109), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.patch.cljs$lang$maxFixedArity = 1;
cljs_http.client.patch.cljs$lang$applyTo = function(seq6760) {
  var G__6761 = cljs.core.first.call(null, seq6760);
  var seq6760__$1 = cljs.core.next.call(null, seq6760);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6761, seq6760__$1);
};
cljs_http.client.post = function cljs_http$client$post(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6775 = arguments.length;
  var i__4500__auto___6776 = 0;
  while (true) {
    if (i__4500__auto___6776 < len__4499__auto___6775) {
      args__4502__auto__.push(arguments[i__4500__auto___6776]);
      var G__6777 = i__4500__auto___6776 + 1;
      i__4500__auto___6776 = G__6777;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.post.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.post.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6771) {
  var vec__6772 = p__6771;
  var req = cljs.core.nth.call(null, vec__6772, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.post.cljs$lang$maxFixedArity = 1;
cljs_http.client.post.cljs$lang$applyTo = function(seq6769) {
  var G__6770 = cljs.core.first.call(null, seq6769);
  var seq6769__$1 = cljs.core.next.call(null, seq6769);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6770, seq6769__$1);
};
cljs_http.client.put = function cljs_http$client$put(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___6784 = arguments.length;
  var i__4500__auto___6785 = 0;
  while (true) {
    if (i__4500__auto___6785 < len__4499__auto___6784) {
      args__4502__auto__.push(arguments[i__4500__auto___6785]);
      var G__6786 = i__4500__auto___6785 + 1;
      i__4500__auto___6785 = G__6786;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return cljs_http.client.put.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
cljs_http.client.put.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6780) {
  var vec__6781 = p__6780;
  var req = cljs.core.nth.call(null, vec__6781, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "put", "put", 1299772570), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.put.cljs$lang$maxFixedArity = 1;
cljs_http.client.put.cljs$lang$applyTo = function(seq6778) {
  var G__6779 = cljs.core.first.call(null, seq6778);
  var seq6778__$1 = cljs.core.next.call(null, seq6778);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6779, seq6778__$1);
};
goog.provide("goog.dom.InputType");
goog.dom.InputType = {BUTTON:"button", CHECKBOX:"checkbox", COLOR:"color", DATE:"date", DATETIME:"datetime", DATETIME_LOCAL:"datetime-local", EMAIL:"email", FILE:"file", HIDDEN:"hidden", IMAGE:"image", MENU:"menu", MONTH:"month", NUMBER:"number", PASSWORD:"password", RADIO:"radio", RANGE:"range", RESET:"reset", SEARCH:"search", SELECT_MULTIPLE:"select-multiple", SELECT_ONE:"select-one", SUBMIT:"submit", TEL:"tel", TEXT:"text", TEXTAREA:"textarea", TIME:"time", URL:"url", WEEK:"week"};
goog.provide("goog.window");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.window.DEFAULT_POPUP_HEIGHT = 500;
goog.window.DEFAULT_POPUP_WIDTH = 690;
goog.window.DEFAULT_POPUP_TARGET = "google_popup";
goog.window.createFakeWindow_ = function() {
  return {};
};
goog.window.open = function(linkRef, opt_options, opt_parentWin) {
  if (!opt_options) {
    opt_options = {};
  }
  var parentWin = opt_parentWin || window;
  var safeLinkRef;
  if (linkRef instanceof goog.html.SafeUrl) {
    safeLinkRef = linkRef;
  } else {
    var url = typeof linkRef.href != "undefined" ? linkRef.href : String(linkRef);
    safeLinkRef = goog.html.SafeUrl.sanitize(url);
  }
  var target = opt_options.target || linkRef.target;
  var sb = [];
  for (var option in opt_options) {
    switch(option) {
      case "width":
      case "height":
      case "top":
      case "left":
        sb.push(option + "\x3d" + opt_options[option]);
        break;
      case "target":
      case "noreferrer":
        break;
      default:
        sb.push(option + "\x3d" + (opt_options[option] ? 1 : 0));
    }
  }
  var optionString = sb.join(",");
  var newWin;
  if (goog.labs.userAgent.platform.isIos() && parentWin.navigator && parentWin.navigator["standalone"] && target && target != "_self") {
    var a = parentWin.document.createElement(String(goog.dom.TagName.A));
    goog.dom.safe.setAnchorHref(a, safeLinkRef);
    a.setAttribute("target", target);
    if (opt_options["noreferrer"]) {
      a.setAttribute("rel", "noreferrer");
    }
    var click = document.createEvent("MouseEvent");
    click.initMouseEvent("click", true, true, parentWin, 1);
    a.dispatchEvent(click);
    newWin = goog.window.createFakeWindow_();
  } else {
    if (opt_options["noreferrer"]) {
      newWin = parentWin.open("", target, optionString);
      var sanitizedLinkRef = goog.html.SafeUrl.unwrap(safeLinkRef);
      if (newWin) {
        if (goog.userAgent.EDGE_OR_IE) {
          if (goog.string.contains(sanitizedLinkRef, ";")) {
            sanitizedLinkRef = "'" + sanitizedLinkRef.replace(/'/g, "%27") + "'";
          }
        }
        newWin.opener = null;
        var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("b/12014412, meta tag with sanitized URL"), '\x3cMETA HTTP-EQUIV\x3d"refresh" content\x3d"0; url\x3d' + goog.string.htmlEscape(sanitizedLinkRef) + '"\x3e');
        goog.dom.safe.documentWrite(newWin.document, safeHtml);
        newWin.document.close();
      }
    } else {
      newWin = parentWin.open(goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);
    }
  }
  return newWin;
};
goog.window.openBlank = function(opt_message, opt_options, opt_parentWin) {
  var loadingMessage;
  if (!opt_message) {
    loadingMessage = "";
  } else {
    loadingMessage = goog.string.escapeString(goog.string.htmlEscape(opt_message));
  }
  var url = goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("b/12014412, encoded string in javascript: URL"), 'javascript:"' + encodeURI(loadingMessage) + '"');
  return goog.window.open(url, opt_options, opt_parentWin);
};
goog.window.popup = function(linkRef, opt_options) {
  if (!opt_options) {
    opt_options = {};
  }
  opt_options["target"] = opt_options["target"] || linkRef["target"] || goog.window.DEFAULT_POPUP_TARGET;
  opt_options["width"] = opt_options["width"] || goog.window.DEFAULT_POPUP_WIDTH;
  opt_options["height"] = opt_options["height"] || goog.window.DEFAULT_POPUP_HEIGHT;
  var newWin = goog.window.open(linkRef, opt_options);
  if (!newWin) {
    return true;
  }
  newWin.focus();
  return false;
};
goog.provide("goog.dom.forms");
goog.require("goog.dom.InputType");
goog.require("goog.dom.TagName");
goog.require("goog.structs.Map");
goog.require("goog.window");
goog.dom.forms.submitFormInNewWindow = function(form, opt_submitElement) {
  var formData = goog.dom.forms.getFormDataMap(form);
  var action = form.action;
  var method = form.method;
  if (opt_submitElement) {
    if (goog.dom.InputType.SUBMIT != opt_submitElement.type.toLowerCase()) {
      throw Error("opt_submitElement does not have a valid type.");
    }
    var submitValue = goog.dom.forms.getValue(opt_submitElement);
    if (submitValue != null) {
      goog.dom.forms.addFormDataToMap_(formData, opt_submitElement.name, submitValue);
    }
    if (opt_submitElement.getAttribute("formaction")) {
      action = opt_submitElement.getAttribute("formaction");
    }
    if (opt_submitElement.getAttribute("formmethod")) {
      method = opt_submitElement.getAttribute("formmethod");
    }
  }
  return goog.dom.forms.submitFormDataInNewWindow(action, method, formData);
};
goog.dom.forms.submitFormDataInNewWindow = function(actionUri, method, formData) {
  var newWin = goog.window.openBlank("", {noreferrer:true});
  if (!newWin) {
    return false;
  }
  var newDocument = newWin.document;
  var newForm = newDocument.createElement("form");
  newForm.method = method;
  newForm.action = actionUri;
  formData.forEach(function(fieldValues, fieldName) {
    for (var i = 0; i < fieldValues.length; i++) {
      var fieldValue = fieldValues[i];
      var newInput = newDocument.createElement("input");
      newInput.name = fieldName;
      newInput.value = fieldValue;
      newInput.type = "hidden";
      HTMLFormElement.prototype.appendChild.call(newForm, newInput);
    }
  });
  HTMLFormElement.prototype.submit.call(newForm);
  return true;
};
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0; el = els[i]; i++) {
    if (el.form != form || el.disabled || el.tagName == goog.dom.TagName.FIELDSET) {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case goog.dom.InputType.FILE:
      case goog.dom.InputType.SUBMIT:
      case goog.dom.InputType.RESET:
      case goog.dom.InputType.BUTTON:
        break;
      case goog.dom.InputType.SELECT_MULTIPLE:
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0; value = values[j]; j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
    }
  }
  var inputs = form.getElementsByTagName(String(goog.dom.TagName.INPUT));
  for (var input, i = 0; input = inputs[i]; i++) {
    if (input.form == form && input.type.toLowerCase() == goog.dom.InputType.IMAGE) {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0; el = els[i]; i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == goog.dom.InputType.FILE) {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == goog.dom.TagName.FORM) {
    var els = el.elements;
    for (var i = 0; el = els[i]; i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return !!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return !!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  switch(goog.isString(type) && type.toLowerCase()) {
    case goog.dom.InputType.CHECKBOX:
    case goog.dom.InputType.RADIO:
      return goog.dom.forms.getInputChecked_(el);
    case goog.dom.InputType.SELECT_ONE:
      return goog.dom.forms.getSelectSingle_(el);
    case goog.dom.InputType.SELECT_MULTIPLE:
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return el.value != null ? el.value : null;
  }
};
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0; i < els.length; i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0; option = el.options[i]; i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  switch(goog.isString(type) && type.toLowerCase()) {
    case goog.dom.InputType.CHECKBOX:
    case goog.dom.InputType.RADIO:
      goog.dom.forms.setInputChecked_(el, opt_value);
      return;
    case goog.dom.InputType.SELECT_ONE:
      goog.dom.forms.setSelectSingle_(el, opt_value);
      return;
    case goog.dom.InputType.SELECT_MULTIPLE:
      goog.dom.forms.setSelectMultiple_(el, opt_value);
      return;
    default:
      el.value = opt_value != null ? opt_value : "";
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0; option = el.options[i]; i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0; option = el.options[i]; i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0; value = opt_value[j]; j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0; i < args.length; i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return !goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0; i < classes.length; i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.events");
var div_1723 = document.createElement("div");
var test_html_1724 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_1723.innerHTML = test_html_1724;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_1723.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_1723.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_1723.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return !goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return (prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.asserts");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1; i < arguments.length; i++) {
    box.expandToIncludeCoordinate(arguments[i]);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += Number(opt_right);
    this.bottom += Number(opt_bottom);
    this.left -= Number(opt_left);
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {
  this.top = Math.min(this.top, coord.y);
  this.right = Math.max(this.right, coord.x);
  this.bottom = Math.max(this.bottom, coord.y);
  this.left = Math.min(this.left, coord.x);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    goog.asserts.assertNumber(tx);
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.IRect");
goog.math.IRect = function() {
};
goog.math.IRect.prototype.left;
goog.math.IRect.prototype.top;
goog.math.IRect.prototype.width;
goog.math.IRect.prototype.height;
goog.provide("goog.math.Rect");
goog.require("goog.asserts");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.IRect");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromPositionAndSize = function(position, size) {
  return new goog.math.Rect(position.x, position.y, size.width, size.height);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return [a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var newRect = new goog.math.Rect(a.left, a.top, a.width, a.height);
  newRect.boundingRect(b);
  return newRect;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Coordinate) {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  } else {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += goog.asserts.assertNumber(tx);
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.vendor");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.legacyconversions");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.reflect");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.events.Event");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    for (var key in style) {
      goog.style.setStyle_(element, style[key], key);
    }
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.styleNameCache_ = {};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var propertyName = goog.style.styleNameCache_[style];
  if (!propertyName) {
    var camelStyle = goog.string.toCamelCase(style);
    propertyName = camelStyle;
    if (element.style[camelStyle] === undefined) {
      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
      if (element.style[prefixedStyle] !== undefined) {
        propertyName = prefixedStyle;
      }
    }
    goog.style.styleNameCache_[style] = propertyName;
  }
  return propertyName;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_(x, false);
  el.style.top = goog.style.getPixelStyleValue_(y, false);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return {"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return rect;
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    goog.asserts.assert(element && "offsetParent" in element);
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode; parent && parent != doc; parent = parent.parentNode) {
    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host) {
      parent = parent.host;
    }
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent;
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element; el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  if (container == goog.dom.getDocumentScrollElement()) {
    var relX = elementPos.x - container.scrollLeft;
    var relY = elementPos.y - container.scrollTop;
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10)) {
      relX += containerBorder.left;
      relY += containerBorder.top;
    }
  } else {
    var relX = elementPos.x - containerPos.x - containerBorder.left;
    var relY = elementPos.y - containerPos.y - containerBorder.top;
  }
  var elementSize = goog.style.getSizeWithDisplay_(element);
  var spaceX = container.clientWidth - elementSize.width;
  var spaceY = container.clientHeight - elementSize.height;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  goog.asserts.assertObject(el, "Parameter is required");
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  var box = goog.style.getBoundingClientRect_(el);
  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
  pos.x = box.left + scrollCoord.x;
  pos.y = box.top + scrollCoord.y;
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  if (!goog.reflect.canAccessProperty(currentWin, "parent")) {
    return position;
  }
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && currentWin != currentWin.parent && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var box = goog.style.getBoundingClientRect_(el);
  return new goog.math.Coordinate(box.left, box.top);
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_(el);
  } else {
    var targetEvent = el.changedTouches ? el.changedTouches[0] : el;
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = goog.asserts.assertNumber(x) - cur.x;
  var dy = Number(opt_y) - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h);
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, element);
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  goog.asserts.assert(el);
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  goog.asserts.assert(el);
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + Number(alpha) * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  return goog.style.installSafeStyleSheet(goog.html.legacyconversions.safeStyleSheetFromString(stylesString), opt_node);
};
goog.style.installSafeStyleSheet = function(safeStyleSheet, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);
  } else {
    var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];
      head = dh.createDom(goog.dom.TagName.HEAD);
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom(goog.dom.TagName.STYLE);
    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  goog.style.setSafeStyleSheet(element, goog.html.legacyconversions.safeStyleSheetFromString(stylesString));
};
goog.style.setSafeStyleSheet = function(element, safeStyleSheet) {
  var stylesString = goog.html.SafeStyleSheet.unwrap(safeStyleSheet);
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    style.display = "inline-block";
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT || goog.userAgent.EDGE ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    if (el.style) {
      el.style[name] = value;
    }
    if (descendants) {
      for (var i = 0, descendant; descendant = descendants[i]; i++) {
        if (descendant.style) {
          descendant.style[name] = value;
        }
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant; descendant = descendants[i]; i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return +pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (String(sizeUnits) in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && String(sizeUnits) in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.match(/\s*([\w-]+)\s*:(.+)/);
    if (keyValue) {
      var styleName = keyValue[1];
      var styleValue = goog.string.trim(keyValue[2]);
      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.userAgent");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.hasActiveXObjectSupport_ = function() {
  if (!goog.userAgent.IE) {
    return false;
  }
  try {
    new ActiveXObject("MSXML2.DOMDocument");
    return true;
  } catch (e) {
    return false;
  }
};
goog.dom.xml.ACTIVEX_SUPPORT = goog.userAgent.IE && goog.dom.xml.hasActiveXObjectSupport_();
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri, opt_preferActiveX) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument && !(goog.dom.xml.ACTIVEX_SUPPORT && opt_preferActiveX)) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (goog.dom.xml.ACTIVEX_SUPPORT) {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml, opt_preferActiveX) {
  if (typeof DOMParser != "undefined" && !(goog.dom.xml.ACTIVEX_SUPPORT && opt_preferActiveX)) {
    return (new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (goog.dom.xml.ACTIVEX_SUPPORT) {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  var text = xml.xml;
  if (text) {
    return text;
  }
  if (typeof XMLSerializer != "undefined") {
    return (new XMLSerializer).serializeToString(xml);
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0; i < count; i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return [];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom.xml");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.events");
goog.require("goog.style");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("domina.support");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_1754 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_1755 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_1756 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", -1987822328), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_1756, opt_wrapper_1754, table_section_wrapper_1755, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, 
cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_1754, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_1755, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_1755, cell_wrapper_1756, table_section_wrapper_1755, table_section_wrapper_1755]);
domina.remove_extraneous_tbody_BANG_ = function domina$remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3911__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3911__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3911__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__1757 = cljs.core.seq.call(null, tbody);
  var chunk__1758 = null;
  var count__1759 = 0;
  var i__1760 = 0;
  while (true) {
    if (i__1760 < count__1759) {
      var child = cljs.core._nth.call(null, chunk__1758, i__1760);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__1761 = seq__1757;
      var G__1762 = chunk__1758;
      var G__1763 = count__1759;
      var G__1764 = i__1760 + 1;
      seq__1757 = G__1761;
      chunk__1758 = G__1762;
      count__1759 = G__1763;
      i__1760 = G__1764;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__1757);
      if (temp__4657__auto__) {
        var seq__1757__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1757__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__1757__$1);
          var G__1765 = cljs.core.chunk_rest.call(null, seq__1757__$1);
          var G__1766 = c__4319__auto__;
          var G__1767 = cljs.core.count.call(null, c__4319__auto__);
          var G__1768 = 0;
          seq__1757 = G__1765;
          chunk__1758 = G__1766;
          count__1759 = G__1767;
          i__1760 = G__1768;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__1757__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__1769 = cljs.core.next.call(null, seq__1757__$1);
          var G__1770 = null;
          var G__1771 = 0;
          var G__1772 = 0;
          seq__1757 = G__1769;
          chunk__1758 = G__1770;
          count__1759 = G__1771;
          i__1760 = G__1772;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function domina$restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function domina$html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__1773 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__1773, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__1773, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__1773, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(start_wrap), cljs.core.str.cljs$core$IFn$_invoke$arity$1(html__$1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(end_wrap)].join("");
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__1776 = wrapper.lastChild;
        var G__1777 = level - 1;
        wrapper = G__1776;
        level = G__1777;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (domina.support.extraneous_tbody_QMARK_) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = !domina.support.leading_whitespace_QMARK_;
    if (and__3911__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3911__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function domina$string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
};
domina.nodes = function domina$nodes(content) {
  if (!(content == null) && !(content.domina$DomContent$nodes$arity$1 == null)) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4211__auto__ = content == null ? null : content;
    var m__4212__auto__ = domina.nodes[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, content);
    } else {
      var m__4212__auto____$1 = domina.nodes["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, content);
      } else {
        throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
      }
    }
  }
};
domina.single_node = function domina$single_node(nodeseq) {
  if (!(nodeseq == null) && !(nodeseq.domina$DomContent$single_node$arity$1 == null)) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4211__auto__ = nodeseq == null ? null : nodeseq;
    var m__4212__auto__ = domina.single_node[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, nodeseq);
    } else {
      var m__4212__auto____$1 = domina.single_node["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, nodeseq);
      } else {
        throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
      }
    }
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function domina$log_debug(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1779 = arguments.length;
  var i__4500__auto___1780 = 0;
  while (true) {
    if (i__4500__auto___1780 < len__4499__auto___1779) {
      args__4502__auto__.push(arguments[i__4500__auto___1780]);
      var G__1781 = i__4500__auto___1780 + 1;
      i__4500__auto___1780 = G__1781;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return domina.log_debug.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
domina.log_debug.cljs$core$IFn$_invoke$arity$variadic = function(mesg) {
  if (domina._STAR_debug_STAR_ && !cljs.core._EQ_.call(null, window.console, undefined)) {
    return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
  } else {
    return null;
  }
};
domina.log_debug.cljs$lang$maxFixedArity = 0;
domina.log_debug.cljs$lang$applyTo = function(seq1778) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1778));
};
domina.log = function domina$log(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1783 = arguments.length;
  var i__4500__auto___1784 = 0;
  while (true) {
    if (i__4500__auto___1784 < len__4499__auto___1783) {
      args__4502__auto__.push(arguments[i__4500__auto___1784]);
      var G__1785 = i__4500__auto___1784 + 1;
      i__4500__auto___1784 = G__1785;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return domina.log.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
domina.log.cljs$core$IFn$_invoke$arity$variadic = function(mesg) {
  if (cljs.core.truth_(window.console)) {
    return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
  } else {
    return null;
  }
};
domina.log.cljs$lang$maxFixedArity = 0;
domina.log.cljs$lang$applyTo = function(seq1782) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1782));
};
domina.by_id = function domina$by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function domina$by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function domina$children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function domina$common_ancestor(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1787 = arguments.length;
  var i__4500__auto___1788 = 0;
  while (true) {
    if (i__4500__auto___1788 < len__4499__auto___1787) {
      args__4502__auto__.push(arguments[i__4500__auto___1788]);
      var G__1789 = i__4500__auto___1788 + 1;
      i__4500__auto___1788 = G__1789;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return domina.common_ancestor.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
domina.common_ancestor.cljs$core$IFn$_invoke$arity$variadic = function(contents) {
  return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
};
domina.common_ancestor.cljs$lang$maxFixedArity = 0;
domina.common_ancestor.cljs$lang$applyTo = function(seq1786) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1786));
};
domina.ancestor_QMARK_ = function domina$ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function domina$clone(content) {
  return cljs.core.map.call(null, function(p1__1790_SHARP_) {
    return p1__1790_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function domina$append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function domina$insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__1791_SHARP_, p2__1792_SHARP_) {
    return goog.dom.insertChildAt(p1__1791_SHARP_, p2__1792_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function domina$prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function domina$insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__1794_SHARP_, p2__1793_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__1793_SHARP_, p1__1794_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function domina$insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__1796_SHARP_, p2__1795_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__1795_SHARP_, p1__1796_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function domina$swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__1798_SHARP_, p2__1797_SHARP_) {
    return goog.dom.replaceNode(p2__1797_SHARP_, p1__1798_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function domina$detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function domina$destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function domina$destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function domina$style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (clojure.string.blank_QMARK_.call(null, s)) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function domina$attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function domina$set_style_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1806 = arguments.length;
  var i__4500__auto___1807 = 0;
  while (true) {
    if (i__4500__auto___1807 < len__4499__auto___1806) {
      args__4502__auto__.push(arguments[i__4500__auto___1807]);
      var G__1808 = i__4500__auto___1807 + 1;
      i__4500__auto___1807 = G__1808;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(content, name, value) {
  var seq__1802_1809 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__1803_1810 = null;
  var count__1804_1811 = 0;
  var i__1805_1812 = 0;
  while (true) {
    if (i__1805_1812 < count__1804_1811) {
      var n_1813 = cljs.core._nth.call(null, chunk__1803_1810, i__1805_1812);
      goog.style.setStyle(n_1813, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
      var G__1814 = seq__1802_1809;
      var G__1815 = chunk__1803_1810;
      var G__1816 = count__1804_1811;
      var G__1817 = i__1805_1812 + 1;
      seq__1802_1809 = G__1814;
      chunk__1803_1810 = G__1815;
      count__1804_1811 = G__1816;
      i__1805_1812 = G__1817;
      continue;
    } else {
      var temp__4657__auto___1818 = cljs.core.seq.call(null, seq__1802_1809);
      if (temp__4657__auto___1818) {
        var seq__1802_1819__$1 = temp__4657__auto___1818;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1802_1819__$1)) {
          var c__4319__auto___1820 = cljs.core.chunk_first.call(null, seq__1802_1819__$1);
          var G__1821 = cljs.core.chunk_rest.call(null, seq__1802_1819__$1);
          var G__1822 = c__4319__auto___1820;
          var G__1823 = cljs.core.count.call(null, c__4319__auto___1820);
          var G__1824 = 0;
          seq__1802_1809 = G__1821;
          chunk__1803_1810 = G__1822;
          count__1804_1811 = G__1823;
          i__1805_1812 = G__1824;
          continue;
        } else {
          var n_1825 = cljs.core.first.call(null, seq__1802_1819__$1);
          goog.style.setStyle(n_1825, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
          var G__1826 = cljs.core.next.call(null, seq__1802_1819__$1);
          var G__1827 = null;
          var G__1828 = 0;
          var G__1829 = 0;
          seq__1802_1809 = G__1826;
          chunk__1803_1810 = G__1827;
          count__1804_1811 = G__1828;
          i__1805_1812 = G__1829;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_style_BANG_.cljs$lang$maxFixedArity = 2;
domina.set_style_BANG_.cljs$lang$applyTo = function(seq1799) {
  var G__1800 = cljs.core.first.call(null, seq1799);
  var seq1799__$1 = cljs.core.next.call(null, seq1799);
  var G__1801 = cljs.core.first.call(null, seq1799__$1);
  var seq1799__$2 = cljs.core.next.call(null, seq1799__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1800, G__1801, seq1799__$2);
};
domina.set_attr_BANG_ = function domina$set_attr_BANG_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___1837 = arguments.length;
  var i__4500__auto___1838 = 0;
  while (true) {
    if (i__4500__auto___1838 < len__4499__auto___1837) {
      args__4502__auto__.push(arguments[i__4500__auto___1838]);
      var G__1839 = i__4500__auto___1838 + 1;
      i__4500__auto___1838 = G__1839;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(content, name, value) {
  var seq__1833_1840 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__1834_1841 = null;
  var count__1835_1842 = 0;
  var i__1836_1843 = 0;
  while (true) {
    if (i__1836_1843 < count__1835_1842) {
      var n_1844 = cljs.core._nth.call(null, chunk__1834_1841, i__1836_1843);
      n_1844.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
      var G__1845 = seq__1833_1840;
      var G__1846 = chunk__1834_1841;
      var G__1847 = count__1835_1842;
      var G__1848 = i__1836_1843 + 1;
      seq__1833_1840 = G__1845;
      chunk__1834_1841 = G__1846;
      count__1835_1842 = G__1847;
      i__1836_1843 = G__1848;
      continue;
    } else {
      var temp__4657__auto___1849 = cljs.core.seq.call(null, seq__1833_1840);
      if (temp__4657__auto___1849) {
        var seq__1833_1850__$1 = temp__4657__auto___1849;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1833_1850__$1)) {
          var c__4319__auto___1851 = cljs.core.chunk_first.call(null, seq__1833_1850__$1);
          var G__1852 = cljs.core.chunk_rest.call(null, seq__1833_1850__$1);
          var G__1853 = c__4319__auto___1851;
          var G__1854 = cljs.core.count.call(null, c__4319__auto___1851);
          var G__1855 = 0;
          seq__1833_1840 = G__1852;
          chunk__1834_1841 = G__1853;
          count__1835_1842 = G__1854;
          i__1836_1843 = G__1855;
          continue;
        } else {
          var n_1856 = cljs.core.first.call(null, seq__1833_1850__$1);
          n_1856.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
          var G__1857 = cljs.core.next.call(null, seq__1833_1850__$1);
          var G__1858 = null;
          var G__1859 = 0;
          var G__1860 = 0;
          seq__1833_1840 = G__1857;
          chunk__1834_1841 = G__1858;
          count__1835_1842 = G__1859;
          i__1836_1843 = G__1860;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attr_BANG_.cljs$lang$maxFixedArity = 2;
domina.set_attr_BANG_.cljs$lang$applyTo = function(seq1830) {
  var G__1831 = cljs.core.first.call(null, seq1830);
  var seq1830__$1 = cljs.core.next.call(null, seq1830);
  var G__1832 = cljs.core.first.call(null, seq1830__$1);
  var seq1830__$2 = cljs.core.next.call(null, seq1830__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1831, G__1832, seq1830__$2);
};
domina.remove_attr_BANG_ = function domina$remove_attr_BANG_(content, name) {
  var seq__1861_1865 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__1862_1866 = null;
  var count__1863_1867 = 0;
  var i__1864_1868 = 0;
  while (true) {
    if (i__1864_1868 < count__1863_1867) {
      var n_1869 = cljs.core._nth.call(null, chunk__1862_1866, i__1864_1868);
      n_1869.removeAttribute(cljs.core.name.call(null, name));
      var G__1870 = seq__1861_1865;
      var G__1871 = chunk__1862_1866;
      var G__1872 = count__1863_1867;
      var G__1873 = i__1864_1868 + 1;
      seq__1861_1865 = G__1870;
      chunk__1862_1866 = G__1871;
      count__1863_1867 = G__1872;
      i__1864_1868 = G__1873;
      continue;
    } else {
      var temp__4657__auto___1874 = cljs.core.seq.call(null, seq__1861_1865);
      if (temp__4657__auto___1874) {
        var seq__1861_1875__$1 = temp__4657__auto___1874;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1861_1875__$1)) {
          var c__4319__auto___1876 = cljs.core.chunk_first.call(null, seq__1861_1875__$1);
          var G__1877 = cljs.core.chunk_rest.call(null, seq__1861_1875__$1);
          var G__1878 = c__4319__auto___1876;
          var G__1879 = cljs.core.count.call(null, c__4319__auto___1876);
          var G__1880 = 0;
          seq__1861_1865 = G__1877;
          chunk__1862_1866 = G__1878;
          count__1863_1867 = G__1879;
          i__1864_1868 = G__1880;
          continue;
        } else {
          var n_1881 = cljs.core.first.call(null, seq__1861_1875__$1);
          n_1881.removeAttribute(cljs.core.name.call(null, name));
          var G__1882 = cljs.core.next.call(null, seq__1861_1875__$1);
          var G__1883 = null;
          var G__1884 = 0;
          var G__1885 = 0;
          seq__1861_1865 = G__1882;
          chunk__1862_1866 = G__1883;
          count__1863_1867 = G__1884;
          i__1864_1868 = G__1885;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function domina$parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__1886 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__1886, 0, null);
    var v = cljs.core.nth.call(null, vec__1886, 1, null);
    if (cljs.core.truth_(function() {
      var and__3911__auto__ = k;
      if (cljs.core.truth_(and__3911__auto__)) {
        return v;
      } else {
        return and__3911__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function domina$styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function domina$attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs) {
    return function(p1__1889_SHARP_) {
      var attr = attrs.item(p1__1889_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue]);
      } else {
        return null;
      }
    };
  }(node, attrs), cljs.core.range.call(null, attrs.length))));
};
domina.set_styles_BANG_ = function domina$set_styles_BANG_(content, styles) {
  var seq__1890_1900 = cljs.core.seq.call(null, styles);
  var chunk__1891_1901 = null;
  var count__1892_1902 = 0;
  var i__1893_1903 = 0;
  while (true) {
    if (i__1893_1903 < count__1892_1902) {
      var vec__1894_1904 = cljs.core._nth.call(null, chunk__1891_1901, i__1893_1903);
      var name_1905 = cljs.core.nth.call(null, vec__1894_1904, 0, null);
      var value_1906 = cljs.core.nth.call(null, vec__1894_1904, 1, null);
      domina.set_style_BANG_.call(null, content, name_1905, value_1906);
      var G__1907 = seq__1890_1900;
      var G__1908 = chunk__1891_1901;
      var G__1909 = count__1892_1902;
      var G__1910 = i__1893_1903 + 1;
      seq__1890_1900 = G__1907;
      chunk__1891_1901 = G__1908;
      count__1892_1902 = G__1909;
      i__1893_1903 = G__1910;
      continue;
    } else {
      var temp__4657__auto___1911 = cljs.core.seq.call(null, seq__1890_1900);
      if (temp__4657__auto___1911) {
        var seq__1890_1912__$1 = temp__4657__auto___1911;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1890_1912__$1)) {
          var c__4319__auto___1913 = cljs.core.chunk_first.call(null, seq__1890_1912__$1);
          var G__1914 = cljs.core.chunk_rest.call(null, seq__1890_1912__$1);
          var G__1915 = c__4319__auto___1913;
          var G__1916 = cljs.core.count.call(null, c__4319__auto___1913);
          var G__1917 = 0;
          seq__1890_1900 = G__1914;
          chunk__1891_1901 = G__1915;
          count__1892_1902 = G__1916;
          i__1893_1903 = G__1917;
          continue;
        } else {
          var vec__1897_1918 = cljs.core.first.call(null, seq__1890_1912__$1);
          var name_1919 = cljs.core.nth.call(null, vec__1897_1918, 0, null);
          var value_1920 = cljs.core.nth.call(null, vec__1897_1918, 1, null);
          domina.set_style_BANG_.call(null, content, name_1919, value_1920);
          var G__1921 = cljs.core.next.call(null, seq__1890_1912__$1);
          var G__1922 = null;
          var G__1923 = 0;
          var G__1924 = 0;
          seq__1890_1900 = G__1921;
          chunk__1891_1901 = G__1922;
          count__1892_1902 = G__1923;
          i__1893_1903 = G__1924;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function domina$set_attrs_BANG_(content, attrs) {
  var seq__1925_1935 = cljs.core.seq.call(null, attrs);
  var chunk__1926_1936 = null;
  var count__1927_1937 = 0;
  var i__1928_1938 = 0;
  while (true) {
    if (i__1928_1938 < count__1927_1937) {
      var vec__1929_1939 = cljs.core._nth.call(null, chunk__1926_1936, i__1928_1938);
      var name_1940 = cljs.core.nth.call(null, vec__1929_1939, 0, null);
      var value_1941 = cljs.core.nth.call(null, vec__1929_1939, 1, null);
      domina.set_attr_BANG_.call(null, content, name_1940, value_1941);
      var G__1942 = seq__1925_1935;
      var G__1943 = chunk__1926_1936;
      var G__1944 = count__1927_1937;
      var G__1945 = i__1928_1938 + 1;
      seq__1925_1935 = G__1942;
      chunk__1926_1936 = G__1943;
      count__1927_1937 = G__1944;
      i__1928_1938 = G__1945;
      continue;
    } else {
      var temp__4657__auto___1946 = cljs.core.seq.call(null, seq__1925_1935);
      if (temp__4657__auto___1946) {
        var seq__1925_1947__$1 = temp__4657__auto___1946;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1925_1947__$1)) {
          var c__4319__auto___1948 = cljs.core.chunk_first.call(null, seq__1925_1947__$1);
          var G__1949 = cljs.core.chunk_rest.call(null, seq__1925_1947__$1);
          var G__1950 = c__4319__auto___1948;
          var G__1951 = cljs.core.count.call(null, c__4319__auto___1948);
          var G__1952 = 0;
          seq__1925_1935 = G__1949;
          chunk__1926_1936 = G__1950;
          count__1927_1937 = G__1951;
          i__1928_1938 = G__1952;
          continue;
        } else {
          var vec__1932_1953 = cljs.core.first.call(null, seq__1925_1947__$1);
          var name_1954 = cljs.core.nth.call(null, vec__1932_1953, 0, null);
          var value_1955 = cljs.core.nth.call(null, vec__1932_1953, 1, null);
          domina.set_attr_BANG_.call(null, content, name_1954, value_1955);
          var G__1956 = cljs.core.next.call(null, seq__1925_1947__$1);
          var G__1957 = null;
          var G__1958 = 0;
          var G__1959 = 0;
          seq__1925_1935 = G__1956;
          chunk__1926_1936 = G__1957;
          count__1927_1937 = G__1958;
          i__1928_1938 = G__1959;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function domina$has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function domina$add_class_BANG_(content, class$) {
  var seq__1960_1964 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__1961_1965 = null;
  var count__1962_1966 = 0;
  var i__1963_1967 = 0;
  while (true) {
    if (i__1963_1967 < count__1962_1966) {
      var node_1968 = cljs.core._nth.call(null, chunk__1961_1965, i__1963_1967);
      goog.dom.classes.add(node_1968, class$);
      var G__1969 = seq__1960_1964;
      var G__1970 = chunk__1961_1965;
      var G__1971 = count__1962_1966;
      var G__1972 = i__1963_1967 + 1;
      seq__1960_1964 = G__1969;
      chunk__1961_1965 = G__1970;
      count__1962_1966 = G__1971;
      i__1963_1967 = G__1972;
      continue;
    } else {
      var temp__4657__auto___1973 = cljs.core.seq.call(null, seq__1960_1964);
      if (temp__4657__auto___1973) {
        var seq__1960_1974__$1 = temp__4657__auto___1973;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1960_1974__$1)) {
          var c__4319__auto___1975 = cljs.core.chunk_first.call(null, seq__1960_1974__$1);
          var G__1976 = cljs.core.chunk_rest.call(null, seq__1960_1974__$1);
          var G__1977 = c__4319__auto___1975;
          var G__1978 = cljs.core.count.call(null, c__4319__auto___1975);
          var G__1979 = 0;
          seq__1960_1964 = G__1976;
          chunk__1961_1965 = G__1977;
          count__1962_1966 = G__1978;
          i__1963_1967 = G__1979;
          continue;
        } else {
          var node_1980 = cljs.core.first.call(null, seq__1960_1974__$1);
          goog.dom.classes.add(node_1980, class$);
          var G__1981 = cljs.core.next.call(null, seq__1960_1974__$1);
          var G__1982 = null;
          var G__1983 = 0;
          var G__1984 = 0;
          seq__1960_1964 = G__1981;
          chunk__1961_1965 = G__1982;
          count__1962_1966 = G__1983;
          i__1963_1967 = G__1984;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function domina$remove_class_BANG_(content, class$) {
  var seq__1985_1989 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__1986_1990 = null;
  var count__1987_1991 = 0;
  var i__1988_1992 = 0;
  while (true) {
    if (i__1988_1992 < count__1987_1991) {
      var node_1993 = cljs.core._nth.call(null, chunk__1986_1990, i__1988_1992);
      goog.dom.classes.remove(node_1993, class$);
      var G__1994 = seq__1985_1989;
      var G__1995 = chunk__1986_1990;
      var G__1996 = count__1987_1991;
      var G__1997 = i__1988_1992 + 1;
      seq__1985_1989 = G__1994;
      chunk__1986_1990 = G__1995;
      count__1987_1991 = G__1996;
      i__1988_1992 = G__1997;
      continue;
    } else {
      var temp__4657__auto___1998 = cljs.core.seq.call(null, seq__1985_1989);
      if (temp__4657__auto___1998) {
        var seq__1985_1999__$1 = temp__4657__auto___1998;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1985_1999__$1)) {
          var c__4319__auto___2000 = cljs.core.chunk_first.call(null, seq__1985_1999__$1);
          var G__2001 = cljs.core.chunk_rest.call(null, seq__1985_1999__$1);
          var G__2002 = c__4319__auto___2000;
          var G__2003 = cljs.core.count.call(null, c__4319__auto___2000);
          var G__2004 = 0;
          seq__1985_1989 = G__2001;
          chunk__1986_1990 = G__2002;
          count__1987_1991 = G__2003;
          i__1988_1992 = G__2004;
          continue;
        } else {
          var node_2005 = cljs.core.first.call(null, seq__1985_1999__$1);
          goog.dom.classes.remove(node_2005, class$);
          var G__2006 = cljs.core.next.call(null, seq__1985_1999__$1);
          var G__2007 = null;
          var G__2008 = 0;
          var G__2009 = 0;
          seq__1985_1989 = G__2006;
          chunk__1986_1990 = G__2007;
          count__1987_1991 = G__2008;
          i__1988_1992 = G__2009;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function domina$toggle_class_BANG_(content, class$) {
  var seq__2010_2014 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__2011_2015 = null;
  var count__2012_2016 = 0;
  var i__2013_2017 = 0;
  while (true) {
    if (i__2013_2017 < count__2012_2016) {
      var node_2018 = cljs.core._nth.call(null, chunk__2011_2015, i__2013_2017);
      goog.dom.classes.toggle(node_2018, class$);
      var G__2019 = seq__2010_2014;
      var G__2020 = chunk__2011_2015;
      var G__2021 = count__2012_2016;
      var G__2022 = i__2013_2017 + 1;
      seq__2010_2014 = G__2019;
      chunk__2011_2015 = G__2020;
      count__2012_2016 = G__2021;
      i__2013_2017 = G__2022;
      continue;
    } else {
      var temp__4657__auto___2023 = cljs.core.seq.call(null, seq__2010_2014);
      if (temp__4657__auto___2023) {
        var seq__2010_2024__$1 = temp__4657__auto___2023;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2010_2024__$1)) {
          var c__4319__auto___2025 = cljs.core.chunk_first.call(null, seq__2010_2024__$1);
          var G__2026 = cljs.core.chunk_rest.call(null, seq__2010_2024__$1);
          var G__2027 = c__4319__auto___2025;
          var G__2028 = cljs.core.count.call(null, c__4319__auto___2025);
          var G__2029 = 0;
          seq__2010_2014 = G__2026;
          chunk__2011_2015 = G__2027;
          count__2012_2016 = G__2028;
          i__2013_2017 = G__2029;
          continue;
        } else {
          var node_2030 = cljs.core.first.call(null, seq__2010_2024__$1);
          goog.dom.classes.toggle(node_2030, class$);
          var G__2031 = cljs.core.next.call(null, seq__2010_2024__$1);
          var G__2032 = null;
          var G__2033 = 0;
          var G__2034 = 0;
          seq__2010_2014 = G__2031;
          chunk__2011_2015 = G__2032;
          count__2012_2016 = G__2033;
          i__2013_2017 = G__2034;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function domina$classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function domina$set_classes_BANG_(content, classes) {
  var classes_2039__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__2035_2040 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__2036_2041 = null;
  var count__2037_2042 = 0;
  var i__2038_2043 = 0;
  while (true) {
    if (i__2038_2043 < count__2037_2042) {
      var node_2044 = cljs.core._nth.call(null, chunk__2036_2041, i__2038_2043);
      goog.dom.classes.set(node_2044, classes_2039__$1);
      var G__2045 = seq__2035_2040;
      var G__2046 = chunk__2036_2041;
      var G__2047 = count__2037_2042;
      var G__2048 = i__2038_2043 + 1;
      seq__2035_2040 = G__2045;
      chunk__2036_2041 = G__2046;
      count__2037_2042 = G__2047;
      i__2038_2043 = G__2048;
      continue;
    } else {
      var temp__4657__auto___2049 = cljs.core.seq.call(null, seq__2035_2040);
      if (temp__4657__auto___2049) {
        var seq__2035_2050__$1 = temp__4657__auto___2049;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2035_2050__$1)) {
          var c__4319__auto___2051 = cljs.core.chunk_first.call(null, seq__2035_2050__$1);
          var G__2052 = cljs.core.chunk_rest.call(null, seq__2035_2050__$1);
          var G__2053 = c__4319__auto___2051;
          var G__2054 = cljs.core.count.call(null, c__4319__auto___2051);
          var G__2055 = 0;
          seq__2035_2040 = G__2052;
          chunk__2036_2041 = G__2053;
          count__2037_2042 = G__2054;
          i__2038_2043 = G__2055;
          continue;
        } else {
          var node_2056 = cljs.core.first.call(null, seq__2035_2050__$1);
          goog.dom.classes.set(node_2056, classes_2039__$1);
          var G__2057 = cljs.core.next.call(null, seq__2035_2050__$1);
          var G__2058 = null;
          var G__2059 = 0;
          var G__2060 = 0;
          seq__2035_2040 = G__2057;
          chunk__2036_2041 = G__2058;
          count__2037_2042 = G__2059;
          i__2038_2043 = G__2060;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function domina$text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function domina$set_text_BANG_(content, value) {
  var seq__2061_2065 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__2062_2066 = null;
  var count__2063_2067 = 0;
  var i__2064_2068 = 0;
  while (true) {
    if (i__2064_2068 < count__2063_2067) {
      var node_2069 = cljs.core._nth.call(null, chunk__2062_2066, i__2064_2068);
      goog.dom.setTextContent(node_2069, value);
      var G__2070 = seq__2061_2065;
      var G__2071 = chunk__2062_2066;
      var G__2072 = count__2063_2067;
      var G__2073 = i__2064_2068 + 1;
      seq__2061_2065 = G__2070;
      chunk__2062_2066 = G__2071;
      count__2063_2067 = G__2072;
      i__2064_2068 = G__2073;
      continue;
    } else {
      var temp__4657__auto___2074 = cljs.core.seq.call(null, seq__2061_2065);
      if (temp__4657__auto___2074) {
        var seq__2061_2075__$1 = temp__4657__auto___2074;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2061_2075__$1)) {
          var c__4319__auto___2076 = cljs.core.chunk_first.call(null, seq__2061_2075__$1);
          var G__2077 = cljs.core.chunk_rest.call(null, seq__2061_2075__$1);
          var G__2078 = c__4319__auto___2076;
          var G__2079 = cljs.core.count.call(null, c__4319__auto___2076);
          var G__2080 = 0;
          seq__2061_2065 = G__2077;
          chunk__2062_2066 = G__2078;
          count__2063_2067 = G__2079;
          i__2064_2068 = G__2080;
          continue;
        } else {
          var node_2081 = cljs.core.first.call(null, seq__2061_2075__$1);
          goog.dom.setTextContent(node_2081, value);
          var G__2082 = cljs.core.next.call(null, seq__2061_2075__$1);
          var G__2083 = null;
          var G__2084 = 0;
          var G__2085 = 0;
          seq__2061_2065 = G__2082;
          chunk__2062_2066 = G__2083;
          count__2063_2067 = G__2084;
          i__2064_2068 = G__2085;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function domina$value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function domina$set_value_BANG_(content, value) {
  var seq__2086_2090 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__2087_2091 = null;
  var count__2088_2092 = 0;
  var i__2089_2093 = 0;
  while (true) {
    if (i__2089_2093 < count__2088_2092) {
      var node_2094 = cljs.core._nth.call(null, chunk__2087_2091, i__2089_2093);
      goog.dom.forms.setValue(node_2094, value);
      var G__2095 = seq__2086_2090;
      var G__2096 = chunk__2087_2091;
      var G__2097 = count__2088_2092;
      var G__2098 = i__2089_2093 + 1;
      seq__2086_2090 = G__2095;
      chunk__2087_2091 = G__2096;
      count__2088_2092 = G__2097;
      i__2089_2093 = G__2098;
      continue;
    } else {
      var temp__4657__auto___2099 = cljs.core.seq.call(null, seq__2086_2090);
      if (temp__4657__auto___2099) {
        var seq__2086_2100__$1 = temp__4657__auto___2099;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2086_2100__$1)) {
          var c__4319__auto___2101 = cljs.core.chunk_first.call(null, seq__2086_2100__$1);
          var G__2102 = cljs.core.chunk_rest.call(null, seq__2086_2100__$1);
          var G__2103 = c__4319__auto___2101;
          var G__2104 = cljs.core.count.call(null, c__4319__auto___2101);
          var G__2105 = 0;
          seq__2086_2090 = G__2102;
          chunk__2087_2091 = G__2103;
          count__2088_2092 = G__2104;
          i__2089_2093 = G__2105;
          continue;
        } else {
          var node_2106 = cljs.core.first.call(null, seq__2086_2100__$1);
          goog.dom.forms.setValue(node_2106, value);
          var G__2107 = cljs.core.next.call(null, seq__2086_2100__$1);
          var G__2108 = null;
          var G__2109 = 0;
          var G__2110 = 0;
          seq__2086_2090 = G__2107;
          chunk__2087_2091 = G__2108;
          count__2088_2092 = G__2109;
          i__2089_2093 = G__2110;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function domina$html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function domina$replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function domina$set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (allows_inner_html_QMARK_ && (domina.support.leading_whitespace_QMARK_ || cljs.core.not.call(null, leading_whitespace_QMARK_)) && !special_tag_QMARK_) {
    var value_2116 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__2112_2117 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__2113_2118 = null;
      var count__2114_2119 = 0;
      var i__2115_2120 = 0;
      while (true) {
        if (i__2115_2120 < count__2114_2119) {
          var node_2121 = cljs.core._nth.call(null, chunk__2113_2118, i__2115_2120);
          node_2121.innerHTML = value_2116;
          var G__2122 = seq__2112_2117;
          var G__2123 = chunk__2113_2118;
          var G__2124 = count__2114_2119;
          var G__2125 = i__2115_2120 + 1;
          seq__2112_2117 = G__2122;
          chunk__2113_2118 = G__2123;
          count__2114_2119 = G__2124;
          i__2115_2120 = G__2125;
          continue;
        } else {
          var temp__4657__auto___2126 = cljs.core.seq.call(null, seq__2112_2117);
          if (temp__4657__auto___2126) {
            var seq__2112_2127__$1 = temp__4657__auto___2126;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2112_2127__$1)) {
              var c__4319__auto___2128 = cljs.core.chunk_first.call(null, seq__2112_2127__$1);
              var G__2129 = cljs.core.chunk_rest.call(null, seq__2112_2127__$1);
              var G__2130 = c__4319__auto___2128;
              var G__2131 = cljs.core.count.call(null, c__4319__auto___2128);
              var G__2132 = 0;
              seq__2112_2117 = G__2129;
              chunk__2113_2118 = G__2130;
              count__2114_2119 = G__2131;
              i__2115_2120 = G__2132;
              continue;
            } else {
              var node_2133 = cljs.core.first.call(null, seq__2112_2127__$1);
              node_2133.innerHTML = value_2116;
              var G__2134 = cljs.core.next.call(null, seq__2112_2127__$1);
              var G__2135 = null;
              var G__2136 = 0;
              var G__2137 = 0;
              seq__2112_2117 = G__2134;
              chunk__2113_2118 = G__2135;
              count__2114_2119 = G__2136;
              i__2115_2120 = G__2137;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e2111) {
      if (e2111 instanceof Error) {
        var e_2138 = e2111;
        domina.replace_children_BANG_.call(null, content, value_2116);
      } else {
        throw e2111;
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function domina$set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function domina$get_data(var_args) {
  var G__2140 = arguments.length;
  switch(G__2140) {
    case 2:
      return domina.get_data.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return domina.get_data.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
domina.get_data.cljs$core$IFn$_invoke$arity$2 = function(node, key) {
  return domina.get_data.call(null, node, key, false);
};
domina.get_data.cljs$core$IFn$_invoke$arity$3 = function(node, key, bubble) {
  var m = domina.single_node.call(null, node).__domina_data;
  var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = bubble;
    if (cljs.core.truth_(and__3911__auto__)) {
      return value == null;
    } else {
      return and__3911__auto__;
    }
  }())) {
    var temp__4657__auto__ = domina.single_node.call(null, node).parentNode;
    if (cljs.core.truth_(temp__4657__auto__)) {
      var parent = temp__4657__auto__;
      return domina.get_data.call(null, parent, key, true);
    } else {
      return null;
    }
  } else {
    return value;
  }
};
domina.get_data.cljs$lang$maxFixedArity = 3;
domina.set_data_BANG_ = function domina$set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3922__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3922__auto__)) {
      return or__3922__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function domina$apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__2144_2148 = cljs.core.seq.call(null, children);
    var chunk__2145_2149 = null;
    var count__2146_2150 = 0;
    var i__2147_2151 = 0;
    while (true) {
      if (i__2147_2151 < count__2146_2150) {
        var child_2152 = cljs.core._nth.call(null, chunk__2145_2149, i__2147_2151);
        frag.appendChild(child_2152);
        var G__2153 = seq__2144_2148;
        var G__2154 = chunk__2145_2149;
        var G__2155 = count__2146_2150;
        var G__2156 = i__2147_2151 + 1;
        seq__2144_2148 = G__2153;
        chunk__2145_2149 = G__2154;
        count__2146_2150 = G__2155;
        i__2147_2151 = G__2156;
        continue;
      } else {
        var temp__4657__auto___2157 = cljs.core.seq.call(null, seq__2144_2148);
        if (temp__4657__auto___2157) {
          var seq__2144_2158__$1 = temp__4657__auto___2157;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2144_2158__$1)) {
            var c__4319__auto___2159 = cljs.core.chunk_first.call(null, seq__2144_2158__$1);
            var G__2160 = cljs.core.chunk_rest.call(null, seq__2144_2158__$1);
            var G__2161 = c__4319__auto___2159;
            var G__2162 = cljs.core.count.call(null, c__4319__auto___2159);
            var G__2163 = 0;
            seq__2144_2148 = G__2160;
            chunk__2145_2149 = G__2161;
            count__2146_2150 = G__2162;
            i__2147_2151 = G__2163;
            continue;
          } else {
            var child_2164 = cljs.core.first.call(null, seq__2144_2158__$1);
            frag.appendChild(child_2164);
            var G__2165 = cljs.core.next.call(null, seq__2144_2158__$1);
            var G__2166 = null;
            var G__2167 = 0;
            var G__2168 = 0;
            seq__2144_2148 = G__2165;
            chunk__2145_2149 = G__2166;
            count__2146_2150 = G__2167;
            i__2147_2151 = G__2168;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__2142_SHARP_, p2__2143_SHARP_) {
        return f.call(null, p1__2142_SHARP_, p2__2143_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function domina$lazy_nl_via_item(var_args) {
  var G__2170 = arguments.length;
  switch(G__2170) {
    case 1:
      return domina.lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return domina.lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
domina.lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = function(nl) {
  return domina.lazy_nl_via_item.call(null, nl, 0);
};
domina.lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = function(nl, n) {
  if (n < nl.length) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, nl.item(n), domina.lazy_nl_via_item.call(null, nl, n + 1));
    }, null, null);
  } else {
    return null;
  }
};
domina.lazy_nl_via_item.cljs$lang$maxFixedArity = 2;
domina.lazy_nl_via_array_ref = function domina$lazy_nl_via_array_ref(var_args) {
  var G__2173 = arguments.length;
  switch(G__2173) {
    case 1:
      return domina.lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return domina.lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
domina.lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = function(nl) {
  return domina.lazy_nl_via_array_ref.call(null, nl, 0);
};
domina.lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = function(nl, n) {
  if (n < nl.length) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, nl[n], domina.lazy_nl_via_array_ref.call(null, nl, n + 1));
    }, null, null);
  } else {
    return null;
  }
};
domina.lazy_nl_via_array_ref.cljs$lang$maxFixedArity = 2;
domina.lazy_nodelist = function domina$lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function domina$array_like_QMARK_(obj) {
  var and__3911__auto__ = obj;
  if (cljs.core.truth_(and__3911__auto__)) {
    var and__3911__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3911__auto____$1) {
      return obj.length;
    } else {
      return and__3911__auto____$1;
    }
  } else {
    return and__3911__auto__;
  }
};
domina.normalize_seq = function domina$normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (!(list_thing == null) ? list_thing.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === list_thing.cljs$core$ISeqable$ ? true : !list_thing.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, list_thing) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, list_thing)) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
goog.object.set(domina.DomContent, "string", true);
goog.object.set(domina.nodes, "string", function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
});
goog.object.set(domina.single_node, "string", function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
});
goog.object.set(domina.DomContent, "_", true);
goog.object.set(domina.nodes, "_", function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (!(content == null) ? content.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === content.cljs$core$ISeqable$ ? true : !content.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, content) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, content)) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
});
goog.object.set(domina.single_node, "_", function(content) {
  if (content == null) {
    return null;
  } else {
    if (!(content == null) ? content.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === content.cljs$core$ISeqable$ ? true : !content.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, content) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, content)) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
});
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ICounted$ = cljs.core.PROTOCOL_SENTINEL;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
  NodeList.prototype.cljs$core$IIndexed$ = cljs.core.PROTOCOL_SENTINEL;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ISeqable$ = cljs.core.PROTOCOL_SENTINEL;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ICounted$ = cljs.core.PROTOCOL_SENTINEL;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = cljs.core.PROTOCOL_SENTINEL;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ISeqable$ = cljs.core.PROTOCOL_SENTINEL;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ICounted$ = cljs.core.PROTOCOL_SENTINEL;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = cljs.core.PROTOCOL_SENTINEL;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ISeqable$ = cljs.core.PROTOCOL_SENTINEL;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
} else {
}
;/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var legacyIE = goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9");
  var childNodesName = goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (; lc = cc, cc = query.charAt(x), x < ql; x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return (caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(tval) == ea.length - tval.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return -1;
    }
    var l = tret.length;
    if (cl == l && ci >= 0 && cl >= 0) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (; te; te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return !(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1; x >= 0; x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return !ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx;
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = legacyIE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond);
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return !!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return !!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0; i < qpl; i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0; te = candidates[j]; j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!legacyIE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw new Error("");
          }
          var r = root[qsa](tq);
          if (legacyIE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = legacyIE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx;
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (legacyIE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te; te = arr[x]; x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (legacyIE && arr.commentStrip) {
        try {
          for (var x = 1, te; te = arr[x]; x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te; te = arr[x]; x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, opt_root) {
    if (!query) {
      return [];
    }
    if (query.constructor == Array) {
      return query;
    }
    if (!goog.isString(query)) {
      return [query];
    }
    var root = opt_root;
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return [];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (legacyIE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("domina");
goog.require("goog.dom");
goog.require("goog.dom.query");
domina.css.root_element = function domina$css$root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.css.sel = function domina$css$sel(var_args) {
  var G__2183 = arguments.length;
  switch(G__2183) {
    case 1:
      return domina.css.sel.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return domina.css.sel.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
domina.css.sel.cljs$core$IFn$_invoke$arity$1 = function(expr) {
  return domina.css.sel.call(null, domina.css.root_element.call(null), expr);
};
domina.css.sel.cljs$core$IFn$_invoke$arity$2 = function(base, expr) {
  if (typeof domina.css.t_domina$css2184 !== "undefined") {
  } else {
    domina.css.t_domina$css2184 = function(base, expr, meta2185) {
      this.base = base;
      this.expr = expr;
      this.meta2185 = meta2185;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    domina.css.t_domina$css2184.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2186, meta2185__$1) {
      var self__ = this;
      var _2186__$1 = this;
      return new domina.css.t_domina$css2184(self__.base, self__.expr, meta2185__$1);
    };
    domina.css.t_domina$css2184.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2186) {
      var self__ = this;
      var _2186__$1 = this;
      return self__.meta2185;
    };
    domina.css.t_domina$css2184.prototype.domina$DomContent$ = cljs.core.PROTOCOL_SENTINEL;
    domina.css.t_domina$css2184.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.mapcat.call(null, function(___$1) {
        return function(p1__2180_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__2180_SHARP_));
        };
      }(___$1), domina.nodes.call(null, self__.base));
    };
    domina.css.t_domina$css2184.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(___$1) {
        return function(p1__2181_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__2181_SHARP_));
        };
      }(___$1), domina.nodes.call(null, self__.base))));
    };
    domina.css.t_domina$css2184.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "expr", "expr", -1908713478, null), new cljs.core.Symbol(null, "meta2185", "meta2185", -943713983, null)], null);
    };
    domina.css.t_domina$css2184.cljs$lang$type = true;
    domina.css.t_domina$css2184.cljs$lang$ctorStr = "domina.css/t_domina$css2184";
    domina.css.t_domina$css2184.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "domina.css/t_domina$css2184");
    };
    domina.css.__GT_t_domina$css2184 = function domina$css$__GT_t_domina$css2184(base__$1, expr__$1, meta2185) {
      return new domina.css.t_domina$css2184(base__$1, expr__$1, meta2185);
    };
  }
  return new domina.css.t_domina$css2184(base, expr, cljs.core.PersistentArrayMap.EMPTY);
};
domina.css.sel.cljs$lang$maxFixedArity = 2;
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.dom.ViewportSizeMonitor.base(this, "constructor");
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow);
};
goog.dom.ViewportSizeMonitor.removeInstanceForWindow = function(opt_window) {
  var uid = goog.getUid(opt_window || window);
  goog.dispose(goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]);
  delete goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid];
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null;
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if (this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null;
  }
  this.window_ = null;
  this.size_ = null;
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  var size = goog.dom.getViewportSize(this.window_);
  if (!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE);
  }
};
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("domina");
goog.require("goog.dom");
domina.xpath.select_node_STAR_ = function domina$xpath$select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3911__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3911__auto__)) {
      return doc.setProperty;
    } else {
      return and__3911__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function domina$xpath$select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function domina$xpath$select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__2190 = i + 1;
        var G__2191 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__2190;
        acc = G__2191;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function domina$xpath$root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function domina$xpath$xpath(var_args) {
  var G__2193 = arguments.length;
  switch(G__2193) {
    case 1:
      return domina.xpath.xpath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return domina.xpath.xpath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
domina.xpath.xpath.cljs$core$IFn$_invoke$arity$1 = function(expr) {
  return domina.xpath.xpath.call(null, domina.xpath.root_element.call(null), expr);
};
domina.xpath.xpath.cljs$core$IFn$_invoke$arity$2 = function(base, expr) {
  if (typeof domina.xpath.t_domina$xpath2194 !== "undefined") {
  } else {
    domina.xpath.t_domina$xpath2194 = function(base, expr, meta2195) {
      this.base = base;
      this.expr = expr;
      this.meta2195 = meta2195;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    domina.xpath.t_domina$xpath2194.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2196, meta2195__$1) {
      var self__ = this;
      var _2196__$1 = this;
      return new domina.xpath.t_domina$xpath2194(self__.base, self__.expr, meta2195__$1);
    };
    domina.xpath.t_domina$xpath2194.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2196) {
      var self__ = this;
      var _2196__$1 = this;
      return self__.meta2195;
    };
    domina.xpath.t_domina$xpath2194.prototype.domina$DomContent$ = cljs.core.PROTOCOL_SENTINEL;
    domina.xpath.t_domina$xpath2194.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
    };
    domina.xpath.t_domina$xpath2194.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
    };
    domina.xpath.t_domina$xpath2194.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "expr", "expr", -1908713478, null), new cljs.core.Symbol(null, "meta2195", "meta2195", -1372767266, null)], null);
    };
    domina.xpath.t_domina$xpath2194.cljs$lang$type = true;
    domina.xpath.t_domina$xpath2194.cljs$lang$ctorStr = "domina.xpath/t_domina$xpath2194";
    domina.xpath.t_domina$xpath2194.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
      return cljs.core._write.call(null, writer__4162__auto__, "domina.xpath/t_domina$xpath2194");
    };
    domina.xpath.__GT_t_domina$xpath2194 = function domina$xpath$__GT_t_domina$xpath2194(base__$1, expr__$1, meta2195) {
      return new domina.xpath.t_domina$xpath2194(base__$1, expr__$1, meta2195);
    };
  }
  return new domina.xpath.t_domina$xpath2194(base, expr, cljs.core.PersistentArrayMap.EMPTY);
};
domina.xpath.xpath.cljs$lang$maxFixedArity = 2;
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_str = function enfocus$enlive$syntax$sel_to_str(input) {
  var item = cljs.core.first.call(null, input);
  var rest = cljs.core.rest.call(null, input);
  var end = cljs.core.empty_QMARK_.call(null, rest) ? cljs.core.list(cljs.core.List.EMPTY) : enfocus.enlive.syntax.sel_to_str.call(null, rest);
  if (item instanceof cljs.core.Keyword) {
    return cljs.core.map.call(null, function(item, rest, end) {
      return function(p1__2200_SHARP_) {
        return cljs.core.conj.call(null, p1__2200_SHARP_, cljs.core.name.call(null, item));
      };
    }(item, rest, end), end);
  } else {
    if (typeof item === "string") {
      return cljs.core.map.call(null, function(item, rest, end) {
        return function(p1__2201_SHARP_) {
          return cljs.core.conj.call(null, p1__2201_SHARP_, item);
        };
      }(item, rest, end), end);
    } else {
      if (cljs.core.set_QMARK_.call(null, item)) {
        return cljs.core.reduce.call(null, function(item, rest, end) {
          return function(r1, it) {
            return cljs.core.concat.call(null, r1, cljs.core.map.call(null, function(item, rest, end) {
              return function(p1__2202_SHARP_) {
                return cljs.core.conj.call(null, p1__2202_SHARP_, it);
              };
            }(item, rest, end), end));
          };
        }(item, rest, end), cljs.core.PersistentVector.EMPTY, cljs.core.flatten.call(null, enfocus.enlive.syntax.sel_to_str.call(null, item)));
      } else {
        if (cljs.core.coll_QMARK_.call(null, item)) {
          var x1 = enfocus.enlive.syntax.sel_to_str.call(null, item);
          var sub = cljs.core.map.call(null, function(x1, item, rest, end) {
            return function(p1__2203_SHARP_) {
              return cljs.core.apply.call(null, cljs.core.str, p1__2203_SHARP_);
            };
          }(x1, item, rest, end), enfocus.enlive.syntax.sel_to_str.call(null, item));
          var iter__4292__auto__ = function(x1, sub, item, rest, end) {
            return function enfocus$enlive$syntax$sel_to_str_$_iter__2204(s__2205) {
              return new cljs.core.LazySeq(null, function(x1, sub, item, rest, end) {
                return function() {
                  var s__2205__$1 = s__2205;
                  while (true) {
                    var temp__4657__auto__ = cljs.core.seq.call(null, s__2205__$1);
                    if (temp__4657__auto__) {
                      var xs__5205__auto__ = temp__4657__auto__;
                      var s = cljs.core.first.call(null, xs__5205__auto__);
                      var iterys__4288__auto__ = function(s__2205__$1, s, xs__5205__auto__, temp__4657__auto__, x1, sub, item, rest, end) {
                        return function enfocus$enlive$syntax$sel_to_str_$_iter__2204_$_iter__2206(s__2207) {
                          return new cljs.core.LazySeq(null, function(s__2205__$1, s, xs__5205__auto__, temp__4657__auto__, x1, sub, item, rest, end) {
                            return function() {
                              var s__2207__$1 = s__2207;
                              while (true) {
                                var temp__4657__auto____$1 = cljs.core.seq.call(null, s__2207__$1);
                                if (temp__4657__auto____$1) {
                                  var s__2207__$2 = temp__4657__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__2207__$2)) {
                                    var c__4290__auto__ = cljs.core.chunk_first.call(null, s__2207__$2);
                                    var size__4291__auto__ = cljs.core.count.call(null, c__4290__auto__);
                                    var b__2209 = cljs.core.chunk_buffer.call(null, size__4291__auto__);
                                    if (function() {
                                      var i__2208 = 0;
                                      while (true) {
                                        if (i__2208 < size__4291__auto__) {
                                          var e = cljs.core._nth.call(null, c__4290__auto__, i__2208);
                                          cljs.core.chunk_append.call(null, b__2209, function() {
                                            cljs.core.println.call(null, s, e);
                                            return cljs.core.conj.call(null, e, s);
                                          }());
                                          var G__2210 = i__2208 + 1;
                                          i__2208 = G__2210;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2209), enfocus$enlive$syntax$sel_to_str_$_iter__2204_$_iter__2206.call(null, cljs.core.chunk_rest.call(null, s__2207__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2209), null);
                                    }
                                  } else {
                                    var e = cljs.core.first.call(null, s__2207__$2);
                                    return cljs.core.cons.call(null, function() {
                                      cljs.core.println.call(null, s, e);
                                      return cljs.core.conj.call(null, e, s);
                                    }(), enfocus$enlive$syntax$sel_to_str_$_iter__2204_$_iter__2206.call(null, cljs.core.rest.call(null, s__2207__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(s__2205__$1, s, xs__5205__auto__, temp__4657__auto__, x1, sub, item, rest, end), null, null);
                        };
                      }(s__2205__$1, s, xs__5205__auto__, temp__4657__auto__, x1, sub, item, rest, end);
                      var fs__4289__auto__ = cljs.core.seq.call(null, iterys__4288__auto__.call(null, end));
                      if (fs__4289__auto__) {
                        return cljs.core.concat.call(null, fs__4289__auto__, enfocus$enlive$syntax$sel_to_str_$_iter__2204.call(null, cljs.core.rest.call(null, s__2205__$1)));
                      } else {
                        var G__2211 = cljs.core.rest.call(null, s__2205__$1);
                        s__2205__$1 = G__2211;
                        continue;
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(x1, sub, item, rest, end), null, null);
            };
          }(x1, sub, item, rest, end);
          return iter__4292__auto__.call(null, sub);
        } else {
          return input;
        }
      }
    }
  }
};
enfocus.enlive.syntax.convert = function enfocus$enlive$syntax$convert(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    var temp__4655__auto__ = enfocus.enlive.syntax.sel_to_str.call(null, sel);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var ors = temp__4655__auto__;
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.apply.call(null, cljs.core.concat, cljs.core.interpose.call(null, ",", ors))));
    } else {
      return null;
    }
  }
};
enfocus.enlive.syntax.attr_pairs = function enfocus$enlive$syntax$attr_pairs(op, elms) {
  var ts = function(p__2212) {
    var vec__2213 = p__2212;
    var x = cljs.core.nth.call(null, vec__2213, 0, null);
    var y = cljs.core.nth.call(null, vec__2213, 1, null);
    return ["[", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, x)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(op), "\x3d'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y), "']"].join("");
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, cljs.core.partition.call(null, 2, elms)));
};
enfocus.enlive.syntax.attr_QMARK_ = function enfocus$enlive$syntax$attr_QMARK_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2218 = arguments.length;
  var i__4500__auto___2219 = 0;
  while (true) {
    if (i__4500__auto___2219 < len__4499__auto___2218) {
      args__4502__auto__.push(arguments[i__4500__auto___2219]);
      var G__2220 = i__4500__auto___2219 + 1;
      i__4500__auto___2219 = G__2220;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__2216_SHARP_) {
    return ["[", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, p1__2216_SHARP_)), "]"].join("");
  }, elms));
};
enfocus.enlive.syntax.attr_QMARK_.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_QMARK_.cljs$lang$applyTo = function(seq2217) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2217));
};
enfocus.enlive.syntax.attr_EQ_ = function enfocus$enlive$syntax$attr_EQ_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2222 = arguments.length;
  var i__4500__auto___2223 = 0;
  while (true) {
    if (i__4500__auto___2223 < len__4499__auto___2222) {
      args__4502__auto__.push(arguments[i__4500__auto___2223]);
      var G__2224 = i__4500__auto___2223 + 1;
      i__4500__auto___2223 = G__2224;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_EQ_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return enfocus.enlive.syntax.attr_pairs.call(null, "", elms);
};
enfocus.enlive.syntax.attr_EQ_.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_EQ_.cljs$lang$applyTo = function(seq2221) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2221));
};
enfocus.enlive.syntax.attr_has = function enfocus$enlive$syntax$attr_has(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2227 = arguments.length;
  var i__4500__auto___2228 = 0;
  while (true) {
    if (i__4500__auto___2228 < len__4499__auto___2227) {
      args__4502__auto__.push(arguments[i__4500__auto___2228]);
      var G__2229 = i__4500__auto___2228 + 1;
      i__4500__auto___2228 = G__2229;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return enfocus.enlive.syntax.attr_has.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_has.cljs$core$IFn$_invoke$arity$variadic = function(x, vals) {
  var ts = function(y) {
    return ["[", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, x)), "~\x3d'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y), "']"].join("");
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, vals));
};
enfocus.enlive.syntax.attr_has.cljs$lang$maxFixedArity = 1;
enfocus.enlive.syntax.attr_has.cljs$lang$applyTo = function(seq2225) {
  var G__2226 = cljs.core.first.call(null, seq2225);
  var seq2225__$1 = cljs.core.next.call(null, seq2225);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2226, seq2225__$1);
};
enfocus.enlive.syntax.attr_starts = function enfocus$enlive$syntax$attr_starts(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2231 = arguments.length;
  var i__4500__auto___2232 = 0;
  while (true) {
    if (i__4500__auto___2232 < len__4499__auto___2231) {
      args__4502__auto__.push(arguments[i__4500__auto___2232]);
      var G__2233 = i__4500__auto___2232 + 1;
      i__4500__auto___2232 = G__2233;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_starts.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_starts.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms);
};
enfocus.enlive.syntax.attr_starts.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_starts.cljs$lang$applyTo = function(seq2230) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2230));
};
enfocus.enlive.syntax.attr_ends = function enfocus$enlive$syntax$attr_ends(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2235 = arguments.length;
  var i__4500__auto___2236 = 0;
  while (true) {
    if (i__4500__auto___2236 < len__4499__auto___2235) {
      args__4502__auto__.push(arguments[i__4500__auto___2236]);
      var G__2237 = i__4500__auto___2236 + 1;
      i__4500__auto___2236 = G__2237;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_ends.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_ends.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms);
};
enfocus.enlive.syntax.attr_ends.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_ends.cljs$lang$applyTo = function(seq2234) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2234));
};
enfocus.enlive.syntax.attr_contains = function enfocus$enlive$syntax$attr_contains(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2239 = arguments.length;
  var i__4500__auto___2240 = 0;
  while (true) {
    if (i__4500__auto___2240 < len__4499__auto___2239) {
      args__4502__auto__.push(arguments[i__4500__auto___2240]);
      var G__2241 = i__4500__auto___2240 + 1;
      i__4500__auto___2240 = G__2241;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_contains.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_contains.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms);
};
enfocus.enlive.syntax.attr_contains.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_contains.cljs$lang$applyTo = function(seq2238) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2238));
};
enfocus.enlive.syntax.attr_BAR__EQ_ = function enfocus$enlive$syntax$attr_BAR__EQ_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2243 = arguments.length;
  var i__4500__auto___2244 = 0;
  while (true) {
    if (i__4500__auto___2244 < len__4499__auto___2243) {
      args__4502__auto__.push(arguments[i__4500__auto___2244]);
      var G__2245 = i__4500__auto___2244 + 1;
      i__4500__auto___2244 = G__2245;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(elms) {
  return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms);
};
enfocus.enlive.syntax.attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.attr_BAR__EQ_.cljs$lang$applyTo = function(seq2242) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2242));
};
enfocus.enlive.syntax.nth_op = function enfocus$enlive$syntax$nth_op(var_args) {
  var G__2247 = arguments.length;
  switch(G__2247) {
    case 2:
      return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2 = function(op, x) {
  return [":nth-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(op), "(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), ")"].join("");
};
enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3 = function(op, x, y) {
  return [":nth-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(op), "(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), "n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y > 0 ? "+" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join("");
};
enfocus.enlive.syntax.nth_op.cljs$lang$maxFixedArity = 3;
enfocus.enlive.syntax.nth_child = function enfocus$enlive$syntax$nth_child(var_args) {
  var G__2250 = arguments.length;
  switch(G__2250) {
    case 1:
      return enfocus.enlive.syntax.nth_child.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.enlive.syntax.nth_child.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.enlive.syntax.nth_child.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return enfocus.enlive.syntax.nth_op.call(null, "child", x);
};
enfocus.enlive.syntax.nth_child.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return enfocus.enlive.syntax.nth_op.call(null, "child", x, y);
};
enfocus.enlive.syntax.nth_child.cljs$lang$maxFixedArity = 2;
enfocus.enlive.syntax.nth_last_child = function enfocus$enlive$syntax$nth_last_child(var_args) {
  var G__2253 = arguments.length;
  switch(G__2253) {
    case 1:
      return enfocus.enlive.syntax.nth_last_child.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.enlive.syntax.nth_last_child.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.enlive.syntax.nth_last_child.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return enfocus.enlive.syntax.nth_op.call(null, "last-child", x);
};
enfocus.enlive.syntax.nth_last_child.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y);
};
enfocus.enlive.syntax.nth_last_child.cljs$lang$maxFixedArity = 2;
enfocus.enlive.syntax.nth_of_type = function enfocus$enlive$syntax$nth_of_type(var_args) {
  var G__2256 = arguments.length;
  switch(G__2256) {
    case 1:
      return enfocus.enlive.syntax.nth_of_type.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.enlive.syntax.nth_of_type.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.enlive.syntax.nth_of_type.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return enfocus.enlive.syntax.nth_op.call(null, "of-type", x);
};
enfocus.enlive.syntax.nth_of_type.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y);
};
enfocus.enlive.syntax.nth_of_type.cljs$lang$maxFixedArity = 2;
enfocus.enlive.syntax.nth_last_of_type = function enfocus$enlive$syntax$nth_last_of_type(var_args) {
  var G__2259 = arguments.length;
  switch(G__2259) {
    case 1:
      return enfocus.enlive.syntax.nth_last_of_type.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.enlive.syntax.nth_last_of_type.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.enlive.syntax.nth_last_of_type.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x);
};
enfocus.enlive.syntax.nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y);
};
enfocus.enlive.syntax.nth_last_of_type.cljs$lang$maxFixedArity = 2;
enfocus.enlive.syntax.but = function enfocus$enlive$syntax$but(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2262 = arguments.length;
  var i__4500__auto___2263 = 0;
  while (true) {
    if (i__4500__auto___2263 < len__4499__auto___2262) {
      args__4502__auto__.push(arguments[i__4500__auto___2263]);
      var G__2264 = i__4500__auto___2263 + 1;
      i__4500__auto___2263 = G__2264;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.enlive.syntax.but.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.enlive.syntax.but.cljs$core$IFn$_invoke$arity$variadic = function(sel) {
  return ["not(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(enfocus.enlive.syntax.convert.call(null, sel)), ")"].join("");
};
enfocus.enlive.syntax.but.cljs$lang$maxFixedArity = 0;
enfocus.enlive.syntax.but.cljs$lang$applyTo = function(seq2261) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2261));
};
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("enfocus.enlive.syntax");
goog.require("goog.net.XhrIo");
goog.require("goog.dom.query");
goog.require("goog.style");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.async.Delay");
goog.require("goog.Timer");
goog.require("goog.dom.forms");
goog.require("clojure.string");
goog.require("domina");
goog.require("domina.css");
goog.require("domina.xpath");
enfocus.core.ISelector = function() {
};
enfocus.core.select = function enfocus$core$select(var_args) {
  var G__2413 = arguments.length;
  switch(G__2413) {
    case 1:
      return enfocus.core.select.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.select.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.select.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.enfocus$core$ISelector$select$arity$1 == null)) {
    return this$.enfocus$core$ISelector$select$arity$1(this$);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = enfocus.core.select[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$);
    } else {
      var m__4212__auto____$1 = enfocus.core.select["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
      }
    }
  }
};
enfocus.core.select.cljs$core$IFn$_invoke$arity$2 = function(this$, root) {
  if (!(this$ == null) && !(this$.enfocus$core$ISelector$select$arity$2 == null)) {
    return this$.enfocus$core$ISelector$select$arity$2(this$, root);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = enfocus.core.select[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, root);
    } else {
      var m__4212__auto____$1 = enfocus.core.select["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, root);
      } else {
        throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
      }
    }
  }
};
enfocus.core.select.cljs$core$IFn$_invoke$arity$3 = function(this$, root, id_mask) {
  if (!(this$ == null) && !(this$.enfocus$core$ISelector$select$arity$3 == null)) {
    return this$.enfocus$core$ISelector$select$arity$3(this$, root, id_mask);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = enfocus.core.select[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, root, id_mask);
    } else {
      var m__4212__auto____$1 = enfocus.core.select["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, root, id_mask);
      } else {
        throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
      }
    }
  }
};
enfocus.core.select.cljs$lang$maxFixedArity = 3;
enfocus.core.ITransform = function() {
};
enfocus.core.apply_transform = function enfocus$core$apply_transform(var_args) {
  var G__2416 = arguments.length;
  switch(G__2416) {
    case 2:
      return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2 = function(this$, nodes) {
  if (!(this$ == null) && !(this$.enfocus$core$ITransform$apply_transform$arity$2 == null)) {
    return this$.enfocus$core$ITransform$apply_transform$arity$2(this$, nodes);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = enfocus.core.apply_transform[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, nodes);
    } else {
      var m__4212__auto____$1 = enfocus.core.apply_transform["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, nodes);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
      }
    }
  }
};
enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$3 = function(this$, nodes, callback) {
  if (!(this$ == null) && !(this$.enfocus$core$ITransform$apply_transform$arity$3 == null)) {
    return this$.enfocus$core$ITransform$apply_transform$arity$3(this$, nodes, callback);
  } else {
    var x__4211__auto__ = this$ == null ? null : this$;
    var m__4212__auto__ = enfocus.core.apply_transform[goog.typeOf(x__4211__auto__)];
    if (!(m__4212__auto__ == null)) {
      return m__4212__auto__.call(null, this$, nodes, callback);
    } else {
      var m__4212__auto____$1 = enfocus.core.apply_transform["_"];
      if (!(m__4212__auto____$1 == null)) {
        return m__4212__auto____$1.call(null, this$, nodes, callback);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
      }
    }
  }
};
enfocus.core.apply_transform.cljs$lang$maxFixedArity = 3;
enfocus.core.debug = false;
enfocus.core.log_debug = function enfocus$core$log_debug(mesg) {
  if (enfocus.core.debug && !cljs.core._EQ_.call(null, window.console, undefined)) {
    return console.log(mesg);
  } else {
    return null;
  }
};
enfocus.core.setTimeout = function enfocus$core$setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime);
};
enfocus.core.node_QMARK_ = function enfocus$core$node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst);
};
enfocus.core.nodelist_QMARK_ = function enfocus$core$nodelist_QMARK_(tst) {
  return tst instanceof NodeList;
};
enfocus.core.nodes__GT_coll = function enfocus$core$nodes__GT_coll(nl) {
  if (nl === window) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [nl], null);
  } else {
    return domina.nodes.call(null, nl);
  }
};
enfocus.core.flatten_nodes_coll = function enfocus$core$flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__2418_SHARP_) {
    if (typeof p1__2418_SHARP_ === "string") {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.dom.createTextNode(p1__2418_SHARP_)], null);
    } else {
      return enfocus.core.nodes__GT_coll.call(null, p1__2418_SHARP_);
    }
  }, values);
};
enfocus.core.style_set = function enfocus$core$style_set(obj, values) {
  var seq__2419_2429 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  var chunk__2420_2430 = null;
  var count__2421_2431 = 0;
  var i__2422_2432 = 0;
  while (true) {
    if (i__2422_2432 < count__2421_2431) {
      var vec__2423_2433 = cljs.core._nth.call(null, chunk__2420_2430, i__2422_2432);
      var attr_2434 = cljs.core.nth.call(null, vec__2423_2433, 0, null);
      var value_2435 = cljs.core.nth.call(null, vec__2423_2433, 1, null);
      goog.style.setStyle(obj, cljs.core.name.call(null, attr_2434), value_2435);
      var G__2436 = seq__2419_2429;
      var G__2437 = chunk__2420_2430;
      var G__2438 = count__2421_2431;
      var G__2439 = i__2422_2432 + 1;
      seq__2419_2429 = G__2436;
      chunk__2420_2430 = G__2437;
      count__2421_2431 = G__2438;
      i__2422_2432 = G__2439;
      continue;
    } else {
      var temp__4657__auto___2440 = cljs.core.seq.call(null, seq__2419_2429);
      if (temp__4657__auto___2440) {
        var seq__2419_2441__$1 = temp__4657__auto___2440;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2419_2441__$1)) {
          var c__4319__auto___2442 = cljs.core.chunk_first.call(null, seq__2419_2441__$1);
          var G__2443 = cljs.core.chunk_rest.call(null, seq__2419_2441__$1);
          var G__2444 = c__4319__auto___2442;
          var G__2445 = cljs.core.count.call(null, c__4319__auto___2442);
          var G__2446 = 0;
          seq__2419_2429 = G__2443;
          chunk__2420_2430 = G__2444;
          count__2421_2431 = G__2445;
          i__2422_2432 = G__2446;
          continue;
        } else {
          var vec__2426_2447 = cljs.core.first.call(null, seq__2419_2441__$1);
          var attr_2448 = cljs.core.nth.call(null, vec__2426_2447, 0, null);
          var value_2449 = cljs.core.nth.call(null, vec__2426_2447, 1, null);
          goog.style.setStyle(obj, cljs.core.name.call(null, attr_2448), value_2449);
          var G__2450 = cljs.core.next.call(null, seq__2419_2441__$1);
          var G__2451 = null;
          var G__2452 = 0;
          var G__2453 = 0;
          seq__2419_2429 = G__2450;
          chunk__2420_2430 = G__2451;
          count__2421_2431 = G__2452;
          i__2422_2432 = G__2453;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
enfocus.core.style_remove = function enfocus$core$style_remove(obj, values) {
  var seq__2454 = cljs.core.seq.call(null, values);
  var chunk__2455 = null;
  var count__2456 = 0;
  var i__2457 = 0;
  while (true) {
    if (i__2457 < count__2456) {
      var attr = cljs.core._nth.call(null, chunk__2455, i__2457);
      if (cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr), "");
      } else {
        obj.style.removeProperty(cljs.core.name.call(null, attr));
      }
      var G__2458 = seq__2454;
      var G__2459 = chunk__2455;
      var G__2460 = count__2456;
      var G__2461 = i__2457 + 1;
      seq__2454 = G__2458;
      chunk__2455 = G__2459;
      count__2456 = G__2460;
      i__2457 = G__2461;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__2454);
      if (temp__4657__auto__) {
        var seq__2454__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2454__$1)) {
          var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2454__$1);
          var G__2462 = cljs.core.chunk_rest.call(null, seq__2454__$1);
          var G__2463 = c__4319__auto__;
          var G__2464 = cljs.core.count.call(null, c__4319__auto__);
          var G__2465 = 0;
          seq__2454 = G__2462;
          chunk__2455 = G__2463;
          count__2456 = G__2464;
          i__2457 = G__2465;
          continue;
        } else {
          var attr = cljs.core.first.call(null, seq__2454__$1);
          if (cljs.core.truth_(goog.userAgent.IE)) {
            goog.style.setStyle(obj, cljs.core.name.call(null, attr), "");
          } else {
            obj.style.removeProperty(cljs.core.name.call(null, attr));
          }
          var G__2466 = cljs.core.next.call(null, seq__2454__$1);
          var G__2467 = null;
          var G__2468 = 0;
          var G__2469 = 0;
          seq__2454 = G__2466;
          chunk__2455 = G__2467;
          count__2456 = G__2468;
          i__2457 = G__2469;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
enfocus.core.get_eff_prop_name = function enfocus$core$get_eff_prop_name(etype) {
  return ["__ef_effect_", cljs.core.str.cljs$core$IFn$_invoke$arity$1(etype)].join("");
};
enfocus.core.get_mills = function enfocus$core$get_mills() {
  return (new Date).getMilliseconds();
};
enfocus.core.pix_round = function enfocus$core$pix_round(step) {
  if (step < 0) {
    return Math.floor(step);
  } else {
    return Math.ceil(step);
  }
};
enfocus.core.add_map_attrs = function enfocus$core$add_map_attrs(var_args) {
  var G__2471 = arguments.length;
  switch(G__2471) {
    case 2:
      return enfocus.core.add_map_attrs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return enfocus.core.add_map_attrs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.add_map_attrs.cljs$core$IFn$_invoke$arity$2 = function(elem, ats) {
  if (cljs.core.truth_(elem)) {
    if (cljs.core.map_QMARK_.call(null, ats)) {
      var seq__2472_2483 = cljs.core.seq.call(null, ats);
      var chunk__2473_2484 = null;
      var count__2474_2485 = 0;
      var i__2475_2486 = 0;
      while (true) {
        if (i__2475_2486 < count__2474_2485) {
          var vec__2476_2487 = cljs.core._nth.call(null, chunk__2473_2484, i__2475_2486);
          var k_2488 = cljs.core.nth.call(null, vec__2476_2487, 0, null);
          var v_2489 = cljs.core.nth.call(null, vec__2476_2487, 1, null);
          enfocus.core.add_map_attrs.call(null, elem, k_2488, v_2489);
          var G__2490 = seq__2472_2483;
          var G__2491 = chunk__2473_2484;
          var G__2492 = count__2474_2485;
          var G__2493 = i__2475_2486 + 1;
          seq__2472_2483 = G__2490;
          chunk__2473_2484 = G__2491;
          count__2474_2485 = G__2492;
          i__2475_2486 = G__2493;
          continue;
        } else {
          var temp__4657__auto___2494 = cljs.core.seq.call(null, seq__2472_2483);
          if (temp__4657__auto___2494) {
            var seq__2472_2495__$1 = temp__4657__auto___2494;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2472_2495__$1)) {
              var c__4319__auto___2496 = cljs.core.chunk_first.call(null, seq__2472_2495__$1);
              var G__2497 = cljs.core.chunk_rest.call(null, seq__2472_2495__$1);
              var G__2498 = c__4319__auto___2496;
              var G__2499 = cljs.core.count.call(null, c__4319__auto___2496);
              var G__2500 = 0;
              seq__2472_2483 = G__2497;
              chunk__2473_2484 = G__2498;
              count__2474_2485 = G__2499;
              i__2475_2486 = G__2500;
              continue;
            } else {
              var vec__2479_2501 = cljs.core.first.call(null, seq__2472_2495__$1);
              var k_2502 = cljs.core.nth.call(null, vec__2479_2501, 0, null);
              var v_2503 = cljs.core.nth.call(null, vec__2479_2501, 1, null);
              enfocus.core.add_map_attrs.call(null, elem, k_2502, v_2503);
              var G__2504 = cljs.core.next.call(null, seq__2472_2495__$1);
              var G__2505 = null;
              var G__2506 = 0;
              var G__2507 = 0;
              seq__2472_2483 = G__2504;
              chunk__2473_2484 = G__2505;
              count__2474_2485 = G__2506;
              i__2475_2486 = G__2507;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return elem;
    } else {
      return null;
    }
  } else {
    return null;
  }
};
enfocus.core.add_map_attrs.cljs$core$IFn$_invoke$arity$3 = function(elem, k, v) {
  elem.setAttribute(cljs.core.name.call(null, k), v);
  return elem;
};
enfocus.core.add_map_attrs.cljs$lang$maxFixedArity = 3;
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.hide_style = (new cljs.core.PersistentArrayMap(null, 1, ["style", "display: none; width: 0px; height: 0px"], null)).strobj;
enfocus.core.create_hidden_dom = function enfocus$core$create_hidden_dom(child) {
  var div = goog.dom.createDom("div", enfocus.core.hide_style);
  if (cljs.core._EQ_.call(null, child.nodeType, 11)) {
    goog.dom.appendChild(div, child);
  } else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var seq__2508_2512 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    var chunk__2509_2513 = null;
    var count__2510_2514 = 0;
    var i__2511_2515 = 0;
    while (true) {
      if (i__2511_2515 < count__2510_2514) {
        var node_2516 = cljs.core._nth.call(null, chunk__2509_2513, i__2511_2515);
        goog.dom.appendChild(div, node_2516);
        var G__2517 = seq__2508_2512;
        var G__2518 = chunk__2509_2513;
        var G__2519 = count__2510_2514;
        var G__2520 = i__2511_2515 + 1;
        seq__2508_2512 = G__2517;
        chunk__2509_2513 = G__2518;
        count__2510_2514 = G__2519;
        i__2511_2515 = G__2520;
        continue;
      } else {
        var temp__4657__auto___2521 = cljs.core.seq.call(null, seq__2508_2512);
        if (temp__4657__auto___2521) {
          var seq__2508_2522__$1 = temp__4657__auto___2521;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2508_2522__$1)) {
            var c__4319__auto___2523 = cljs.core.chunk_first.call(null, seq__2508_2522__$1);
            var G__2524 = cljs.core.chunk_rest.call(null, seq__2508_2522__$1);
            var G__2525 = c__4319__auto___2523;
            var G__2526 = cljs.core.count.call(null, c__4319__auto___2523);
            var G__2527 = 0;
            seq__2508_2512 = G__2524;
            chunk__2509_2513 = G__2525;
            count__2510_2514 = G__2526;
            i__2511_2515 = G__2527;
            continue;
          } else {
            var node_2528 = cljs.core.first.call(null, seq__2508_2522__$1);
            goog.dom.appendChild(div, node_2528);
            var G__2529 = cljs.core.next.call(null, seq__2508_2522__$1);
            var G__2530 = null;
            var G__2531 = 0;
            var G__2532 = 0;
            seq__2508_2512 = G__2529;
            chunk__2509_2513 = G__2530;
            count__2510_2514 = G__2531;
            i__2511_2515 = G__2532;
            continue;
          }
        } else {
        }
      }
      break;
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().documentElement, div);
  return div;
};
enfocus.core.remove_node_return_child = function enfocus$core$remove_node_return_child(div) {
  var child = div.childNodes;
  var frag = document.createDocumentFragment();
  goog.dom.append(frag, child);
  goog.dom.removeNode(div);
  return frag;
};
enfocus.core.last_element_child = function enfocus$core$last_element_child(node) {
  return goog.dom.getLastElementChild(node);
};
enfocus.core.replace_ids = function enfocus$core$replace_ids(var_args) {
  var G__2534 = arguments.length;
  switch(G__2534) {
    case 1:
      return enfocus.core.replace_ids.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.replace_ids.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.replace_ids.cljs$core$IFn$_invoke$arity$1 = function(text) {
  return enfocus.core.replace_ids.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), "_"].join(""), text);
};
enfocus.core.replace_ids.cljs$core$IFn$_invoke$arity$2 = function(id_mask, text) {
  var re = new RegExp("(\x3c.*?\\sid\x3d['\"])(.*?)(['\"].*?\x3e)", "g");
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id_mask, text.replace(re, function(re) {
    return function(a, b, c, d) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(id_mask), cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
    };
  }(re))], null);
};
enfocus.core.replace_ids.cljs$lang$maxFixedArity = 2;
enfocus.core.reset_ids = function enfocus$core$reset_ids(sym, nod) {
  var id_nodes = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col = enfocus.core.nodes__GT_coll.call(null, id_nodes);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(id_nodes, nod_col) {
    return function(p1__2536_SHARP_) {
      var id = p1__2536_SHARP_.getAttribute("id");
      var rid = id.replace(sym, "");
      return p1__2536_SHARP_.setAttribute("id", rid);
    };
  }(id_nodes, nod_col), nod_col));
};
enfocus.core.load_remote_dom = function enfocus$core$load_remote_dom(uri, dom_key, id_mask) {
  if (cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, dom_key) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req = new goog.net.XhrIo;
    var callback = function(req) {
      return function(req__$1) {
        var text = req__$1.getResponseText();
        var vec__2537 = enfocus.core.replace_ids.call(null, id_mask, text);
        var sym = cljs.core.nth.call(null, vec__2537, 0, null);
        var txt = cljs.core.nth.call(null, vec__2537, 1, null);
        return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, txt], null));
      };
    }(req);
    goog.events.listen(req, goog.net.EventType.COMPLETE, function(req, callback) {
      return function() {
        callback.call(null, req);
        return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec);
      };
    }(req, callback));
    return req.send(uri, "GET");
  } else {
    return null;
  }
};
enfocus.core.html_to_dom = function enfocus$core$html_to_dom(html) {
  var dfa = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa));
  var seq__2540_2544 = cljs.core.seq.call(null, dfa);
  var chunk__2541_2545 = null;
  var count__2542_2546 = 0;
  var i__2543_2547 = 0;
  while (true) {
    if (i__2543_2547 < count__2542_2546) {
      var df_2548 = cljs.core._nth.call(null, chunk__2541_2545, i__2543_2547);
      goog.dom.append(frag, df_2548);
      var G__2549 = seq__2540_2544;
      var G__2550 = chunk__2541_2545;
      var G__2551 = count__2542_2546;
      var G__2552 = i__2543_2547 + 1;
      seq__2540_2544 = G__2549;
      chunk__2541_2545 = G__2550;
      count__2542_2546 = G__2551;
      i__2543_2547 = G__2552;
      continue;
    } else {
      var temp__4657__auto___2553 = cljs.core.seq.call(null, seq__2540_2544);
      if (temp__4657__auto___2553) {
        var seq__2540_2554__$1 = temp__4657__auto___2553;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2540_2554__$1)) {
          var c__4319__auto___2555 = cljs.core.chunk_first.call(null, seq__2540_2554__$1);
          var G__2556 = cljs.core.chunk_rest.call(null, seq__2540_2554__$1);
          var G__2557 = c__4319__auto___2555;
          var G__2558 = cljs.core.count.call(null, c__4319__auto___2555);
          var G__2559 = 0;
          seq__2540_2544 = G__2556;
          chunk__2541_2545 = G__2557;
          count__2542_2546 = G__2558;
          i__2543_2547 = G__2559;
          continue;
        } else {
          var df_2560 = cljs.core.first.call(null, seq__2540_2554__$1);
          goog.dom.append(frag, df_2560);
          var G__2561 = cljs.core.next.call(null, seq__2540_2554__$1);
          var G__2562 = null;
          var G__2563 = 0;
          var G__2564 = 0;
          seq__2540_2544 = G__2561;
          chunk__2541_2545 = G__2562;
          count__2542_2546 = G__2563;
          i__2543_2547 = G__2564;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return frag;
};
enfocus.core.get_cached_dom = function enfocus$core$get_cached_dom(uri) {
  var nod = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if (cljs.core.truth_(nod)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, nod), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod))], null);
  } else {
    return null;
  }
};
enfocus.core.get_cached_snippet = function enfocus$core$get_cached_snippet(uri, sel) {
  var sel_str = enfocus.core.create_sel_str.call(null, sel);
  var cache = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(uri), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sel_str)].join(""));
  if (cljs.core.truth_(cache)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, cache), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache))], null);
  } else {
    var vec__2566 = enfocus.core.get_cached_dom.call(null, uri);
    var sym = cljs.core.nth.call(null, vec__2566, 0, null);
    var tdom = cljs.core.nth.call(null, vec__2566, 1, null);
    var dom = enfocus.core.create_hidden_dom.call(null, tdom);
    var tsnip = domina.nodes.call(null, enfocus.core.css_select.call(null, sym, dom, sel));
    var html_snip = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(vec__2566, sym, tdom, dom, tsnip, sel_str, cache) {
      return function(p1__2565_SHARP_) {
        return p1__2565_SHARP_.outerHTML;
      };
    }(vec__2566, sym, tdom, dom, tsnip, sel_str, cache), tsnip));
    enfocus.core.remove_node_return_child.call(null, dom);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(uri), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sel_str)].join(""), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, html_snip], null));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, enfocus.core.html_to_dom.call(null, html_snip)], null);
  }
};
enfocus.core.extr_multi_node = function enfocus$core$extr_multi_node(var_args) {
  var G__2570 = arguments.length;
  switch(G__2570) {
    case 1:
      return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1 = function(func) {
  return enfocus.core.extr_multi_node.call(null, func, null);
};
enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$2 = function(func, filt) {
  var trans = function enfocus$core$trans(pnodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result = cljs.core.map.call(null, func, pnod_col);
    var result__$1 = cljs.core.truth_(filt) ? cljs.core.filter.call(null, filt, result) : result;
    if (cljs.core.count.call(null, result__$1) <= 1) {
      return cljs.core.first.call(null, result__$1);
    } else {
      return result__$1;
    }
  };
  if (typeof enfocus.core.t_enfocus$core2571 !== "undefined") {
  } else {
    enfocus.core.t_enfocus$core2571 = function(func, filt, trans, meta2572) {
      this.func = func;
      this.filt = filt;
      this.trans = trans;
      this.meta2572 = meta2572;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    enfocus.core.t_enfocus$core2571.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
      return function(_2573, meta2572__$1) {
        var self__ = this;
        var _2573__$1 = this;
        return new enfocus.core.t_enfocus$core2571(self__.func, self__.filt, self__.trans, meta2572__$1);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
      return function(_2573) {
        var self__ = this;
        var _2573__$1 = this;
        return self__.meta2572;
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.enfocus$core$ITransform$ = cljs.core.PROTOCOL_SENTINEL;
    enfocus.core.t_enfocus$core2571.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
      return function(_, nodes) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
      return function(_, nodes, chain) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.call = function(trans) {
      return function() {
        var G__2576 = null;
        var G__2576__2 = function(self__, nodes) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, null);
        };
        var G__2576__3 = function(self__, nodes, chain) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, chain);
        };
        G__2576 = function(self__, nodes, chain) {
          switch(arguments.length) {
            case 2:
              return G__2576__2.call(this, self__, nodes);
            case 3:
              return G__2576__3.call(this, self__, nodes, chain);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2576.cljs$core$IFn$_invoke$arity$2 = G__2576__2;
        G__2576.cljs$core$IFn$_invoke$arity$3 = G__2576__3;
        return G__2576;
      }();
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.apply = function(trans) {
      return function(self__, args2574) {
        var self__ = this;
        var self____$1 = this;
        return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2574)));
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
      return function(nodes) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
      return function(nodes, chain) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.getBasis = function(trans) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "filt", "filt", 1809760609, null), new cljs.core.Symbol(null, "trans", "trans", 322027676, null), new cljs.core.Symbol(null, "meta2572", "meta2572", 860306193, null)], null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2571.cljs$lang$type = true;
    enfocus.core.t_enfocus$core2571.cljs$lang$ctorStr = "enfocus.core/t_enfocus$core2571";
    enfocus.core.t_enfocus$core2571.cljs$lang$ctorPrWriter = function(trans) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "enfocus.core/t_enfocus$core2571");
      };
    }(trans);
    enfocus.core.__GT_t_enfocus$core2571 = function(trans) {
      return function enfocus$core$__GT_t_enfocus$core2571(func__$1, filt__$1, trans__$1, meta2572) {
        return new enfocus.core.t_enfocus$core2571(func__$1, filt__$1, trans__$1, meta2572);
      };
    }(trans);
  }
  return new enfocus.core.t_enfocus$core2571(func, filt, trans, cljs.core.PersistentArrayMap.EMPTY);
};
enfocus.core.extr_multi_node.cljs$lang$maxFixedArity = 2;
enfocus.core.multi_node_chain = function enfocus$core$multi_node_chain(var_args) {
  var G__2579 = arguments.length;
  switch(G__2579) {
    case 1:
      return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1 = function(func) {
  var trans = function(nodes, chain) {
    var val = func.call(null, nodes);
    if (cljs.core.truth_(chain)) {
      return enfocus.core.apply_transform.call(null, chain, nodes);
    } else {
      return val;
    }
  };
  if (typeof enfocus.core.t_enfocus$core2580 !== "undefined") {
  } else {
    enfocus.core.t_enfocus$core2580 = function(func, trans, meta2581) {
      this.func = func;
      this.trans = trans;
      this.meta2581 = meta2581;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    enfocus.core.t_enfocus$core2580.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
      return function(_2582, meta2581__$1) {
        var self__ = this;
        var _2582__$1 = this;
        return new enfocus.core.t_enfocus$core2580(self__.func, self__.trans, meta2581__$1);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
      return function(_2582) {
        var self__ = this;
        var _2582__$1 = this;
        return self__.meta2581;
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.enfocus$core$ITransform$ = cljs.core.PROTOCOL_SENTINEL;
    enfocus.core.t_enfocus$core2580.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
      return function(_, nodes) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
      return function(_, nodes, chain) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.call = function(trans) {
      return function() {
        var G__2589 = null;
        var G__2589__2 = function(self__, nodes) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, null);
        };
        var G__2589__3 = function(self__, nodes, chain) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, chain);
        };
        G__2589 = function(self__, nodes, chain) {
          switch(arguments.length) {
            case 2:
              return G__2589__2.call(this, self__, nodes);
            case 3:
              return G__2589__3.call(this, self__, nodes, chain);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2589.cljs$core$IFn$_invoke$arity$2 = G__2589__2;
        G__2589.cljs$core$IFn$_invoke$arity$3 = G__2589__3;
        return G__2589;
      }();
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.apply = function(trans) {
      return function(self__, args2583) {
        var self__ = this;
        var self____$1 = this;
        return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2583)));
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
      return function(nodes) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
      return function(nodes, chain) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.getBasis = function(trans) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "trans", "trans", 322027676, null), new cljs.core.Symbol(null, "meta2581", "meta2581", -658224244, null)], null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2580.cljs$lang$type = true;
    enfocus.core.t_enfocus$core2580.cljs$lang$ctorStr = "enfocus.core/t_enfocus$core2580";
    enfocus.core.t_enfocus$core2580.cljs$lang$ctorPrWriter = function(trans) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "enfocus.core/t_enfocus$core2580");
      };
    }(trans);
    enfocus.core.__GT_t_enfocus$core2580 = function(trans) {
      return function enfocus$core$__GT_t_enfocus$core2580(func__$1, trans__$1, meta2581) {
        return new enfocus.core.t_enfocus$core2580(func__$1, trans__$1, meta2581);
      };
    }(trans);
  }
  return new enfocus.core.t_enfocus$core2580(func, trans, cljs.core.PersistentArrayMap.EMPTY);
};
enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2 = function(values, func) {
  var trans = function(nodes, chain) {
    var vnodes = cljs.core.mapcat.call(null, function(p1__2577_SHARP_) {
      return domina.nodes.call(null, p1__2577_SHARP_);
    }, values);
    var val = func.call(null, nodes, vnodes);
    if (cljs.core.truth_(chain)) {
      return enfocus.core.apply_transform.call(null, chain, nodes);
    } else {
      return val;
    }
  };
  if (typeof enfocus.core.t_enfocus$core2584 !== "undefined") {
  } else {
    enfocus.core.t_enfocus$core2584 = function(values, func, trans, meta2585) {
      this.values = values;
      this.func = func;
      this.trans = trans;
      this.meta2585 = meta2585;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    enfocus.core.t_enfocus$core2584.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
      return function(_2586, meta2585__$1) {
        var self__ = this;
        var _2586__$1 = this;
        return new enfocus.core.t_enfocus$core2584(self__.values, self__.func, self__.trans, meta2585__$1);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
      return function(_2586) {
        var self__ = this;
        var _2586__$1 = this;
        return self__.meta2585;
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.enfocus$core$ITransform$ = cljs.core.PROTOCOL_SENTINEL;
    enfocus.core.t_enfocus$core2584.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
      return function(_, nodes) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
      return function(_, nodes, chain) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.call = function(trans) {
      return function() {
        var G__2590 = null;
        var G__2590__2 = function(self__, nodes) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, null);
        };
        var G__2590__3 = function(self__, nodes, chain) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, chain);
        };
        G__2590 = function(self__, nodes, chain) {
          switch(arguments.length) {
            case 2:
              return G__2590__2.call(this, self__, nodes);
            case 3:
              return G__2590__3.call(this, self__, nodes, chain);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2590.cljs$core$IFn$_invoke$arity$2 = G__2590__2;
        G__2590.cljs$core$IFn$_invoke$arity$3 = G__2590__3;
        return G__2590;
      }();
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.apply = function(trans) {
      return function(self__, args2587) {
        var self__ = this;
        var self____$1 = this;
        return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2587)));
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
      return function(nodes) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
      return function(nodes, chain) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.getBasis = function(trans) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "values", "values", 2013177083, null), new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "trans", "trans", 322027676, null), new cljs.core.Symbol(null, "meta2585", "meta2585", 1792061996, null)], null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2584.cljs$lang$type = true;
    enfocus.core.t_enfocus$core2584.cljs$lang$ctorStr = "enfocus.core/t_enfocus$core2584";
    enfocus.core.t_enfocus$core2584.cljs$lang$ctorPrWriter = function(trans) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "enfocus.core/t_enfocus$core2584");
      };
    }(trans);
    enfocus.core.__GT_t_enfocus$core2584 = function(trans) {
      return function enfocus$core$__GT_t_enfocus$core2584(values__$1, func__$1, trans__$1, meta2585) {
        return new enfocus.core.t_enfocus$core2584(values__$1, func__$1, trans__$1, meta2585);
      };
    }(trans);
  }
  return new enfocus.core.t_enfocus$core2584(values, func, trans, cljs.core.PersistentArrayMap.EMPTY);
};
enfocus.core.multi_node_chain.cljs$lang$maxFixedArity = 2;
enfocus.core.content = function enfocus$core$content(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2594 = arguments.length;
  var i__4500__auto___2595 = 0;
  while (true) {
    if (i__4500__auto___2595 < len__4499__auto___2594) {
      args__4502__auto__.push(arguments[i__4500__auto___2595]);
      var G__2596 = i__4500__auto___2595 + 1;
      i__4500__auto___2595 = G__2596;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.content.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.content.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2591_SHARP_, p2__2592_SHARP_) {
    domina.destroy_children_BANG_.call(null, p1__2591_SHARP_);
    return domina.append_BANG_.call(null, p1__2591_SHARP_, p2__2592_SHARP_);
  });
};
enfocus.core.content.cljs$lang$maxFixedArity = 0;
enfocus.core.content.cljs$lang$applyTo = function(seq2593) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2593));
};
enfocus.core.html_content = function enfocus$core$html_content(txt) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2597_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__2597_SHARP_, txt);
  });
};
enfocus.core.set_attr = function enfocus$core$set_attr(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2610 = arguments.length;
  var i__4500__auto___2611 = 0;
  while (true) {
    if (i__4500__auto___2611 < len__4499__auto___2610) {
      args__4502__auto__.push(arguments[i__4500__auto___2611]);
      var G__2612 = i__4500__auto___2611 + 1;
      i__4500__auto___2611 = G__2612;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.set_attr.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.set_attr.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  var pairs = cljs.core.partition.call(null, 2, values);
  return enfocus.core.multi_node_chain.call(null, function(pairs) {
    return function(p1__2598_SHARP_) {
      var seq__2600 = cljs.core.seq.call(null, pairs);
      var chunk__2601 = null;
      var count__2602 = 0;
      var i__2603 = 0;
      while (true) {
        if (i__2603 < count__2602) {
          var vec__2604 = cljs.core._nth.call(null, chunk__2601, i__2603);
          var name = cljs.core.nth.call(null, vec__2604, 0, null);
          var value = cljs.core.nth.call(null, vec__2604, 1, null);
          domina.set_attr_BANG_.call(null, p1__2598_SHARP_, name, value);
          var G__2613 = seq__2600;
          var G__2614 = chunk__2601;
          var G__2615 = count__2602;
          var G__2616 = i__2603 + 1;
          seq__2600 = G__2613;
          chunk__2601 = G__2614;
          count__2602 = G__2615;
          i__2603 = G__2616;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__2600);
          if (temp__4657__auto__) {
            var seq__2600__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2600__$1)) {
              var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2600__$1);
              var G__2617 = cljs.core.chunk_rest.call(null, seq__2600__$1);
              var G__2618 = c__4319__auto__;
              var G__2619 = cljs.core.count.call(null, c__4319__auto__);
              var G__2620 = 0;
              seq__2600 = G__2617;
              chunk__2601 = G__2618;
              count__2602 = G__2619;
              i__2603 = G__2620;
              continue;
            } else {
              var vec__2607 = cljs.core.first.call(null, seq__2600__$1);
              var name = cljs.core.nth.call(null, vec__2607, 0, null);
              var value = cljs.core.nth.call(null, vec__2607, 1, null);
              domina.set_attr_BANG_.call(null, p1__2598_SHARP_, name, value);
              var G__2621 = cljs.core.next.call(null, seq__2600__$1);
              var G__2622 = null;
              var G__2623 = 0;
              var G__2624 = 0;
              seq__2600 = G__2621;
              chunk__2601 = G__2622;
              count__2602 = G__2623;
              i__2603 = G__2624;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(pairs));
};
enfocus.core.set_attr.cljs$lang$maxFixedArity = 0;
enfocus.core.set_attr.cljs$lang$applyTo = function(seq2599) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2599));
};
enfocus.core.remove_attr = function enfocus$core$remove_attr(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2631 = arguments.length;
  var i__4500__auto___2632 = 0;
  while (true) {
    if (i__4500__auto___2632 < len__4499__auto___2631) {
      args__4502__auto__.push(arguments[i__4500__auto___2632]);
      var G__2633 = i__4500__auto___2632 + 1;
      i__4500__auto___2632 = G__2633;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.remove_attr.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.remove_attr.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2625_SHARP_) {
    var seq__2627 = cljs.core.seq.call(null, values);
    var chunk__2628 = null;
    var count__2629 = 0;
    var i__2630 = 0;
    while (true) {
      if (i__2630 < count__2629) {
        var name = cljs.core._nth.call(null, chunk__2628, i__2630);
        domina.remove_attr_BANG_.call(null, p1__2625_SHARP_, name);
        var G__2634 = seq__2627;
        var G__2635 = chunk__2628;
        var G__2636 = count__2629;
        var G__2637 = i__2630 + 1;
        seq__2627 = G__2634;
        chunk__2628 = G__2635;
        count__2629 = G__2636;
        i__2630 = G__2637;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__2627);
        if (temp__4657__auto__) {
          var seq__2627__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2627__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2627__$1);
            var G__2638 = cljs.core.chunk_rest.call(null, seq__2627__$1);
            var G__2639 = c__4319__auto__;
            var G__2640 = cljs.core.count.call(null, c__4319__auto__);
            var G__2641 = 0;
            seq__2627 = G__2638;
            chunk__2628 = G__2639;
            count__2629 = G__2640;
            i__2630 = G__2641;
            continue;
          } else {
            var name = cljs.core.first.call(null, seq__2627__$1);
            domina.remove_attr_BANG_.call(null, p1__2625_SHARP_, name);
            var G__2642 = cljs.core.next.call(null, seq__2627__$1);
            var G__2643 = null;
            var G__2644 = 0;
            var G__2645 = 0;
            seq__2627 = G__2642;
            chunk__2628 = G__2643;
            count__2629 = G__2644;
            i__2630 = G__2645;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
enfocus.core.remove_attr.cljs$lang$maxFixedArity = 0;
enfocus.core.remove_attr.cljs$lang$applyTo = function(seq2626) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2626));
};
enfocus.core.set_prop = function enfocus$core$set_prop(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2651 = arguments.length;
  var i__4500__auto___2652 = 0;
  while (true) {
    if (i__4500__auto___2652 < len__4499__auto___2651) {
      args__4502__auto__.push(arguments[i__4500__auto___2652]);
      var G__2653 = i__4500__auto___2652 + 1;
      i__4500__auto___2652 = G__2653;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.set_prop.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.set_prop.cljs$core$IFn$_invoke$arity$variadic = function(forms) {
  return function(node) {
    var h = cljs.core.mapcat.call(null, function(p__2647) {
      var vec__2648 = p__2647;
      var n = cljs.core.nth.call(null, vec__2648, 0, null);
      var v = cljs.core.nth.call(null, vec__2648, 1, null);
      return new cljs.core.List(null, cljs.core.name.call(null, n), new cljs.core.List(null, v, null, 1, null), 2, null);
    }, cljs.core.partition.call(null, 2, forms));
    return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h));
  };
};
enfocus.core.set_prop.cljs$lang$maxFixedArity = 0;
enfocus.core.set_prop.cljs$lang$applyTo = function(seq2646) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2646));
};
enfocus.core.has_class = function enfocus$core$has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls);
};
enfocus.core.add_class = function enfocus$core$add_class(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2660 = arguments.length;
  var i__4500__auto___2661 = 0;
  while (true) {
    if (i__4500__auto___2661 < len__4499__auto___2660) {
      args__4502__auto__.push(arguments[i__4500__auto___2661]);
      var G__2662 = i__4500__auto___2661 + 1;
      i__4500__auto___2661 = G__2662;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.add_class.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.add_class.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2654_SHARP_) {
    var seq__2656 = cljs.core.seq.call(null, values);
    var chunk__2657 = null;
    var count__2658 = 0;
    var i__2659 = 0;
    while (true) {
      if (i__2659 < count__2658) {
        var val = cljs.core._nth.call(null, chunk__2657, i__2659);
        domina.add_class_BANG_.call(null, p1__2654_SHARP_, val);
        var G__2663 = seq__2656;
        var G__2664 = chunk__2657;
        var G__2665 = count__2658;
        var G__2666 = i__2659 + 1;
        seq__2656 = G__2663;
        chunk__2657 = G__2664;
        count__2658 = G__2665;
        i__2659 = G__2666;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__2656);
        if (temp__4657__auto__) {
          var seq__2656__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2656__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2656__$1);
            var G__2667 = cljs.core.chunk_rest.call(null, seq__2656__$1);
            var G__2668 = c__4319__auto__;
            var G__2669 = cljs.core.count.call(null, c__4319__auto__);
            var G__2670 = 0;
            seq__2656 = G__2667;
            chunk__2657 = G__2668;
            count__2658 = G__2669;
            i__2659 = G__2670;
            continue;
          } else {
            var val = cljs.core.first.call(null, seq__2656__$1);
            domina.add_class_BANG_.call(null, p1__2654_SHARP_, val);
            var G__2671 = cljs.core.next.call(null, seq__2656__$1);
            var G__2672 = null;
            var G__2673 = 0;
            var G__2674 = 0;
            seq__2656 = G__2671;
            chunk__2657 = G__2672;
            count__2658 = G__2673;
            i__2659 = G__2674;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
enfocus.core.add_class.cljs$lang$maxFixedArity = 0;
enfocus.core.add_class.cljs$lang$applyTo = function(seq2655) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2655));
};
enfocus.core.remove_class = function enfocus$core$remove_class(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2681 = arguments.length;
  var i__4500__auto___2682 = 0;
  while (true) {
    if (i__4500__auto___2682 < len__4499__auto___2681) {
      args__4502__auto__.push(arguments[i__4500__auto___2682]);
      var G__2683 = i__4500__auto___2682 + 1;
      i__4500__auto___2682 = G__2683;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.remove_class.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.remove_class.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2675_SHARP_) {
    var seq__2677 = cljs.core.seq.call(null, values);
    var chunk__2678 = null;
    var count__2679 = 0;
    var i__2680 = 0;
    while (true) {
      if (i__2680 < count__2679) {
        var val = cljs.core._nth.call(null, chunk__2678, i__2680);
        domina.remove_class_BANG_.call(null, p1__2675_SHARP_, val);
        var G__2684 = seq__2677;
        var G__2685 = chunk__2678;
        var G__2686 = count__2679;
        var G__2687 = i__2680 + 1;
        seq__2677 = G__2684;
        chunk__2678 = G__2685;
        count__2679 = G__2686;
        i__2680 = G__2687;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__2677);
        if (temp__4657__auto__) {
          var seq__2677__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2677__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2677__$1);
            var G__2688 = cljs.core.chunk_rest.call(null, seq__2677__$1);
            var G__2689 = c__4319__auto__;
            var G__2690 = cljs.core.count.call(null, c__4319__auto__);
            var G__2691 = 0;
            seq__2677 = G__2688;
            chunk__2678 = G__2689;
            count__2679 = G__2690;
            i__2680 = G__2691;
            continue;
          } else {
            var val = cljs.core.first.call(null, seq__2677__$1);
            domina.remove_class_BANG_.call(null, p1__2675_SHARP_, val);
            var G__2692 = cljs.core.next.call(null, seq__2677__$1);
            var G__2693 = null;
            var G__2694 = 0;
            var G__2695 = 0;
            seq__2677 = G__2692;
            chunk__2678 = G__2693;
            count__2679 = G__2694;
            i__2680 = G__2695;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
enfocus.core.remove_class.cljs$lang$maxFixedArity = 0;
enfocus.core.remove_class.cljs$lang$applyTo = function(seq2676) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2676));
};
enfocus.core.set_class = function enfocus$core$set_class(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2698 = arguments.length;
  var i__4500__auto___2699 = 0;
  while (true) {
    if (i__4500__auto___2699 < len__4499__auto___2698) {
      args__4502__auto__.push(arguments[i__4500__auto___2699]);
      var G__2700 = i__4500__auto___2699 + 1;
      i__4500__auto___2699 = G__2700;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.set_class.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.set_class.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2696_SHARP_) {
    return domina.set_classes_BANG_.call(null, p1__2696_SHARP_, values);
  });
};
enfocus.core.set_class.cljs$lang$maxFixedArity = 0;
enfocus.core.set_class.cljs$lang$applyTo = function(seq2697) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2697));
};
enfocus.core.do__GT_ = function enfocus$core$do__GT_(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2706 = arguments.length;
  var i__4500__auto___2707 = 0;
  while (true) {
    if (i__4500__auto___2707 < len__4499__auto___2706) {
      args__4502__auto__.push(arguments[i__4500__auto___2707]);
      var G__2708 = i__4500__auto___2707 + 1;
      i__4500__auto___2707 = G__2708;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.do__GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.do__GT_.cljs$core$IFn$_invoke$arity$variadic = function(forms) {
  return function(pnod) {
    var seq__2702 = cljs.core.seq.call(null, forms);
    var chunk__2703 = null;
    var count__2704 = 0;
    var i__2705 = 0;
    while (true) {
      if (i__2705 < count__2704) {
        var fun = cljs.core._nth.call(null, chunk__2703, i__2705);
        enfocus.core.apply_transform.call(null, fun, pnod);
        var G__2709 = seq__2702;
        var G__2710 = chunk__2703;
        var G__2711 = count__2704;
        var G__2712 = i__2705 + 1;
        seq__2702 = G__2709;
        chunk__2703 = G__2710;
        count__2704 = G__2711;
        i__2705 = G__2712;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__2702);
        if (temp__4657__auto__) {
          var seq__2702__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2702__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2702__$1);
            var G__2713 = cljs.core.chunk_rest.call(null, seq__2702__$1);
            var G__2714 = c__4319__auto__;
            var G__2715 = cljs.core.count.call(null, c__4319__auto__);
            var G__2716 = 0;
            seq__2702 = G__2713;
            chunk__2703 = G__2714;
            count__2704 = G__2715;
            i__2705 = G__2716;
            continue;
          } else {
            var fun = cljs.core.first.call(null, seq__2702__$1);
            enfocus.core.apply_transform.call(null, fun, pnod);
            var G__2717 = cljs.core.next.call(null, seq__2702__$1);
            var G__2718 = null;
            var G__2719 = 0;
            var G__2720 = 0;
            seq__2702 = G__2717;
            chunk__2703 = G__2718;
            count__2704 = G__2719;
            i__2705 = G__2720;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
};
enfocus.core.do__GT_.cljs$lang$maxFixedArity = 0;
enfocus.core.do__GT_.cljs$lang$applyTo = function(seq2701) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2701));
};
enfocus.core.append = function enfocus$core$append(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2724 = arguments.length;
  var i__4500__auto___2725 = 0;
  while (true) {
    if (i__4500__auto___2725 < len__4499__auto___2724) {
      args__4502__auto__.push(arguments[i__4500__auto___2725]);
      var G__2726 = i__4500__auto___2725 + 1;
      i__4500__auto___2725 = G__2726;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.append.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.append.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2721_SHARP_, p2__2722_SHARP_) {
    return domina.append_BANG_.call(null, p1__2721_SHARP_, p2__2722_SHARP_);
  });
};
enfocus.core.append.cljs$lang$maxFixedArity = 0;
enfocus.core.append.cljs$lang$applyTo = function(seq2723) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2723));
};
enfocus.core.prepend = function enfocus$core$prepend(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2730 = arguments.length;
  var i__4500__auto___2731 = 0;
  while (true) {
    if (i__4500__auto___2731 < len__4499__auto___2730) {
      args__4502__auto__.push(arguments[i__4500__auto___2731]);
      var G__2732 = i__4500__auto___2731 + 1;
      i__4500__auto___2731 = G__2732;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.prepend.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.prepend.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2727_SHARP_, p2__2728_SHARP_) {
    return domina.prepend_BANG_.call(null, p1__2727_SHARP_, p2__2728_SHARP_);
  });
};
enfocus.core.prepend.cljs$lang$maxFixedArity = 0;
enfocus.core.prepend.cljs$lang$applyTo = function(seq2729) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2729));
};
enfocus.core.before = function enfocus$core$before(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2736 = arguments.length;
  var i__4500__auto___2737 = 0;
  while (true) {
    if (i__4500__auto___2737 < len__4499__auto___2736) {
      args__4502__auto__.push(arguments[i__4500__auto___2737]);
      var G__2738 = i__4500__auto___2737 + 1;
      i__4500__auto___2737 = G__2738;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.before.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.before.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2733_SHARP_, p2__2734_SHARP_) {
    return domina.insert_before_BANG_.call(null, p1__2733_SHARP_, p2__2734_SHARP_);
  });
};
enfocus.core.before.cljs$lang$maxFixedArity = 0;
enfocus.core.before.cljs$lang$applyTo = function(seq2735) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2735));
};
enfocus.core.after = function enfocus$core$after(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2742 = arguments.length;
  var i__4500__auto___2743 = 0;
  while (true) {
    if (i__4500__auto___2743 < len__4499__auto___2742) {
      args__4502__auto__.push(arguments[i__4500__auto___2743]);
      var G__2744 = i__4500__auto___2743 + 1;
      i__4500__auto___2743 = G__2744;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.after.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.after.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2739_SHARP_, p2__2740_SHARP_) {
    return domina.insert_after_BANG_.call(null, p1__2739_SHARP_, p2__2740_SHARP_);
  });
};
enfocus.core.after.cljs$lang$maxFixedArity = 0;
enfocus.core.after.cljs$lang$applyTo = function(seq2741) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2741));
};
enfocus.core.substitute = function enfocus$core$substitute(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2748 = arguments.length;
  var i__4500__auto___2749 = 0;
  while (true) {
    if (i__4500__auto___2749 < len__4499__auto___2748) {
      args__4502__auto__.push(arguments[i__4500__auto___2749]);
      var G__2750 = i__4500__auto___2749 + 1;
      i__4500__auto___2749 = G__2750;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.substitute.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.substitute.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return enfocus.core.multi_node_chain.call(null, values, function(p1__2745_SHARP_, p2__2746_SHARP_) {
    return domina.swap_content_BANG_.call(null, p1__2745_SHARP_, p2__2746_SHARP_);
  });
};
enfocus.core.substitute.cljs$lang$maxFixedArity = 0;
enfocus.core.substitute.cljs$lang$applyTo = function(seq2747) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2747));
};
enfocus.core.remove_node = function enfocus$core$remove_node() {
  return enfocus.core.multi_node_chain.call(null, function(p1__2751_SHARP_) {
    return domina.detach_BANG_.call(null, p1__2751_SHARP_);
  });
};
enfocus.core.wrap = function enfocus$core$wrap(elm, mattr) {
  return function(pnod) {
    var elem = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem, mattr);
    enfocus.core.at.call(null, elem, enfocus.core.content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.do__GT_.call(null, enfocus.core.after.call(null, elem), enfocus.core.remove_node.call(null)));
  };
};
enfocus.core.unwrap = function enfocus$core$unwrap() {
  return function(pnod) {
    var frag = document.createDocumentFragment();
    goog.dom.append(frag, pnod.childNodes);
    return goog.dom.replaceNode(frag, pnod);
  };
};
enfocus.core.set_style = function enfocus$core$set_style(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2764 = arguments.length;
  var i__4500__auto___2765 = 0;
  while (true) {
    if (i__4500__auto___2765 < len__4499__auto___2764) {
      args__4502__auto__.push(arguments[i__4500__auto___2765]);
      var G__2766 = i__4500__auto___2765 + 1;
      i__4500__auto___2765 = G__2766;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.set_style.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.set_style.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  var pairs = cljs.core.partition.call(null, 2, values);
  return enfocus.core.multi_node_chain.call(null, function(pairs) {
    return function(p1__2752_SHARP_) {
      var seq__2754 = cljs.core.seq.call(null, pairs);
      var chunk__2755 = null;
      var count__2756 = 0;
      var i__2757 = 0;
      while (true) {
        if (i__2757 < count__2756) {
          var vec__2758 = cljs.core._nth.call(null, chunk__2755, i__2757);
          var name = cljs.core.nth.call(null, vec__2758, 0, null);
          var value = cljs.core.nth.call(null, vec__2758, 1, null);
          domina.set_style_BANG_.call(null, p1__2752_SHARP_, name, value);
          var G__2767 = seq__2754;
          var G__2768 = chunk__2755;
          var G__2769 = count__2756;
          var G__2770 = i__2757 + 1;
          seq__2754 = G__2767;
          chunk__2755 = G__2768;
          count__2756 = G__2769;
          i__2757 = G__2770;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__2754);
          if (temp__4657__auto__) {
            var seq__2754__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2754__$1)) {
              var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2754__$1);
              var G__2771 = cljs.core.chunk_rest.call(null, seq__2754__$1);
              var G__2772 = c__4319__auto__;
              var G__2773 = cljs.core.count.call(null, c__4319__auto__);
              var G__2774 = 0;
              seq__2754 = G__2771;
              chunk__2755 = G__2772;
              count__2756 = G__2773;
              i__2757 = G__2774;
              continue;
            } else {
              var vec__2761 = cljs.core.first.call(null, seq__2754__$1);
              var name = cljs.core.nth.call(null, vec__2761, 0, null);
              var value = cljs.core.nth.call(null, vec__2761, 1, null);
              domina.set_style_BANG_.call(null, p1__2752_SHARP_, name, value);
              var G__2775 = cljs.core.next.call(null, seq__2754__$1);
              var G__2776 = null;
              var G__2777 = 0;
              var G__2778 = 0;
              seq__2754 = G__2775;
              chunk__2755 = G__2776;
              count__2756 = G__2777;
              i__2757 = G__2778;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(pairs));
};
enfocus.core.set_style.cljs$lang$maxFixedArity = 0;
enfocus.core.set_style.cljs$lang$applyTo = function(seq2753) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2753));
};
enfocus.core.remove_style = function enfocus$core$remove_style(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2780 = arguments.length;
  var i__4500__auto___2781 = 0;
  while (true) {
    if (i__4500__auto___2781 < len__4499__auto___2780) {
      args__4502__auto__.push(arguments[i__4500__auto___2781]);
      var G__2782 = i__4500__auto___2781 + 1;
      i__4500__auto___2781 = G__2782;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 0 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(0), 0, null) : null;
  return enfocus.core.remove_style.cljs$core$IFn$_invoke$arity$variadic(argseq__4503__auto__);
};
enfocus.core.remove_style.cljs$core$IFn$_invoke$arity$variadic = function(values) {
  return function(pnod) {
    return enfocus.core.style_remove.call(null, pnod, values);
  };
};
enfocus.core.remove_style.cljs$lang$maxFixedArity = 0;
enfocus.core.remove_style.cljs$lang$applyTo = function(seq2779) {
  var self__4487__auto__ = this;
  return self__4487__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2779));
};
enfocus.core.focus = function enfocus$core$focus() {
  return function(node) {
    return node.focus();
  };
};
enfocus.core.blur = function enfocus$core$blur() {
  return function(node) {
    return node.blur();
  };
};
enfocus.core.set_data = function enfocus$core$set_data(ky, val) {
  return enfocus.core.multi_node_chain.call(null, function(p1__2783_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__2783_SHARP_, ky, val);
  });
};
enfocus.core.delay = function enfocus$core$delay(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2786 = arguments.length;
  var i__4500__auto___2787 = 0;
  while (true) {
    if (i__4500__auto___2787 < len__4499__auto___2786) {
      args__4502__auto__.push(arguments[i__4500__auto___2787]);
      var G__2788 = i__4500__auto___2787 + 1;
      i__4500__auto___2787 = G__2788;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return enfocus.core.delay.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
enfocus.core.delay.cljs$core$IFn$_invoke$arity$variadic = function(ttime, funcs) {
  return function(pnod) {
    return enfocus.core.setTimeout.call(null, function() {
      return cljs.core.apply.call(null, enfocus.core.at, pnod, funcs);
    }, ttime);
  };
};
enfocus.core.delay.cljs$lang$maxFixedArity = 1;
enfocus.core.delay.cljs$lang$applyTo = function(seq2784) {
  var G__2785 = cljs.core.first.call(null, seq2784);
  var seq2784__$1 = cljs.core.next.call(null, seq2784);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2785, seq2784__$1);
};
enfocus.core.replace_vars = function enfocus$core$replace_vars(vars) {
  var rep_str = function enfocus$core$replace_vars_$_rep_str(text) {
    return clojure.string.replace.call(null, text, /\$\{\s*(\S+)\s*}/, function(p1__2790_SHARP_, p2__2789_SHARP_) {
      return vars.call(null, cljs.core.keyword.call(null, p2__2789_SHARP_));
    });
  };
  return function enfocus$core$replace_vars_$_rep_node(pnod) {
    if (cljs.core.truth_(pnod.attributes)) {
      var seq__2791_2799 = cljs.core.seq.call(null, cljs.core.range.call(null, pnod.attributes.length));
      var chunk__2792_2800 = null;
      var count__2793_2801 = 0;
      var i__2794_2802 = 0;
      while (true) {
        if (i__2794_2802 < count__2793_2801) {
          var idx_2803 = cljs.core._nth.call(null, chunk__2792_2800, i__2794_2802);
          var attr_2804 = pnod.attributes.item(idx_2803);
          if (cljs.core.truth_(attr_2804.specified)) {
            attr_2804.value = rep_str.call(null, attr_2804.value);
          } else {
          }
          var G__2805 = seq__2791_2799;
          var G__2806 = chunk__2792_2800;
          var G__2807 = count__2793_2801;
          var G__2808 = i__2794_2802 + 1;
          seq__2791_2799 = G__2805;
          chunk__2792_2800 = G__2806;
          count__2793_2801 = G__2807;
          i__2794_2802 = G__2808;
          continue;
        } else {
          var temp__4657__auto___2809 = cljs.core.seq.call(null, seq__2791_2799);
          if (temp__4657__auto___2809) {
            var seq__2791_2810__$1 = temp__4657__auto___2809;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2791_2810__$1)) {
              var c__4319__auto___2811 = cljs.core.chunk_first.call(null, seq__2791_2810__$1);
              var G__2812 = cljs.core.chunk_rest.call(null, seq__2791_2810__$1);
              var G__2813 = c__4319__auto___2811;
              var G__2814 = cljs.core.count.call(null, c__4319__auto___2811);
              var G__2815 = 0;
              seq__2791_2799 = G__2812;
              chunk__2792_2800 = G__2813;
              count__2793_2801 = G__2814;
              i__2794_2802 = G__2815;
              continue;
            } else {
              var idx_2816 = cljs.core.first.call(null, seq__2791_2810__$1);
              var attr_2817 = pnod.attributes.item(idx_2816);
              if (cljs.core.truth_(attr_2817.specified)) {
                attr_2817.value = rep_str.call(null, attr_2817.value);
              } else {
              }
              var G__2818 = cljs.core.next.call(null, seq__2791_2810__$1);
              var G__2819 = null;
              var G__2820 = 0;
              var G__2821 = 0;
              seq__2791_2799 = G__2818;
              chunk__2792_2800 = G__2819;
              count__2793_2801 = G__2820;
              i__2794_2802 = G__2821;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    if (cljs.core._EQ_.call(null, pnod.nodeType, 3)) {
      return pnod.nodeValue = rep_str.call(null, pnod.nodeValue);
    } else {
      var seq__2795 = cljs.core.seq.call(null, enfocus.core.nodes__GT_coll.call(null, pnod.childNodes));
      var chunk__2796 = null;
      var count__2797 = 0;
      var i__2798 = 0;
      while (true) {
        if (i__2798 < count__2797) {
          var cnode = cljs.core._nth.call(null, chunk__2796, i__2798);
          enfocus$core$replace_vars_$_rep_node.call(null, cnode);
          var G__2822 = seq__2795;
          var G__2823 = chunk__2796;
          var G__2824 = count__2797;
          var G__2825 = i__2798 + 1;
          seq__2795 = G__2822;
          chunk__2796 = G__2823;
          count__2797 = G__2824;
          i__2798 = G__2825;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__2795);
          if (temp__4657__auto__) {
            var seq__2795__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2795__$1)) {
              var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2795__$1);
              var G__2826 = cljs.core.chunk_rest.call(null, seq__2795__$1);
              var G__2827 = c__4319__auto__;
              var G__2828 = cljs.core.count.call(null, c__4319__auto__);
              var G__2829 = 0;
              seq__2795 = G__2826;
              chunk__2796 = G__2827;
              count__2797 = G__2828;
              i__2798 = G__2829;
              continue;
            } else {
              var cnode = cljs.core.first.call(null, seq__2795__$1);
              enfocus$core$replace_vars_$_rep_node.call(null, cnode);
              var G__2830 = cljs.core.next.call(null, seq__2795__$1);
              var G__2831 = null;
              var G__2832 = 0;
              var G__2833 = 0;
              seq__2795 = G__2830;
              chunk__2796 = G__2831;
              count__2797 = G__2832;
              i__2798 = G__2833;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  };
};
enfocus.core.exists_in_QMARK_ = function enfocus$core$exists_in_QMARK_(col_or_val, val) {
  if (cljs.core.coll_QMARK_.call(null, col_or_val)) {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([val]), col_or_val);
  } else {
    return cljs.core._EQ_.call(null, col_or_val, val);
  }
};
enfocus.core.set_form_input = function enfocus$core$set_form_input(val) {
  return function(el) {
    if (cljs.core._EQ_.call(null, el.type, "checkbox") || cljs.core._EQ_.call(null, el.type, "radio")) {
      return el.checked = enfocus.core.exists_in_QMARK_.call(null, val, el.value);
    } else {
      var nval = cljs.core.coll_QMARK_.call(null, val) && !(typeof val === "string") ? cljs.core.vec.call(null, val) : cljs.core._EQ_.call(null, el.type, "select-multiple") ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [val], null) : val;
      return goog.dom.forms.setValue(el, cljs.core.clj__GT_js.call(null, nval));
    }
  };
};
enfocus.core.set_form = function enfocus$core$set_form(value_map) {
  return function(form_node) {
    if (cljs.core._EQ_.call(null, form_node.nodeName, "FORM")) {
      var seq__2834 = cljs.core.seq.call(null, cljs.core.range.call(null, form_node.length));
      var chunk__2835 = null;
      var count__2836 = 0;
      var i__2837 = 0;
      while (true) {
        if (i__2837 < count__2836) {
          var idx = cljs.core._nth.call(null, chunk__2835, i__2837);
          var el_2838 = form_node.elements[idx];
          var ky_2839 = cljs.core.keyword.call(null, el_2838.name);
          var val_2840 = ky_2839.call(null, value_map);
          if (cljs.core.contains_QMARK_.call(null, value_map, ky_2839)) {
            var val_2841__$1 = cljs.core.truth_(val_2840) ? val_2840 : "";
            enfocus.core.set_form_input.call(null, val_2841__$1).call(null, el_2838);
          } else {
          }
          var G__2842 = seq__2834;
          var G__2843 = chunk__2835;
          var G__2844 = count__2836;
          var G__2845 = i__2837 + 1;
          seq__2834 = G__2842;
          chunk__2835 = G__2843;
          count__2836 = G__2844;
          i__2837 = G__2845;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__2834);
          if (temp__4657__auto__) {
            var seq__2834__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2834__$1)) {
              var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2834__$1);
              var G__2846 = cljs.core.chunk_rest.call(null, seq__2834__$1);
              var G__2847 = c__4319__auto__;
              var G__2848 = cljs.core.count.call(null, c__4319__auto__);
              var G__2849 = 0;
              seq__2834 = G__2846;
              chunk__2835 = G__2847;
              count__2836 = G__2848;
              i__2837 = G__2849;
              continue;
            } else {
              var idx = cljs.core.first.call(null, seq__2834__$1);
              var el_2850 = form_node.elements[idx];
              var ky_2851 = cljs.core.keyword.call(null, el_2850.name);
              var val_2852 = ky_2851.call(null, value_map);
              if (cljs.core.contains_QMARK_.call(null, value_map, ky_2851)) {
                var val_2853__$1 = cljs.core.truth_(val_2852) ? val_2852 : "";
                enfocus.core.set_form_input.call(null, val_2853__$1).call(null, el_2850);
              } else {
              }
              var G__2854 = cljs.core.next.call(null, seq__2834__$1);
              var G__2855 = null;
              var G__2856 = 0;
              var G__2857 = 0;
              seq__2834 = G__2854;
              chunk__2835 = G__2855;
              count__2836 = G__2856;
              i__2837 = G__2857;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  };
};
enfocus.core.html = function enfocus$core$html(node_spec) {
  if (typeof node_spec === "string") {
    return document.createTextNode(node_spec);
  } else {
    if (cljs.core.vector_QMARK_.call(null, node_spec)) {
      var vec__2858 = node_spec;
      var seq__2859 = cljs.core.seq.call(null, vec__2858);
      var first__2860 = cljs.core.first.call(null, seq__2859);
      var seq__2859__$1 = cljs.core.next.call(null, seq__2859);
      var tag = first__2860;
      var vec__2861 = seq__2859__$1;
      var seq__2862 = cljs.core.seq.call(null, vec__2861);
      var first__2863 = cljs.core.first.call(null, seq__2862);
      var seq__2862__$1 = cljs.core.next.call(null, seq__2862);
      var m = first__2863;
      var ms = seq__2862__$1;
      var more = vec__2861;
      var vec__2864 = cljs.core.name.call(null, tag).split(/(?=[#.])/);
      var seq__2865 = cljs.core.seq.call(null, vec__2864);
      var first__2866 = cljs.core.first.call(null, seq__2865);
      var seq__2865__$1 = cljs.core.next.call(null, seq__2865);
      var tag_name = first__2866;
      var segments = seq__2865__$1;
      var id = cljs.core.some.call(null, function(vec__2858, seq__2859, first__2860, seq__2859__$1, tag, vec__2861, seq__2862, first__2863, seq__2862__$1, m, ms, more, vec__2864, seq__2865, first__2866, seq__2865__$1, tag_name, segments) {
        return function(seg) {
          if (cljs.core._EQ_.call(null, "#", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1);
          } else {
            return null;
          }
        };
      }(vec__2858, seq__2859, first__2860, seq__2859__$1, tag, vec__2861, seq__2862, first__2863, seq__2862__$1, m, ms, more, vec__2864, seq__2865, first__2866, seq__2865__$1, tag_name, segments), segments);
      var classes = cljs.core.keep.call(null, function(vec__2858, seq__2859, first__2860, seq__2859__$1, tag, vec__2861, seq__2862, first__2863, seq__2862__$1, m, ms, more, vec__2864, seq__2865, first__2866, seq__2865__$1, tag_name, segments, id) {
        return function(seg) {
          if (cljs.core._EQ_.call(null, ".", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1);
          } else {
            return null;
          }
        };
      }(vec__2858, seq__2859, first__2860, seq__2859__$1, tag, vec__2861, seq__2862, first__2863, seq__2862__$1, m, ms, more, vec__2864, seq__2865, first__2866, seq__2865__$1, tag_name, segments, id), segments);
      var attrs = cljs.core.map_QMARK_.call(null, m) ? m : cljs.core.PersistentArrayMap.EMPTY;
      var attrs__$1 = cljs.core.truth_(id) ? cljs.core.assoc.call(null, attrs, new cljs.core.Keyword(null, "id", "id", -1388402092), id) : attrs;
      var attrs__$2 = !cljs.core.empty_QMARK_.call(null, classes) ? cljs.core.assoc.call(null, attrs__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", classes))) : attrs__$1;
      var content = cljs.core.flatten.call(null, cljs.core.map.call(null, enfocus.core.html, cljs.core.map_QMARK_.call(null, m) ? ms : more));
      var node = document.createElement(tag_name);
      var seq__2867_2877 = cljs.core.seq.call(null, attrs__$2);
      var chunk__2868_2878 = null;
      var count__2869_2879 = 0;
      var i__2870_2880 = 0;
      while (true) {
        if (i__2870_2880 < count__2869_2879) {
          var vec__2871_2881 = cljs.core._nth.call(null, chunk__2868_2878, i__2870_2880);
          var key_2882 = cljs.core.nth.call(null, vec__2871_2881, 0, null);
          var val_2883 = cljs.core.nth.call(null, vec__2871_2881, 1, null);
          node.setAttribute(cljs.core.name.call(null, key_2882), val_2883);
          var G__2884 = seq__2867_2877;
          var G__2885 = chunk__2868_2878;
          var G__2886 = count__2869_2879;
          var G__2887 = i__2870_2880 + 1;
          seq__2867_2877 = G__2884;
          chunk__2868_2878 = G__2885;
          count__2869_2879 = G__2886;
          i__2870_2880 = G__2887;
          continue;
        } else {
          var temp__4657__auto___2888 = cljs.core.seq.call(null, seq__2867_2877);
          if (temp__4657__auto___2888) {
            var seq__2867_2889__$1 = temp__4657__auto___2888;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2867_2889__$1)) {
              var c__4319__auto___2890 = cljs.core.chunk_first.call(null, seq__2867_2889__$1);
              var G__2891 = cljs.core.chunk_rest.call(null, seq__2867_2889__$1);
              var G__2892 = c__4319__auto___2890;
              var G__2893 = cljs.core.count.call(null, c__4319__auto___2890);
              var G__2894 = 0;
              seq__2867_2877 = G__2891;
              chunk__2868_2878 = G__2892;
              count__2869_2879 = G__2893;
              i__2870_2880 = G__2894;
              continue;
            } else {
              var vec__2874_2895 = cljs.core.first.call(null, seq__2867_2889__$1);
              var key_2896 = cljs.core.nth.call(null, vec__2874_2895, 0, null);
              var val_2897 = cljs.core.nth.call(null, vec__2874_2895, 1, null);
              node.setAttribute(cljs.core.name.call(null, key_2896), val_2897);
              var G__2898 = cljs.core.next.call(null, seq__2867_2889__$1);
              var G__2899 = null;
              var G__2900 = 0;
              var G__2901 = 0;
              seq__2867_2877 = G__2898;
              chunk__2868_2878 = G__2899;
              count__2869_2879 = G__2900;
              i__2870_2880 = G__2901;
              continue;
            }
          } else {
          }
        }
        break;
      }
      if (cljs.core.truth_(content)) {
        return domina.append_BANG_.call(null, node, content);
      } else {
        return null;
      }
    } else {
      if (cljs.core.sequential_QMARK_.call(null, node_spec)) {
        return cljs.core.flatten.call(null, cljs.core.map.call(null, enfocus.core.html, node_spec));
      } else {
        return document.createTextNode([cljs.core.str.cljs$core$IFn$_invoke$arity$1(node_spec)].join(""));
      }
    }
  }
};
enfocus.core.get_attr = function enfocus$core$get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr));
  });
};
enfocus.core.get_text = function enfocus$core$get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod);
  });
};
enfocus.core.get_data = function enfocus$core$get_data(var_args) {
  var G__2903 = arguments.length;
  switch(G__2903) {
    case 1:
      return enfocus.core.get_data.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.get_data.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.get_data.cljs$core$IFn$_invoke$arity$1 = function(ky) {
  return enfocus.core.get_data.call(null, ky, false);
};
enfocus.core.get_data.cljs$core$IFn$_invoke$arity$2 = function(ky, bubble) {
  return enfocus.core.extr_multi_node.call(null, function(node) {
    return domina.get_data.call(null, node, ky, bubble);
  });
};
enfocus.core.get_data.cljs$lang$maxFixedArity = 2;
enfocus.core.get_prop = function enfocus$core$get_prop(prop) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod[cljs.core.name.call(null, prop)];
  });
};
enfocus.core.merge_form_val = function enfocus$core$merge_form_val(form_map, ky, val) {
  var mval = form_map.call(null, ky);
  if (cljs.core.truth_(val)) {
    if (cljs.core.coll_QMARK_.call(null, mval) && cljs.core.coll_QMARK_.call(null, val)) {
      return cljs.core.assoc.call(null, form_map, ky, cljs.core.into.call(null, mval, val));
    } else {
      if (cljs.core.coll_QMARK_.call(null, mval)) {
        return cljs.core.assoc.call(null, form_map, ky, cljs.core.conj.call(null, mval, val));
      } else {
        if (cljs.core.truth_(mval)) {
          return cljs.core.assoc.call(null, form_map, ky, cljs.core.PersistentHashSet.createAsIfByAssoc([mval, val]));
        } else {
          return cljs.core.assoc.call(null, form_map, ky, val);
        }
      }
    }
  } else {
    return form_map;
  }
};
enfocus.core.read_form_input = function enfocus$core$read_form_input() {
  var trans = function(nodes, chain) {
    var nod_col = enfocus.core.nodes__GT_coll.call(null, nodes);
    var result = cljs.core.reduce.call(null, function(nod_col) {
      return function(p1__2906_SHARP_, p2__2905_SHARP_) {
        var vals = cljs.core.js__GT_clj.call(null, goog.dom.forms.getValue(p2__2905_SHARP_));
        if (!(typeof vals === "string") && cljs.core.coll_QMARK_.call(null, vals)) {
          return cljs.core.into.call(null, p1__2906_SHARP_, vals);
        } else {
          if (cljs.core.truth_(vals)) {
            return cljs.core.conj.call(null, p1__2906_SHARP_, vals);
          } else {
            return p1__2906_SHARP_;
          }
        }
      };
    }(nod_col), cljs.core.PersistentHashSet.EMPTY, nod_col);
    if (cljs.core.empty_QMARK_.call(null, result)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, result)) && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["checkbox", null, "select-multiple", null], null), null)).call(null, cljs.core.first.call(null, nod_col).type))) {
        return cljs.core.first.call(null, result);
      } else {
        return result;
      }
    }
  };
  if (typeof enfocus.core.t_enfocus$core2907 !== "undefined") {
  } else {
    enfocus.core.t_enfocus$core2907 = function(trans, meta2908) {
      this.trans = trans;
      this.meta2908 = meta2908;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    enfocus.core.t_enfocus$core2907.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
      return function(_2909, meta2908__$1) {
        var self__ = this;
        var _2909__$1 = this;
        return new enfocus.core.t_enfocus$core2907(self__.trans, meta2908__$1);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
      return function(_2909) {
        var self__ = this;
        var _2909__$1 = this;
        return self__.meta2908;
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.enfocus$core$ITransform$ = cljs.core.PROTOCOL_SENTINEL;
    enfocus.core.t_enfocus$core2907.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
      return function(_, nodes) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
      return function(_, nodes, chain) {
        var self__ = this;
        var ___$1 = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.call = function(trans) {
      return function() {
        var G__2911 = null;
        var G__2911__2 = function(self__, nodes) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, null);
        };
        var G__2911__3 = function(self__, nodes, chain) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          return self__.trans.call(null, nodes, chain);
        };
        G__2911 = function(self__, nodes, chain) {
          switch(arguments.length) {
            case 2:
              return G__2911__2.call(this, self__, nodes);
            case 3:
              return G__2911__3.call(this, self__, nodes, chain);
          }
          throw new Error("Invalid arity: " + (arguments.length - 1));
        };
        G__2911.cljs$core$IFn$_invoke$arity$2 = G__2911__2;
        G__2911.cljs$core$IFn$_invoke$arity$3 = G__2911__3;
        return G__2911;
      }();
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.apply = function(trans) {
      return function(self__, args2910) {
        var self__ = this;
        var self____$1 = this;
        return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args2910)));
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
      return function(nodes) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
      return function(nodes, chain) {
        var self__ = this;
        var _ = this;
        return self__.trans.call(null, nodes, chain);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.getBasis = function(trans) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "trans", "trans", 322027676, null), new cljs.core.Symbol(null, "meta2908", "meta2908", -1156441821, null)], null);
      };
    }(trans);
    enfocus.core.t_enfocus$core2907.cljs$lang$type = true;
    enfocus.core.t_enfocus$core2907.cljs$lang$ctorStr = "enfocus.core/t_enfocus$core2907";
    enfocus.core.t_enfocus$core2907.cljs$lang$ctorPrWriter = function(trans) {
      return function(this__4161__auto__, writer__4162__auto__, opt__4163__auto__) {
        return cljs.core._write.call(null, writer__4162__auto__, "enfocus.core/t_enfocus$core2907");
      };
    }(trans);
    enfocus.core.__GT_t_enfocus$core2907 = function(trans) {
      return function enfocus$core$read_form_input_$___GT_t_enfocus$core2907(trans__$1, meta2908) {
        return new enfocus.core.t_enfocus$core2907(trans__$1, meta2908);
      };
    }(trans);
  }
  return new enfocus.core.t_enfocus$core2907(trans, cljs.core.PersistentArrayMap.EMPTY);
};
enfocus.core.read_form = function enfocus$core$read_form() {
  return enfocus.core.extr_multi_node.call(null, function(node) {
    var inputs = node.elements;
    return cljs.core.reduce.call(null, function(inputs) {
      return function(p1__2913_SHARP_, p2__2912_SHARP_) {
        if (!cljs.core.empty_QMARK_.call(null, inputs.item(p2__2912_SHARP_).name)) {
          return enfocus.core.merge_form_val.call(null, p1__2913_SHARP_, cljs.core.keyword.call(null, inputs.item(p2__2912_SHARP_).name), enfocus.core.read_form_input.call(null).call(null, inputs.item(p2__2912_SHARP_)));
        } else {
          return p1__2913_SHARP_;
        }
      };
    }(inputs), cljs.core.PersistentArrayMap.EMPTY, cljs.core.range.call(null, inputs.length));
  });
};
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.filter = function enfocus$core$filter(tst, trans) {
  return enfocus.core.multi_node_chain.call(null, function() {
    var enfocus$core$filter_$_filt = null;
    var enfocus$core$filter_$_filt__1 = function(pnodes) {
      return enfocus$core$filter_$_filt.call(null, pnodes, null);
    };
    var enfocus$core$filter_$_filt__2 = function(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest = tst instanceof cljs.core.Keyword ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res = cljs.core.filter.call(null, ttest, pnod_col);
      if (chain == null) {
        return enfocus.core.apply_transform.call(null, trans, res);
      } else {
        return enfocus.core.apply_transform.call(null, trans, res, chain);
      }
    };
    enfocus$core$filter_$_filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return enfocus$core$filter_$_filt__1.call(this, pnodes);
        case 2:
          return enfocus$core$filter_$_filt__2.call(this, pnodes, chain);
      }
      throw new Error("Invalid arity: " + (arguments.length - 1));
    };
    enfocus$core$filter_$_filt.cljs$core$IFn$_invoke$arity$1 = enfocus$core$filter_$_filt__1;
    enfocus$core$filter_$_filt.cljs$core$IFn$_invoke$arity$2 = enfocus$core$filter_$_filt__2;
    return enfocus$core$filter_$_filt;
  }());
};
enfocus.core.register_filter = function enfocus$core$register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func);
};
enfocus.core.selected_options = function enfocus$core$selected_options(pnod) {
  return pnod.selected;
};
enfocus.core.checked_radio_checkbox = function enfocus$core$checked_radio_checkbox(pnod) {
  return pnod.checked;
};
enfocus.core.register_filter.call(null, new cljs.core.Keyword(null, "selected", "selected", 574897764), enfocus.core.selected_options);
enfocus.core.register_filter.call(null, new cljs.core.Keyword(null, "checked", "checked", -50955819), enfocus.core.checked_radio_checkbox);
enfocus.core.match_QMARK_ = function enfocus$core$match_QMARK_(selector) {
  return function(node) {
    if (cljs.core.truth_(node["matches"])) {
      return node.matches(selector);
    } else {
      if (cljs.core.truth_(node["matchesSelector"])) {
        return node.matchesSelector(selector);
      } else {
        if (cljs.core.truth_(node["msMatchesSelector"])) {
          return node.msMatchesSelector(selector);
        } else {
          if (cljs.core.truth_(node["mozMatchesSelector"])) {
            return node.mozMatchesSelector(selector);
          } else {
            if (cljs.core.truth_(node["webkitMatchesSelector"])) {
              return node.webkitMatchesSelector(selector);
            } else {
              return cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([node]), enfocus.core.nodes__GT_coll.call(null, enfocus.core.select.call(null, node)));
            }
          }
        }
      }
    }
  };
};
enfocus.core.create_sel_str = function enfocus$core$create_sel_str(var_args) {
  var G__2916 = arguments.length;
  switch(G__2916) {
    case 1:
      return enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$1 = function(css_sel) {
  return enfocus.core.create_sel_str.call(null, "", css_sel);
};
enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$2 = function(id_mask_sym, css_sel) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__2914_SHARP_) {
    if (p1__2914_SHARP_ instanceof cljs.core.Symbol) {
      return enfocus.core.css_syms.call(null, p1__2914_SHARP_);
    } else {
      if (p1__2914_SHARP_ instanceof cljs.core.Keyword) {
        return [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, p1__2914_SHARP_).replace("#", ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(id_mask_sym)].join("")))].join("");
      } else {
        if (cljs.core.vector_QMARK_.call(null, p1__2914_SHARP_)) {
          return enfocus.core.create_sel_str.call(null, p1__2914_SHARP_);
        } else {
          if (typeof p1__2914_SHARP_ === "string") {
            return p1__2914_SHARP_.replace("#", ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(id_mask_sym)].join(""));
          } else {
            return null;
          }
        }
      }
    }
  }, css_sel));
};
enfocus.core.create_sel_str.cljs$lang$maxFixedArity = 2;
enfocus.core.css_select = function enfocus$core$css_select(var_args) {
  var G__2919 = arguments.length;
  switch(G__2919) {
    case 1:
      return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
enfocus.core.css_select.cljs$core$IFn$_invoke$arity$1 = function(css_sel) {
  return enfocus.core.css_select.call(null, "", document, css_sel);
};
enfocus.core.css_select.cljs$core$IFn$_invoke$arity$2 = function(dom_node, css_sel) {
  return enfocus.core.css_select.call(null, "", dom_node, css_sel);
};
enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3 = function(id_mask_sym, dom_node, css_sel) {
  var sel = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
  var ret = domina.css.sel.call(null, dom_node, sel);
  return ret;
};
enfocus.core.css_select.cljs$lang$maxFixedArity = 3;
enfocus.core.nil_t = function enfocus$core$nil_t(func) {
  var or__3922__auto__ = func;
  if (cljs.core.truth_(or__3922__auto__)) {
    return or__3922__auto__;
  } else {
    return enfocus.core.remove_node;
  }
};
enfocus.core.i_at = function enfocus$core$i_at(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2939 = arguments.length;
  var i__4500__auto___2940 = 0;
  while (true) {
    if (i__4500__auto___2940 < len__4499__auto___2939) {
      args__4502__auto__.push(arguments[i__4500__auto___2940]);
      var G__2941 = i__4500__auto___2940 + 1;
      i__4500__auto___2940 = G__2941;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 2 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(2), 0, null) : null;
  return enfocus.core.i_at.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4503__auto__);
};
enfocus.core.i_at.cljs$core$IFn$_invoke$arity$variadic = function(id_mask, node, trans) {
  var cnt = cljs.core.count.call(null, trans);
  var sel_QMARK_ = function() {
    var and__3911__auto__ = !(node == null);
    if (and__3911__auto__) {
      if (!(node == null)) {
        if (false || cljs.core.PROTOCOL_SENTINEL === node.enfocus$core$ISelector$) {
          return true;
        } else {
          if (!node.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, enfocus.core.ISelector, node);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, enfocus.core.ISelector, node);
      }
    } else {
      return and__3911__auto__;
    }
  }();
  if (!sel_QMARK_ && cljs.core._EQ_.call(null, 1, cnt)) {
    return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node);
  } else {
    var vec__2926 = sel_QMARK_ ? new cljs.core.List(null, document, new cljs.core.List(null, cljs.core.conj.call(null, trans, node), null, 1, null), 2, null) : new cljs.core.List(null, node, new cljs.core.List(null, trans, null, 1, null), 2, null);
    var node__$1 = cljs.core.nth.call(null, vec__2926, 0, null);
    var trans__$1 = cljs.core.nth.call(null, vec__2926, 1, null);
    var seq__2929 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans__$1));
    var chunk__2930 = null;
    var count__2931 = 0;
    var i__2932 = 0;
    while (true) {
      if (i__2932 < count__2931) {
        var vec__2933 = cljs.core._nth.call(null, chunk__2930, i__2932);
        var sel = cljs.core.nth.call(null, vec__2933, 0, null);
        var t = cljs.core.nth.call(null, vec__2933, 1, null);
        enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
        var G__2942 = seq__2929;
        var G__2943 = chunk__2930;
        var G__2944 = count__2931;
        var G__2945 = i__2932 + 1;
        seq__2929 = G__2942;
        chunk__2930 = G__2943;
        count__2931 = G__2944;
        i__2932 = G__2945;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__2929);
        if (temp__4657__auto__) {
          var seq__2929__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2929__$1)) {
            var c__4319__auto__ = cljs.core.chunk_first.call(null, seq__2929__$1);
            var G__2946 = cljs.core.chunk_rest.call(null, seq__2929__$1);
            var G__2947 = c__4319__auto__;
            var G__2948 = cljs.core.count.call(null, c__4319__auto__);
            var G__2949 = 0;
            seq__2929 = G__2946;
            chunk__2930 = G__2947;
            count__2931 = G__2948;
            i__2932 = G__2949;
            continue;
          } else {
            var vec__2936 = cljs.core.first.call(null, seq__2929__$1);
            var sel = cljs.core.nth.call(null, vec__2936, 0, null);
            var t = cljs.core.nth.call(null, vec__2936, 1, null);
            enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
            var G__2950 = cljs.core.next.call(null, seq__2929__$1);
            var G__2951 = null;
            var G__2952 = 0;
            var G__2953 = 0;
            seq__2929 = G__2950;
            chunk__2930 = G__2951;
            count__2931 = G__2952;
            i__2932 = G__2953;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }
};
enfocus.core.i_at.cljs$lang$maxFixedArity = 2;
enfocus.core.i_at.cljs$lang$applyTo = function(seq2921) {
  var G__2922 = cljs.core.first.call(null, seq2921);
  var seq2921__$1 = cljs.core.next.call(null, seq2921);
  var G__2923 = cljs.core.first.call(null, seq2921__$1);
  var seq2921__$2 = cljs.core.next.call(null, seq2921__$1);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2922, G__2923, seq2921__$2);
};
enfocus.core.at = function enfocus$core$at(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2956 = arguments.length;
  var i__4500__auto___2957 = 0;
  while (true) {
    if (i__4500__auto___2957 < len__4499__auto___2956) {
      args__4502__auto__.push(arguments[i__4500__auto___2957]);
      var G__2958 = i__4500__auto___2957 + 1;
      i__4500__auto___2957 = G__2958;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return enfocus.core.at.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
enfocus.core.at.cljs$core$IFn$_invoke$arity$variadic = function(node, trans) {
  return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans);
};
enfocus.core.at.cljs$lang$maxFixedArity = 1;
enfocus.core.at.cljs$lang$applyTo = function(seq2954) {
  var G__2955 = cljs.core.first.call(null, seq2954);
  var seq2954__$1 = cljs.core.next.call(null, seq2954);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2955, seq2954__$1);
};
enfocus.core.from = function enfocus$core$from(var_args) {
  var args__4502__auto__ = [];
  var len__4499__auto___2969 = arguments.length;
  var i__4500__auto___2970 = 0;
  while (true) {
    if (i__4500__auto___2970 < len__4499__auto___2969) {
      args__4502__auto__.push(arguments[i__4500__auto___2970]);
      var G__2971 = i__4500__auto___2970 + 1;
      i__4500__auto___2970 = G__2971;
      continue;
    } else {
    }
    break;
  }
  var argseq__4503__auto__ = 1 < args__4502__auto__.length ? new cljs.core.IndexedSeq(args__4502__auto__.slice(1), 0, null) : null;
  return enfocus.core.from.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4503__auto__);
};
enfocus.core.from.cljs$core$IFn$_invoke$arity$variadic = function(node, trans) {
  var cnt = cljs.core.count.call(null, trans);
  var sel_QMARK_ = !(node == null) ? false || cljs.core.PROTOCOL_SENTINEL === node.enfocus$core$ISelector$ ? true : !node.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, enfocus.core.ISelector, node) : false : cljs.core.native_satisfies_QMARK_.call(null, enfocus.core.ISelector, node);
  if (sel_QMARK_ && cljs.core._EQ_.call(null, 1, cnt)) {
    return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), enfocus.core.select.call(null, node));
  } else {
    if (cljs.core._EQ_.call(null, 1, cnt)) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node);
    } else {
      var vec__2962 = sel_QMARK_ ? new cljs.core.List(null, document, new cljs.core.List(null, cljs.core.conj.call(null, trans, node), null, 1, null), 2, null) : new cljs.core.List(null, node, new cljs.core.List(null, trans, null, 1, null), 2, null);
      var node__$1 = cljs.core.nth.call(null, vec__2962, 0, null);
      var trans__$1 = cljs.core.nth.call(null, vec__2962, 1, null);
      return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(vec__2962, node__$1, trans__$1, cnt, sel_QMARK_) {
        return function(p__2965) {
          var vec__2966 = p__2965;
          var ky = cljs.core.nth.call(null, vec__2966, 0, null);
          var sel = cljs.core.nth.call(null, vec__2966, 1, null);
          var ext = cljs.core.nth.call(null, vec__2966, 2, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ky, enfocus.core.apply_transform.call(null, ext, enfocus.core.select.call(null, sel, node__$1, ""))], null);
        };
      }(vec__2962, node__$1, trans__$1, cnt, sel_QMARK_), cljs.core.partition.call(null, 3, trans__$1)));
    }
  }
};
enfocus.core.from.cljs$lang$maxFixedArity = 1;
enfocus.core.from.cljs$lang$applyTo = function(seq2959) {
  var G__2960 = cljs.core.first.call(null, seq2959);
  var seq2959__$1 = cljs.core.next.call(null, seq2959);
  var self__4486__auto__ = this;
  return self__4486__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2960, seq2959__$1);
};
enfocus.core.xpath = function enfocus$core$xpath(path) {
  return function(root, id_mask) {
    if (cljs.core.empty_QMARK_.call(null, id_mask)) {
      return domina.xpath.xpath.call(null, root, path);
    } else {
      var tmp = path.replace("@ID\x3d'", ["@ID\x3d'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(id_mask)].join(""));
      var mpath = path.replace("@id\x3d'", ["@id\x3d'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(id_mask)].join(""));
      return domina.xpath.xpath.call(null, root, mpath);
    }
  };
};
enfocus.core.this_node = function enfocus$core$this_node(root, id_mask) {
  return root;
};
if (cljs.core.truth_(typeof Text != "undefined")) {
  Text.prototype.domina$DomContent$ = cljs.core.PROTOCOL_SENTINEL;
  Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
    var content__$1 = this;
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content__$1], null);
  };
  Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
    var content__$1 = this;
    return content__$1;
  };
} else {
}
goog.object.set(enfocus.core.ISelector, "function", true);
goog.object.set(enfocus.core.select, "function", function() {
  var G__2972 = null;
  var G__2972__1 = function(this$) {
    return enfocus.core.select.call(null, this$, document, "");
  };
  var G__2972__2 = function(this$, root) {
    return enfocus.core.select.call(null, this$, root, "");
  };
  var G__2972__3 = function(this$, root, id_mask) {
    return this$.call(null, root, id_mask);
  };
  G__2972 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__2972__1.call(this, this$);
      case 2:
        return G__2972__2.call(this, this$, root);
      case 3:
        return G__2972__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2972.cljs$core$IFn$_invoke$arity$1 = G__2972__1;
  G__2972.cljs$core$IFn$_invoke$arity$2 = G__2972__2;
  G__2972.cljs$core$IFn$_invoke$arity$3 = G__2972__3;
  return G__2972;
}());
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  var this$__$1 = this;
  return enfocus.core.select.call(null, this$__$1, document, "");
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  var this$__$1 = this;
  return enfocus.core.select.call(null, this$__$1, root, "");
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  var this$__$1 = this;
  return enfocus.core.css_select.call(null, id_mask, root, this$__$1);
};
goog.object.set(enfocus.core.ISelector, "string", true);
goog.object.set(enfocus.core.select, "string", function() {
  var G__2973 = null;
  var G__2973__1 = function(this$) {
    return enfocus.core.select.call(null, this$, document, "");
  };
  var G__2973__2 = function(this$, root) {
    return enfocus.core.select.call(null, this$, root, "");
  };
  var G__2973__3 = function(this$, root, id_mask) {
    return enfocus.core.css_select.call(null, id_mask, root, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$], null));
  };
  G__2973 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__2973__1.call(this, this$);
      case 2:
        return G__2973__2.call(this, this$, root);
      case 3:
        return G__2973__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2973.cljs$core$IFn$_invoke$arity$1 = G__2973__1;
  G__2973.cljs$core$IFn$_invoke$arity$2 = G__2973__2;
  G__2973.cljs$core$IFn$_invoke$arity$3 = G__2973__3;
  return G__2973;
}());
goog.object.set(enfocus.core.ISelector, "null", true);
goog.object.set(enfocus.core.select, "null", function() {
  var G__2974 = null;
  var G__2974__1 = function(this$) {
    return cljs.core.List.EMPTY;
  };
  var G__2974__2 = function(this$, root) {
    return cljs.core.List.EMPTY;
  };
  var G__2974__3 = function(this$, root, id_mask) {
    return cljs.core.List.EMPTY;
  };
  G__2974 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__2974__1.call(this, this$);
      case 2:
        return G__2974__2.call(this, this$, root);
      case 3:
        return G__2974__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2974.cljs$core$IFn$_invoke$arity$1 = G__2974__1;
  G__2974.cljs$core$IFn$_invoke$arity$2 = G__2974__2;
  G__2974.cljs$core$IFn$_invoke$arity$3 = G__2974__3;
  return G__2974;
}());
goog.object.set(enfocus.core.ITransform, "function", true);
goog.object.set(enfocus.core.apply_transform, "function", function() {
  var G__2975 = null;
  var G__2975__2 = function(trans, nodes) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, trans, enfocus.core.nodes__GT_coll.call(null, nodes)));
  };
  var G__2975__3 = function(trans, nodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, nodes);
    var val = cljs.core.doall.call(null, cljs.core.map.call(null, trans, pnod_col));
    if (cljs.core.truth_(chain)) {
      return enfocus.core.apply_transform.call(null, chain, nodes);
    } else {
      return val;
    }
  };
  G__2975 = function(trans, nodes, chain) {
    switch(arguments.length) {
      case 2:
        return G__2975__2.call(this, trans, nodes);
      case 3:
        return G__2975__3.call(this, trans, nodes, chain);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2975.cljs$core$IFn$_invoke$arity$2 = G__2975__2;
  G__2975.cljs$core$IFn$_invoke$arity$3 = G__2975__3;
  return G__2975;
}());
goog.object.set(enfocus.core.ITransform, "null", true);
goog.object.set(enfocus.core.apply_transform, "null", function() {
  var G__2976 = null;
  var G__2976__2 = function(trans, nodes) {
    return nodes;
  };
  var G__2976__3 = function(trans, nodes, chain) {
    return nodes;
  };
  G__2976 = function(trans, nodes, chain) {
    switch(arguments.length) {
      case 2:
        return G__2976__2.call(this, trans, nodes);
      case 3:
        return G__2976__3.call(this, trans, nodes, chain);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2976.cljs$core$IFn$_invoke$arity$2 = G__2976__2;
  G__2976.cljs$core$IFn$_invoke$arity$3 = G__2976__3;
  return G__2976;
}());
goog.provide("clojure_chat.core");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
goog.require("cljs_http.client");
goog.require("enfocus.core");
goog.require("cljs.core.async");
clojure_chat.core.init = function clojure_chat$core$init() {
  clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
  var c__5450__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5450__auto__) {
    return function() {
      var f__5451__auto__ = function() {
        var switch__5406__auto__ = function(c__5450__auto__) {
          return function(state_7425) {
            var state_val_7426 = state_7425[1];
            if (state_val_7426 === 1) {
              var inst_7417 = cljs_http.client.get.call(null, "/messages");
              var state_7425__$1 = state_7425;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7425__$1, 2, inst_7417);
            } else {
              if (state_val_7426 === 2) {
                var inst_7419 = state_7425[2];
                var inst_7420 = (new cljs.core.Keyword(null, "body", "body", -2049205669)).cljs$core$IFn$_invoke$arity$1(inst_7419);
                var inst_7421 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(inst_7420)].join("");
                var inst_7422 = enfocus.core.content.call(null, inst_7421);
                var inst_7423 = enfocus.core.at.call(null, "#messages", inst_7422);
                var state_7425__$1 = state_7425;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7425__$1, inst_7423);
              } else {
                return null;
              }
            }
          };
        }(c__5450__auto__);
        return function(switch__5406__auto__, c__5450__auto__) {
          return function() {
            var clojure_chat$core$init_$_state_machine__5407__auto__ = null;
            var clojure_chat$core$init_$_state_machine__5407__auto____0 = function() {
              var statearr_7427 = [null, null, null, null, null, null, null];
              statearr_7427[0] = clojure_chat$core$init_$_state_machine__5407__auto__;
              statearr_7427[1] = 1;
              return statearr_7427;
            };
            var clojure_chat$core$init_$_state_machine__5407__auto____1 = function(state_7425) {
              while (true) {
                var ret_value__5408__auto__ = function() {
                  try {
                    while (true) {
                      var result__5409__auto__ = switch__5406__auto__.call(null, state_7425);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5409__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5409__auto__;
                      }
                      break;
                    }
                  } catch (e7428) {
                    if (e7428 instanceof Object) {
                      var ex__5410__auto__ = e7428;
                      var statearr_7429_7431 = state_7425;
                      statearr_7429_7431[5] = ex__5410__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7425);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7428;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5408__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7432 = state_7425;
                  state_7425 = G__7432;
                  continue;
                } else {
                  return ret_value__5408__auto__;
                }
                break;
              }
            };
            clojure_chat$core$init_$_state_machine__5407__auto__ = function(state_7425) {
              switch(arguments.length) {
                case 0:
                  return clojure_chat$core$init_$_state_machine__5407__auto____0.call(this);
                case 1:
                  return clojure_chat$core$init_$_state_machine__5407__auto____1.call(this, state_7425);
              }
              throw new Error("Invalid arity: " + (arguments.length - 1));
            };
            clojure_chat$core$init_$_state_machine__5407__auto__.cljs$core$IFn$_invoke$arity$0 = clojure_chat$core$init_$_state_machine__5407__auto____0;
            clojure_chat$core$init_$_state_machine__5407__auto__.cljs$core$IFn$_invoke$arity$1 = clojure_chat$core$init_$_state_machine__5407__auto____1;
            return clojure_chat$core$init_$_state_machine__5407__auto__;
          }();
        }(switch__5406__auto__, c__5450__auto__);
      }();
      var state__5452__auto__ = function() {
        var statearr_7430 = f__5451__auto__.call(null);
        statearr_7430[6] = c__5450__auto__;
        return statearr_7430;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5452__auto__);
    };
  }(c__5450__auto__));
  return c__5450__auto__;
};
goog.exportSymbol("clojure_chat.core.init", clojure_chat.core.init);
